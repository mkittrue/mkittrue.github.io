<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <url>/2017/12/26/mysql%E8%BF%9E%E6%8E%A5/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><hr>
<p>title: jdbc方式连接sql<br>date: 2017-11-26 14:27:48<br>tags: [mysql,JDBC,数据库连接]<br>categories: </p>
<ul>
<li>数据库<br>description: JDBC（java database connectivity）是一种有关数据库连接的技术</li>
</ul>
<hr>
<h1 id="JDBC基础知识"><a href="#JDBC基础知识" class="headerlink" title="JDBC基础知识"></a>JDBC基础知识</h1><p>JDBC是一种底层的API<br>通过编写java程序，调用标准的sql语句访问数据库，（只需要在程序的业务逻辑中嵌入sql）<br>JDBC不能直接访问数据库，必须依赖数据库厂商提供的JDBC驱动<br><a id="more"></a><br>JDBC同数据库完成以下三个工作：</p>
<ul>
<li>同数据库建立连接</li>
<li>向数据库发送sql语句</li>
<li>处理从数据库返回的结果<br>JDBC提供了很多的类和接口，实现与数据库的连接，这些接口位于java.sql中</li>
</ul>
<h1 id="DirverManager类的常用方法"><a href="#DirverManager类的常用方法" class="headerlink" title="DirverManager类的常用方法"></a>DirverManager类的常用方法</h1><p>getConnection(String url,String user,String password)<br>url：连接数据库的urL;user：用户名；password:密码<br>setLoginTimeout()<br>获取驱动程序试图登录到某一数据库时可以等待的最长时间，以秒为单位<br>println(String message)<br>将一条消息打印到当前的JDBC日志</p>
<h1 id="Connection类的常用方法"><a href="#Connection类的常用方法" class="headerlink" title="Connection类的常用方法"></a>Connection类的常用方法</h1><p>createStatement()<br>创建并返回一个Statement实例，通常在执行无参的sql语句时创建的实例<br>prepareStatement()<br>创建并返回一个<br>println(String message)<br>commit()<br>rollback()<br>close()<br><div id="aplayer8" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer8"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "相思",
					author: "毛阿敏",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%AF%9B%E9%98%BF%E6%95%8F%20-%20%E7%9B%B8%E6%80%9D.mp3",
					pic: "",
				}
			});
		</script></p>
<h1 id="Statement接口（在此嵌入、发送sql语句）"><a href="#Statement接口（在此嵌入、发送sql语句）" class="headerlink" title="Statement接口（在此嵌入、发送sql语句）"></a>Statement接口（在此嵌入、发送sql语句）</h1><p>execute(String sql)<br>执行静态的SELECT语句，该语句可能返回多个结果集<br>executeQuery(String sql)<br>执行给定的SQL语句，该语句返回单个ResultSet对象<br>clearBatch()<br>清空此Statement对象的当前SQL命令列表<br>addBatch(String sql)<br>将给定的SQL命令添加到此Statement对象的当前列表中。如果驱动程序不支持批量处理将抛出异常<br>close()<br>释放Statement实例占用的数据库和JDBD资源                    </p>
<h1 id="可执行动态SQL的接口PreparedStatement"><a href="#可执行动态SQL的接口PreparedStatement" class="headerlink" title="可执行动态SQL的接口PreparedStatement"></a>可执行动态SQL的接口PreparedStatement</h1><h1 id="操作数据库的步骤"><a href="#操作数据库的步骤" class="headerlink" title="操作数据库的步骤"></a>操作数据库的步骤</h1><pre><code>加载JDBC驱动程序    Class.forname(String driverManager)
例如：try{
Class.forname(&quot;net.source.jtds.jdbc.Driver&quot;);
}catch(ClassNotFoundException e){
 e.printStackTrace();
}
创建数据库连接
Connection conn=DriverManager.getConnection(String url,String user,String password);
</code></pre><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetConn</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> Connection conn= <span class="keyword">null</span>;<span class="comment">//创建Connection的对象</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;<span class="comment">//获取数据库连接的方法</span></span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载数据库的驱动</span></span><br><span class="line">			<span class="comment">//指定连接数据库的URL</span></span><br><span class="line">			String url = <span class="string">"jdbc:mysql://localhost:3306/labmemberinfo"</span>;</span><br><span class="line">			String user= <span class="string">"root"</span>;</span><br><span class="line">			String password = <span class="string">"123456"</span>;</span><br><span class="line">			conn = DriverManager.getConnection(url,user,password);</span><br><span class="line">			<span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">				System.out.println(<span class="string">"数据库连接成功"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="comment">//异常处理</span></span><br><span class="line">		<span class="keyword">return</span> conn;<span class="comment">//返回connection对象</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;<span class="comment">//创建GetConn对象</span></span><br><span class="line">		GetConn getConn=<span class="keyword">new</span> GetConn();</span><br><span class="line">		getConn.getConnection();<span class="comment">//调用连接数据库的方法</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[年终总结？]]></title>
      <url>/2017/12/25/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%EF%BC%9F/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>&nbsp;&nbsp;&nbsp;&nbsp;转眼又到月底了，西巴拉啊，感觉时间过的真的好快，敲代码真的是打发时间最好的方式之一，一不小心能错过各种时间点，呵呵，上次说的每个星期跑两次的计划也尼玛完蛋了，之前哥几个一起去黄山的计划眼看特么要黄了啊，好在每天能够坚持午饭和晚饭后，饭后能特么遛个两三圈，别工作还没开始呢，职业病就开始了啊。。。<br><a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;上周经纬过来参加成贤街的硕博人才交流会，自己没忍住也过去了，好吧，看到苏宁软件的招聘了，嗯，心动了，待遇比无锡的要好很多吧，所以自己又想下学期再继续找找IT和互联网方面的了，其实经过这两个月的突击恶补，感觉自己从前端UI设计到后台逻辑的开发以及数据库的交互这一套应该算是入门了吧，也特么奇怪，之前想着转行的时候，一门java语言断断续续看了好久都没坚持下去，没想到短短两个月的时间，java、html、css、javascript、servelet和jsp，以及数据结构算法正在进行中。。。之前的计划进行的有条不紊，看来目标对于自己真的很重要啊，要是之前就笃定目标又不至于浪费那么多的光阴在游戏上了啊，现在想来，工作定了，把自己那游戏电脑卖了还是个明智之举哈。<br>好吧，最近一直被哥几个疯狂洗脑，真的有想再找找工作，我想只要对方对专业要求不强，有笔试的话，自己找到的可能性还是很大的吧（又有点膨胀了。。。），而且待遇各方面的应该比702要好不少吧，纠结啊，万一真的找到了，我又不知道怎么跟人家说啊，人家还邀请自己去参加公司的年会呢，唉，好像自己真的不懂怎么去拒绝啊，再说，这个明显是自己理亏啊。。。走一步，看一步吧，先把自己手头的事做好吧，接下来，数据结构和算法继续看完，换本书继续看、继续敲，另外三大    web框架，ssh，既然三大框架先后没有什么嫁接关系，那就先从工作中需要的spring开始学起吧。。。另外，coding不能停啊，虽然整个还是知识网络铺开来了，但你自己清楚还有很多漏洞要补得的，茶余饭后啥的可以刷刷博客、知乎啥的，尽可能的查漏补缺，框架学完之后，理论上从前端到后端开发理论层面应该是不存在知识盲区了，然后根据时间捡两到三个项目敲一遍，后续如果三月份不让毕业的话，再可以补一些计算专业的一些专业基础课，不需要深入去学，把书过个一到两遍（呵呵，对你来说也就个把礼拜的时间吧），诸如，计算机网络编程，操作系统和编译原理等，另外python和AI方面的知识带着学点吧。。。<br>&nbsp;&nbsp;&nbsp;&nbsp;至于论文，实验数据都有了，过年回家抽个3到5天的把它弄完吧，大不了和同门几个一起毕业吧，就顺水推舟（当然还有要表现出想要毕业的强烈渴望的），正好趁着这段时间恶补一下自己想学的东西，有时间和有机会的话就出去玩玩、看看。。。<br><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer0"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "过的好吗",
					author: "校长",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%A0%A1%E9%95%BF%20-%20%E8%BF%87%E5%BE%97%E5%A5%BD%E5%90%97.mp3",
					pic: "",
				}
			});
		</script><br>&nbsp;&nbsp;&nbsp;&nbsp;最后，只要我还在这里一天，她还是自己心里绕不开的一道坎啊，在这之前，我始终都愿意去相信她也是喜欢过我的吧，所以自被不正经式的书信式告白被拒之后，心里还是很不甘心的，奈何她好像宁愿去相信别人口中的我，也不愿意相信我的一番自说自道，又或者她和自己一样极度的缺少安全感，后来暑假那次所看到的应该是你希望我看到的吧，那算是彻底的拒绝吧，那段时间确实想了很多，最终说服自己结束了就是结束了，不应该再拖泥带水了，所以之后的日子里，虽然有过几次接触，但都不再会望那上面想，只想着维系着这样的关系一直到毕业也挺好，毕业之后世界那么大，可能这辈子都不会再见面了（有时候自己都受不了自己的这一点，一点人情味都不讲），没想到这两个月时间过的这么快，前几天无意和舍友聊起，舍友说他同门看到她和人逛玄武湖了，让我放弃吧，我玩笑着说，我特么早放弃了，唉，心里还是特么的有点酸啊，至少现在可以确定她对我没有感觉了，至少，在我自己心里喜欢一个人的时候，我特么巴不得和全世界的其他的女生都撇清关系，另外，她的交际圈可能要比我的交际圈要大的多和广的多，现在想想，自己一点都不了解她，凭什么说喜欢，与其说喜欢她，倒不如说是喜欢那段时间的她，有意无意流露出的对自己些许的关心和体贴吧，（真应了网上那个段子，单身好多年什么感觉呢，神回复，公交车上，不小心碰到了旁边女生的手，那一刹那连和她未来小孩的名字都想好了。。。）该释然了。。。<br>在感情这块感觉自己一直都不知道怎么做才好，虽然小伙伴们也支了很多的招，说什么吃饭、看电影云云，我在想，我约吃饭，看电影，那对方不就知道我对她有意思可，要是被拒绝了，得多尴尬啊，想想自己这都特么什么逻辑，喜欢一个人，又怕她知道，呵呵，我知道又是自己可怜的自尊心在作怪了，注孤啊，所以前后遇到的两次都是如此，想想先确定关系了，然后顺其自然，该说的话和该做的事也不会不好意思去说和做了…想想本科那次，那时候确实没想过要喜欢一个人，只是单纯地一起自习，一起吃食堂，然后偶尔出去吃一顿，感觉自己那时候真的傻的可爱，就以为只是自习，吃饭，后来在好友的一句玩笑下，发了个短信，试试吧？没想到，她竟然那么痛快的同意了，好啊。。。然后自己又矫情了，觉得平时自学外，其他时间也不属于自己了，无奈当时沉迷游戏，感觉被压得透不过气，后来，她也感觉到了，然后就不了了之了，呵呵，手都没牵过，能特么算恋爱吗。。。上次无意翻qq和微信通讯录，不知道什么时候被删了。。。（这难道是报应？删了也好，女生删也会更好点吧）…<br>然后现在这个，现在想想还好她当时拒绝自己了，不然夹着实验室这座大山还真不知道怎么下去，别自己在整出啥幺蛾子来，让她和自己在实验室都难做。。。<br>就这样吧，第一个发短信，第二个发邮件，事不过三，下次再遇见了，总要有点进步吧，别再整这些虚的了，试着用点心慢慢处吧，恋爱什么的教程啥的也看了不少了，都快成老男人了，脸皮该厚点了，别的方面不好说，但感情这方面，有的时候只需要的一点点勇气，就可以然彼此的生活转个身（怂还想有媳妇？不存在的哦）…另外，虽然不算真的吃过猪肉，但总见过猪跑吧，自己晾人的本事还特么真可以，有时候感觉像个神经病，忽冷忽热，不是谁都受的了的，改改吧，别再端着了，一幅万人莫近的样子，这样吃枣药丸啊，这种事晾着晾着就真的凉了。。。</p>
]]></content>
      
        <categories>
            
            <category> 生活杂感 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Jsp]]></title>
      <url>/2017/12/11/Jsp/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>&lt;%–jsp源代码分为模板数据与元素<br>模板数据就是指代码中的html部分<br>元素指代码中java部分，包括脚本（java代码用&lt;%…%&gt;括起来）<br>以及jsp指令与jsp标签<br> –%&gt;<br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">import</span>=<span class="string">"java.util.*"</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=utf-8"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">Locale</span> <span class="attr">locale</span>=<span class="string">request.getLocale();//获取用户的本地化信息</span></span></span><br><span class="line"><span class="tag"><span class="attr">Calendar</span> <span class="attr">calendar</span>=<span class="string">Calendar.getInstance(locale);//获取用户所在地的时间</span></span></span><br><span class="line"><span class="tag"><span class="attr">int</span> <span class="attr">hour</span>=<span class="string">calendar.get(Calendar.HOUR_OF_DAY);//获取小时</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">greeting</span> =<span class="string">""</span>;</span></span><br><span class="line">if(hour&lt;=6)&#123;</span><br><span class="line">	greeting="凌晨了，您该睡觉了，良好的睡眠是美好一天的开始";</span><br><span class="line">&#125;else if(hour<span class="tag">&lt;<span class="name">=9)&#123;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">greeting</span>=<span class="string">"早上好。早餐应该注意营养。"</span>;</span></span><br><span class="line">&#125;else if(hour&lt;=12)&#123;</span><br><span class="line">	greeting="上午好。工作时注意保护眼睛。";</span><br><span class="line">&#125;else if(hour<span class="tag">&lt;<span class="name">=18)&#123;</span></span></span><br><span class="line"><span class="tag">	<span class="attr">greeting</span>=<span class="string">"下午好"</span>;</span></span><br><span class="line">&#125;else if(hour&lt;=24)&#123;</span><br><span class="line">	greeting="晚上好，放松一下自己，好好休息，睡觉不要太晚哦";</span><br><span class="line">&#125;else &#123;</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line">	<span class="tag">&lt;<span class="name">%--这是jsp注释，可以添加多行</span> <span class="attr">--</span>%&gt;</span>&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>欢迎页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span>    </span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">hour</span> %&gt;</span>&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">greeting</span> %&gt;</span>&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 职场进阶 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[数据结构和算法]]></title>
      <url>/2017/12/09/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="常用的数据结构"><a href="#常用的数据结构" class="headerlink" title="常用的数据结构"></a>常用的数据结构</h1><ol>
<li>数据（Array）<br>数组是一种聚合数据类型，是将具有相同类型的若干变量有序组织在一起的集合，数组可以说是最基本的数据结构，在各编程语言中都有对应，一个数组可以分成多个数组元素，按照数组元素的类型，数组可以分为整型数组/字符型数组等。<a id="more"></a></li>
<li>栈（stack）<br>栈是一种特殊的线性表，其只能在一个表的一个固定端进数据结点的插入和删除操作。栈按照后进先出的原则存储数据，也就是说，先插入的数据将被压入栈底，最后插入的数据在栈顶，读出数据的时候，从栈顶开始逐个读出。栈在汇编语言中，经常用于重要数据的现场保护。</li>
<li>对列（Queue）<br>队列和栈类似，也是一种特殊的线性表，不同的是，队列只允许在表的一端进行插入操作，而在另一端进行删除操作。队列中没有元素时，称为空栈。</li>
<li>链表<br>链表是一种数据元素按照链式存储结构的数据结构，这种存储结构在物理上存在非连续的特点。链表由一系列的数据结构点构成，每个数据点包括数据域和引用域两部分，其中，引用域保存了数据结构总下一个元素存放的地址。链表结构中数据元素的逻辑顺序是通过链表中的引用链次序实现。</li>
<li>树（tree）<br>树是典型的非线性结构，其是包含n个结点的有穷集合K。在树结构中，有且仅有一个根结点，该根结点没有前驱点，在树结构中的其他结点都有且仅有一个前驱结点，而且可以有m个后继结点</li>
<li>图（graph）<br>图是另外一种非线性数据结构，在图结构中，数据结点一般称为顶点，而边是顶点的有序偶对。如果两个顶点之间存在一条边，那么就表示这两个顶点具有相邻关系。</li>
<li>堆（Heap）<br>堆是一种特殊的树形数据结构，我们一般讨论的堆是二叉堆。堆的特点是其根结点的值是所有结点中最小的或者最大的，并且根结点的两个子树也是一个堆结构</li>
<li>散列表（Hash）<br>散列表源自于散列函数（Hash function）,其私下跟是如果在结构中存在关键字和T相等的记录，那么必定在F(T)的存储位置可以找到该记录。</li>
</ol>
<div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer0"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "风云",
					author: "屠洪刚",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E5%B1%A0%E6%B4%AA%E5%88%9A%20-%20%E9%A3%8E%E4%BA%91.mp3",
					pic: "",
				}
			});
		</script>
<h1 id="顺序表的结构"><a href="#顺序表的结构" class="headerlink" title="顺序表的结构"></a>顺序表的结构</h1><p>顺序表就是按照顺序存储的方式存储的线性表，该线性表的结点是按照逻辑一次存放在计算机的一组连续的存储单元。</p>
<h2 id="准备数据（创建符合顺序表结构的数据结构）"><a href="#准备数据（创建符合顺序表结构的数据结构）" class="headerlink" title="准备数据（创建符合顺序表结构的数据结构）"></a>准备数据（创建符合顺序表结构的数据结构）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXLEN=<span class="number">100</span>;                <span class="comment">//定义顺序表的最大长度</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DATA</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    String key;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;                                <span class="comment">//结点的关键字</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SLType</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    DATA[] ListDATA=<span class="keyword">new</span> DATA[MAXLEN+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> ListLen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="初始化顺序表"><a href="#初始化顺序表" class="headerlink" title="初始化顺序表"></a>初始化顺序表</h2><p>所谓的初始化顺序表，首先要创建一个空的顺序表，也就是初始化顺序表</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SLInit</span><span class="params">(SLType SL)</span>                      <span class="comment">//初始化顺序表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SL.ListLen=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="计算顺序表的长度"><a href="#计算顺序表的长度" class="headerlink" title="计算顺序表的长度"></a>计算顺序表的长度</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SLLength</span><span class="params">(SLType SL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>(SL.ListLen);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="插入结点"><a href="#插入结点" class="headerlink" title="插入结点"></a>插入结点</h2><p>插入结点就是在线性表L的第i个位置上插入一个新的结点<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SLInsert</span><span class="params">(SLType SL,<span class="keyword">int</span> n,DATA data)</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">if</span>(SL.ListLen&gt;=MAXLEN)                   <span class="comment">//顺序表结点数量已超过最大数量</span></span><br><span class="line">   &#123;</span><br><span class="line">       System.out.println(<span class="string">"顺序表已满，无法插入结点"</span>);</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(n&lt;<span class="number">1</span>||n&gt;SL.ListLen-<span class="number">1</span>)                  <span class="comment">//插入结点序号不正确</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"插入元素序号错误，不能插入元素！"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=SL.ListLen;i&gt;=n;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        SL.ListData[i+<span class="number">1</span>]=SL.ListData[i];</span><br><span class="line">    &#125;</span><br><span class="line">    SL.ListData[n]=data;                    <span class="comment">//插入结点</span></span><br><span class="line">    SL.ListLen++;                           <span class="comment">//顺序表结点数量加1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="追加结点"><a href="#追加结点" class="headerlink" title="追加结点"></a>追加结点</h2><p>可以认为是插入结点的特殊形式，在顺序表的末端插入，其代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SLAdd</span><span class="params">(SLType SL,DATA data)</span>              <span class="comment">//增加元素到顺序表尾部</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(SL.ListLen&gt;=MAXLEN)                  <span class="comment">//顺序表已满</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"顺序表已满，无法插入"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    SL.ListData[++SL.ListLen]=data;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="删除结点"><a href="#删除结点" class="headerlink" title="删除结点"></a>删除结点</h2><p>就是删除线性表中的第i个结点<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SLDelete</span><span class="params">(SLType SL,<span class="keyword">int</span> n)</span>               <span class="comment">//删除顺序表中的数据元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">1</span>||n&gt;SL.ListLen+<span class="number">1</span>)                 <span class="comment">//删除结点序号不正确</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"删除结点序号错误，无法删除结点！"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                           <span class="comment">//删除不成功，返回0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=n;i&lt;SL.ListLen;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        SL.ListData[i]=SL.ListData[i+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    SL.ListLen--;                           <span class="comment">//顺序表元素数量减一</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;                               <span class="comment">//成功删除，返回1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="查找结点"><a href="#查找结点" class="headerlink" title="查找结点"></a>查找结点</h2><ul>
<li><p>按照序号查找结点</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DATA <span class="title">SLFindByNum</span><span class="params">(SLType SL,<span class="keyword">int</span> n)</span>           <span class="comment">//根据序号返回元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">1</span>||n&gt;SL.ListLen+<span class="number">1</span>)                 <span class="comment">//元素序号不正确</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"结点序号错误，不能返回结点！"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SL.ListData[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>按照关键结点查找结点</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SLFindByNum</span><span class="params">(SLType SL,<span class="keyword">int</span> n)</span>           <span class="comment">//根据序号返回元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=SL.ListLen;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(SL.ListData[i].key.compareTo(key)==<span class="number">0</span>)    <span class="comment">//如果找到所需要的结点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="显示所有结点"><a href="#显示所有结点" class="headerlink" title="显示所有结点"></a>显示所有结点</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//简单地逐个引用结点实现</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SLALL</span><span class="params">(SLType SL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=SL.ListLen;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"(%s,%s,%d)\n"</span>,SL.ListData[i].key,</span><br><span class="line">        SL.ListData[i].name,SL.ListData[i].age);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="链表结构"><a href="#链表结构" class="headerlink" title="链表结构"></a>链表结构</h1><p>典型的链表结构，链表中的每个结点都应该包括如下部分：</p>
<ul>
<li>数据部分，保存的是该结点的实际数据</li>
<li>地址部分，保存的是下一个结点的地址<br>链表还可以分成以下几类：</li>
<li>单链表：每个结点只包含一个引用</li>
<li>双向链表：每个结点包含两个引用，分别指向上个结点和下个结点</li>
<li>单循环链表：在单链表中，将终端结点的引用域null改为指向表头结点或开始结点即可构成的单循环链表</li>
<li>多重链的循环链表：如果将表中的结点链在多环上，将构成多重链的循环链表</li>
</ul>
<h2 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DATA2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    String key;                             <span class="comment">//结点的关键字</span></span><br><span class="line">    String name;                            </span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CLType</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    DATA2 nodeData=<span class="keyword">new</span> DATA2();</span><br><span class="line">    CLType nextNode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="追加结点-1"><a href="#追加结点-1" class="headerlink" title="追加结点"></a>追加结点</h2><p>由于一般情况下，链表只有一个头引用head，要在末尾添加结点就需要从头引用head开始逐个检查，知道最后一个结点，追加结点的操作步骤如下：</p>
<ol>
<li>首先分配内存空间，保存新增的结点</li>
<li>从头引用head开始逐个检查，知道找到最后一个结点(即表尾)</li>
<li>将表尾结点的地点设置为新增结点的地址</li>
<li>将新增的结点的地址部分设置成空地址null，即新增结点称为表尾</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CLType <span class="title">CLAddEnd</span><span class="params">(CLType head,DATA2 nodeData)</span>     <span class="comment">//追加结点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CLType node,htemp</span><br><span class="line">    <span class="keyword">if</span>((node=<span class="keyword">new</span> CLType())==<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"申请内存失败！"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        node.nodeData=nodeData;                 <span class="comment">//保存数据</span></span><br><span class="line">        node.nextNode=<span class="keyword">null</span>;                     <span class="comment">//设置结点引用为空，即为表尾部</span></span><br><span class="line">        <span class="keyword">if</span>(head==<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            head=node;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        htemp=head;</span><br><span class="line">        <span class="keyword">while</span>(htemp.nextNode!=<span class="keyword">null</span>)             <span class="comment">//查找链表的末尾</span></span><br><span class="line">        &#123;</span><br><span class="line">            htemp=htemp.nextNode;</span><br><span class="line">        &#125;</span><br><span class="line">        htemp.nextNode=node;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="插入头结点"><a href="#插入头结点" class="headerlink" title="插入头结点"></a>插入头结点</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CLType <span class="title">CLAddFirst</span><span class="params">(CLType head,DATA2 nodeData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CLType node;</span><br><span class="line">    <span class="keyword">if</span>((node=<span class="keyword">new</span> CLType())==<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"申请内存失败！"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span><span class="string">'</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        node.nodeData=nodeData;             //保存数据</span></span><br><span class="line"><span class="string">        node.nextNode=head;                 //指向头引用所指结点</span></span><br><span class="line"><span class="string">        head=node;</span></span><br><span class="line"><span class="string">        return head;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="查找结点-1"><a href="#查找结点-1" class="headerlink" title="查找结点"></a>查找结点</h2><p>通过关键字查找<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CLType <span class="title">CLFindNode</span><span class="params">(CLType head,String key)</span>   <span class="comment">//查找结点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CLType htemp;</span><br><span class="line">    htemp=head;</span><br><span class="line">    <span class="keyword">while</span>(htemp！=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(htemp.nodeData.key.compareTo(key)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> htemp;</span><br><span class="line">        &#125;</span><br><span class="line">        htemp=htemp.nextNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="队列结构"><a href="#队列结构" class="headerlink" title="队列结构"></a>队列结构</h1><p>在表头进行删除，在表尾进行插入操作，属于<strong>线性结构</strong>，分为：</p>
<ol>
<li>顺序队列结构<br>使用一组地址连续的内存单元依次保存队列中的数据，在程序中，可以定义一个指定大小的结构数组作为队列。</li>
<li>链式队列结构<br>即使用链表形式保存队列中值<br>设计的操作方式有：入队列、出队列</li>
</ol>
<h2 id="准备数据-创建一个队列数据结构"><a href="#准备数据-创建一个队列数据结构" class="headerlink" title="准备数据(创建一个队列数据结构)"></a>准备数据(创建一个队列数据结构)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> QUEUELEN=<span class="number">15</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DATA4</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SQType</span></span>&#123;</span><br><span class="line">    DATA4[] data=<span class="keyword">new</span> DATA4[QUEUELEN];</span><br><span class="line">    <span class="keyword">int</span> head;</span><br><span class="line">    <span class="keyword">int</span> tail;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="初始化队列"><a href="#初始化队列" class="headerlink" title="初始化队列"></a>初始化队列</h2><p>在使用顺序队列之前，首先要创建一个空的顺序队列，即初始化顺序队列，其操作步骤如下：</p>
<ol>
<li>按符号常量QUEUELEN指定大小申请一片内存空间，用来保存队列中的数据</li>
<li>设置head=0和tail=0，表示一个空栈。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">代码<span class="function">SQType <span class="title">SQTypeInit</span><span class="params">()</span></span>&#123;</span><br><span class="line">SQType q;</span><br><span class="line"><span class="keyword">if</span>((q=<span class="keyword">new</span> SQType())!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    q.head=<span class="number">0</span>;</span><br><span class="line">    q.tail=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> q;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="判断空队列"><a href="#判断空队列" class="headerlink" title="判断空队列"></a>判断空队列</h2><p>判断空队列即判断一个队列结构是否为空，如果为空则表示队列结构中没有数据，此时可以进行入队列操作，但不可以进行出队列操作。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SQTypeIsEmpty</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(q.head==q.tail)</span><br><span class="line">        temp=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> (temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="判断满队列"><a href="#判断满队列" class="headerlink" title="判断满队列"></a>判断满队列</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SQTypeFull</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(q.tail==QUEUELEN)</span><br><span class="line">        temp=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> (temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="清空队列"><a href="#清空队列" class="headerlink" title="清空队列"></a>清空队列</h2><p>清空队列即清除队列中的所有数据，清空队列的代码示例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SQTypeClear</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    q.head=<span class="number">0</span>;</span><br><span class="line">    q.tail=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="释放空间"><a href="#释放空间" class="headerlink" title="释放空间"></a>释放空间</h2><p>释放空间即释放队列结构所占用的内存单元，需要使用赋值null操作释放所分配的内存<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SQTypeFree</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        q=<span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="入队列"><a href="#入队列" class="headerlink" title="入队列"></a>入队列</h2><p>入队列是队列结构的基本操作，主要操作是将数据元素保存到队列结构，入队列的具体操作步骤如下：</p>
<ol>
<li>首先判断队列顶tail，如果tail等于QUEUELEN，则表示溢出，进行出错处理；否则执行以下操作；</li>
<li>设置tail=tail+1(队列顶引用加1，指向入队列地址)</li>
<li>将入队列元素保存到tail指向的位置<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InSQType</span><span class="params">(SQType q,DATA4 data)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q.tail==QUEUELEN)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.print(<span class="string">"队列已满！操作失败"</span>);</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        q.data[q.tail++]=data;</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="出队列"><a href="#出队列" class="headerlink" title="出队列"></a>出队列</h2><p>从队列顶删除一个数据，操作步骤如下：</p>
<ol>
<li>判断队列head，如果head等于tail，则表示为空队列，进行出错处理；否则，执行下面的步骤</li>
<li>从队列首部取出队头元素（实际是返回对头元素的引用）</li>
<li>设修改对头head的编号，使其指向后一个元素<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function">DATA4 <span class="title">OutSQType</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(q.head==q.tail)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">"\n队列已空！操作失败"</span>);</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> q.data[q.head++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">``` </span><br><span class="line">## 读结点数据</span><br><span class="line">从head读出数据</span><br><span class="line">```java</span><br><span class="line">    <span class="function">DATA4 <span class="title">PeekSQType</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(SQTypeIsEmpity(q)==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">"\n空队列"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> q.data[q.head];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="计算队列的长度"><a href="#计算队列的长度" class="headerlink" title="计算队列的长度"></a>计算队列的长度</h2><p>即计算队列长度即统计该队列中数据结点的个数<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SQTypeLen</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    temp=q.tail-q.head;</span><br><span class="line">    <span class="keyword">return</span> (temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="树结构"><a href="#树结构" class="headerlink" title="树结构"></a>树结构</h1><p>现实中很多问题都无法抽象为线性数据结构，属于非线性结构。</p>
<h2 id="树结构的基本特征："><a href="#树结构的基本特征：" class="headerlink" title="树结构的基本特征："></a>树结构的基本特征：</h2><ul>
<li>在一个数结构中，有且仅有一个节点没有直接前驱，这个结点就是树的前驱结点</li>
<li>除根结点外，其余每个结点有且仅有一个直接前驱</li>
<li>每个结点可以有任意多个直接后继<h2 id="树结构的基本概念"><a href="#树结构的基本概念" class="headerlink" title="树结构的基本概念"></a>树结构的基本概念</h2></li>
<li>父结点和子结点</li>
<li>兄弟结点</li>
<li>结点的度：一个结点所包含子树的数量</li>
<li>树的度：是指该树所有结点中最大的度</li>
<li>叶结点：树中度为零的结点称为叶结点或终端结点</li>
<li>分支结点：树中度不为零的结点称为分支结点或非终端结点</li>
<li>结点层数：结点的层数从树根开始，根结点为第1层、依次向下为第2、3.。。</li>
<li>树的深度：树中结点的最大层数称为树的深度</li>
<li>有序树：若树中各结点树是按一定的次序从左至右排列的，称为有序树</li>
<li>无序树：若树中各结点的子树（兄弟结点）未按一定次序排列，称为无序树</li>
<li>森林：n(n&gt;0)棵互补相交的树</li>
</ul>
<h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><p>二叉树是最简单的一种形式，处理相对简单，更为重要的是，任意的树都可以转换成对应的二叉树<br>特点：</p>
<ul>
<li>每个结点最多只能有两个子结点</li>
<li>两个结点对应的子树分别称为左子树和右子树</li>
<li>二叉树结点的最大度为2</li>
</ul>
<p>二叉树进一步分为满二叉树和完全二叉树<br>满二叉树即在二叉树中除最下层的叶结点外，每层的结点都有两个子结点；<br>完全二叉树即最后一层结点树并未能达到最大个数，且最后一层叶结点按照从左向右的顺序连续存在，只缺最后一层右侧若干结点</p>
<h2 id="完全二叉树的顺序存储"><a href="#完全二叉树的顺序存储" class="headerlink" title="完全二叉树的顺序存储"></a>完全二叉树的顺序存储</h2><p>顺序存储结构是最基本的数据存储方式，与线性表类似，树结构的顺序一般采用<strong>一维数组</strong>来表示<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> MAXLen=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">char</span>[] SeqBinTree=<span class="keyword">new</span> <span class="keyword">char</span>[MAXLen];</span><br></pre></td></tr></table></figure></p>
<h2 id="完全二叉树的性质"><a href="#完全二叉树的性质" class="headerlink" title="完全二叉树的性质"></a>完全二叉树的性质</h2><p>若树中含有n个结点，假设这些结点的按照顺序方式存储，那么对任意一个结点m来说，具有以下性质：</p>
<ul>
<li>如果m!=1，则结点m的父结点的编号为m/2</li>
<li>如果2<em>m&lt;n，则结点m的左子树根结点的编号为2</em>m;若2*m&gt;n，则无左子树，也没有右子树；</li>
<li>如果2<em>m+1&lt;n，则结点m的右子树根结点编号为2</em>m+1;若2*m+1&gt;n，则无右子树</li>
<li>对于完全二叉树而言，则结点m的右子树根节点编号为[log2n]+1</li>
</ul>
<h2 id="二叉树的链式存储"><a href="#二叉树的链式存储" class="headerlink" title="二叉树的链式存储"></a>二叉树的链式存储</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChainTreeType</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> NodeData;              <span class="comment">//元素数据</span></span><br><span class="line">    ChainTree LSonNode;         <span class="comment">//左子树结点引用</span></span><br><span class="line">    ChainTree RSonNode;         <span class="comment">//右子树结点引用</span></span><br><span class="line">&#125;</span><br><span class="line">ChainTree root=<span class="keyword">null</span>;            <span class="comment">//定义二叉树根结点的引用</span></span><br></pre></td></tr></table></figure>
<pre><code>带父结点的二叉树引用
</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ChainTreeType</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> NodeData;</span><br><span class="line">        ChainTreeType LSonNode;</span><br><span class="line">        ChainTreeType RSonNode;</span><br><span class="line">        Chain ParentNode;</span><br><span class="line">    &#125;</span><br><span class="line">    ChainTreeType root=<span class="keyword">null</span>;</span><br><span class="line">``` </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">## 准备数据（创建一个二叉树数据结构）</span><br><span class="line">```java</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXLEN=<span class="number">20</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CBTType</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        String data;</span><br><span class="line">        CBTtype left;</span><br><span class="line">        CBTtype right;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="初始二叉树"><a href="#初始二叉树" class="headerlink" title="初始二叉树"></a>初始二叉树</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CBType <span class="title">InitTree</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CBTType node;</span><br><span class="line">    <span class="keyword">if</span>((node=<span class="keyword">new</span> CBTType())!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.printf(<span class="string">"请输入一个根结点数据：\n"</span>);</span><br><span class="line">        node.data=input.next();</span><br><span class="line">        node.left=<span class="keyword">null</span>;</span><br><span class="line">        node.right=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(node!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="添加结点"><a href="#添加结点" class="headerlink" title="添加结点"></a>添加结点</h2><p>即在二叉树中添加结点数据，添加结点时除了要输入结点数据外，还需要指定其父结点，以及添加添加的结点是作为左子树和右子树，其代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">AddTreeNode</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        CBTType pnode,parent;</span><br><span class="line">        String data;</span><br><span class="line">        <span class="keyword">int</span> menusel;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>((pnode=<span class="keyword">new</span> CBTType())!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.printf(<span class="string">"请输入二叉树结点数据：\n"</span>);</span><br><span class="line">        pnode.data=input.next();</span><br><span class="line">        pnode.left=<span class="keyword">null</span>;</span><br><span class="line">        pnode.right=<span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">        System.out.printf(<span class="string">"请输入该结点的父结点的数据："</span>);</span><br><span class="line">        data=input.next();</span><br><span class="line">        </span><br><span class="line">        parent=TreeFindNode(treeNode,data);</span><br><span class="line">        <span class="keyword">if</span>(parent==<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.printf(<span class="string">"未找到该父结点"</span>);</span><br><span class="line">            pnode=<span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">"1.添加该结点到左子树\n2.添加到该结点到右子树\n"</span>);</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            menusel=input.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(menusel==<span class="number">1</span>||menusel==<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(parent==<span class="keyword">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.printf(<span class="string">"不存在父结点，请先设置父结点！\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">switch</span>(menusel)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                            <span class="keyword">if</span>(parent.left!=<span class="keyword">null</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                System.out.printf(<span class="string">"左子树结点为空\n"</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                parent.left=pnode;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                            <span class="keyword">if</span>(parent.right!=<span class="keyword">null</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                System.out.printf(<span class="string">"右子树结点不为空\n"</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                parent.right=pnode;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">default</span>;</span><br><span class="line">                            System.out.printf(<span class="string">"无效参数：\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(menusel!=<span class="number">1</span>&amp;&amp;menusel!=<span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="查找结点-2"><a href="#查找结点-2" class="headerlink" title="查找结点"></a>查找结点</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CBTType <span class="title">TreeFindNode</span><span class="params">(CBTType treeNode,String data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CBTType ptr;</span><br><span class="line">    <span class="keyword">if</span>(treeNode==<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(treeNode.data.equals(data))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> treeNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((ptr=TreeFindNode(treeNode.left,data))!=<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ptr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(ptr=TreeFindNode(treeNode.right,data)!=<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ptr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取左子树"><a href="#获取左子树" class="headerlink" title="获取左子树"></a>获取左子树</h2><p>获取左子树即返回当前结点的左子树结点的值，由于在二叉树结构中定义了相应的引用，因此，该操作比较简单。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CBTType <span class="title">TreeLeftNode</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> treeNode.left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="获取右子树"><a href="#获取右子树" class="headerlink" title="获取右子树"></a>获取右子树</h2><p>获取左子树即返回当前结点的左子树结点的值，由于在二叉树结构中定义了相应的引用，因此，该操作比较简单。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CBTType <span class="title">TreeRightNode</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> treeNode.right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="判断空树"><a href="#判断空树" class="headerlink" title="判断空树"></a>判断空树</h2><p>判断空树即判断一个二叉树结构是否为空，如果是空树，则表示该二叉树结构中没有数据，判断空树的代码示例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">TreeIsEmpty</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">```    </span><br><span class="line">## 计算二叉树的深度</span><br><span class="line">```java</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> depleft,depright;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(treeNode==<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            depleft=TreeDepth(treeNode.left);</span><br><span class="line">            depright=TreeDepth(treeNode.right);</span><br><span class="line">            <span class="keyword">if</span>(depleft&gt;depright)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> depleft+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> depright+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="清空二叉树"><a href="#清空二叉树" class="headerlink" title="清空二叉树"></a>清空二叉树</h2><p>清空二叉树即将二叉树变成一颗空树，这里仍需要递归算法实现<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ClearTree(treeNode.left);</span><br><span class="line">        ClearTree(treeNode.right);</span><br><span class="line">        treeNode=<span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="显示结点数据"><a href="#显示结点数据" class="headerlink" title="显示结点数据"></a>显示结点数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">void TreeNodeData(CBTType p)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.printf(&quot;%s&quot;,p.data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h2><p>遍历二叉树即逐个查找二叉树中的所有结点，这是二叉树的基本操作，因此很多操作都需要首先遍历整个二叉树，由于二叉树结构的特殊性，往往可以包含多种方法：</p>
<ul>
<li>先序遍历：即先访问根结点，再按先序遍历左子树，最后按先序遍历右子树，先序遍历一般也称为先根次序遍历，简称为DLR遍历。</li>
<li>中序遍历：即先按照中序遍历左子树，再访问根结点，最后按中序遍历右子树，中序遍历一般也成为中根次序遍历，简称LDR遍历</li>
<li>后续遍历：即先按后序遍历左子树，再按后序遍历右子树，最后访问根接点，后序遍历也称后根次序遍历，简称LRD遍历。</li>
</ul>
<h3 id="按层遍历算法"><a href="#按层遍历算法" class="headerlink" title="按层遍历算法"></a>按层遍历算法</h3><p>首先处理第一层的结点即根结点，然后处理第一层结点所在的左右子树即所谓的第二结点<br>代码示例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LevelTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        CBTType p;</span><br><span class="line">        CBTType[] q=<span class="keyword">new</span> CBTType[MAXLEN];</span><br><span class="line">        <span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tail=(tail+<span class="number">1</span>)%MAXLEN;</span><br><span class="line">            q[tail]=treeNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(head!=tail)</span><br><span class="line">        &#123;</span><br><span class="line">            head=(head+<span class="number">1</span>)%MAXLEN;</span><br><span class="line">            p=q[head];</span><br><span class="line">            TreeNodeData(p);</span><br><span class="line">            <span class="keyword">if</span>(p.left!=<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tail=(tail+<span class="number">1</span>)%MAXLEN;</span><br><span class="line">                q[tail]=p.left;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(p.right!=<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tail=(tail+<span class="number">1</span>)%MAXLEN;</span><br><span class="line">                q[tail]=p.right;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">```    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">### 先序遍历算法</span><br><span class="line">```java</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DLRTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            TreeNodeData(treeNode);</span><br><span class="line">            DLRTree(treeNode.left);</span><br><span class="line">            DLRTree(treeNode.right);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="中序遍历算法"><a href="#中序遍历算法" class="headerlink" title="中序遍历算法"></a>中序遍历算法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LDRTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LDRTree(treeNode.left);</span><br><span class="line">            TreeNodeData(treeNode);</span><br><span class="line">            LDRTree(treeNode.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">```    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">### 中序遍历算法</span><br><span class="line">```java</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LDRTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LDRTree(treeNode.left);</span><br><span class="line">            TreeNodeData(treeNode);</span><br><span class="line">            LDRTree(treeNode.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">### 后序遍历算法</span><br><span class="line">```java</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LRDTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LRDTree(treeNode.left);</span><br><span class="line">            LRDTree(treeNode.right);</span><br><span class="line">            TreeNodeData(treeNode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line"> </span><br><span class="line">在表头进行删除，在表尾进行插入操作，属于线性结构，分为：</span><br><span class="line"> <span class="number">1</span>. 顺序队列结构</span><br><span class="line">    使用一组地址连续的内存单元依次保存队列中的数据，在程序中，可以定义一个指定大小的结构数组作为队列。</span><br><span class="line"> <span class="number">2</span>. 链式队列结构</span><br><span class="line">    即使用链表形式保存队列中值</span><br><span class="line">设计的操作方式有：入队列、出队列</span><br><span class="line"></span><br><span class="line">## 准备数据(创建一个队列数据结构)</span><br><span class="line">```java</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> QUEUELEN=<span class="number">15</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DATA4</span></span>&#123;</span><br><span class="line">        String name;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">SQType</span></span>&#123;</span><br><span class="line">        DATA4[] data=<span class="keyword">new</span> DATA4[QUEUELEN];</span><br><span class="line">        <span class="keyword">int</span> head;</span><br><span class="line">        <span class="keyword">int</span> tail;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h2 id="初始化队列-1"><a href="#初始化队列-1" class="headerlink" title="初始化队列"></a>初始化队列</h2><p>在使用顺序队列之前，首先要创建一个空的顺序队列，即初始化顺序队列，其操作步骤如下：</p>
<ol>
<li>按符号常量QUEUELEN指定大小申请一片内存空间，用来保存队列中的数据</li>
<li>设置head=0和tail=0，表示一个空栈。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SQType <span class="title">SQTypeInit</span><span class="params">()</span></span>&#123;</span><br><span class="line">SQType q;</span><br><span class="line"><span class="keyword">if</span>((q=<span class="keyword">new</span> SQType())!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    q.head=<span class="number">0</span>;</span><br><span class="line">    q.tail=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> q;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="判断空队列-1"><a href="#判断空队列-1" class="headerlink" title="判断空队列"></a>判断空队列</h2><p>判断空队列即判断一个队列结构是否为空，如果为空则表示队列结构中没有数据，此时可以进行入队列操作，但不可以进行出队列操作。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SQTypeIsEmpty</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(q.head==q.tail)</span><br><span class="line">        temp=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> (temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="判断满队列-1"><a href="#判断满队列-1" class="headerlink" title="判断满队列"></a>判断满队列</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SQTypeFull</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(q.tail==QUEUELEN)</span><br><span class="line">        temp=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> (temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="清空队列-1"><a href="#清空队列-1" class="headerlink" title="清空队列"></a>清空队列</h2><p>清空队列即清除队列中的所有数据，清空队列的代码示例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SQTypeClear</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    q.head=<span class="number">0</span>;</span><br><span class="line">    q.tail=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="释放空间-1"><a href="#释放空间-1" class="headerlink" title="释放空间"></a>释放空间</h2><p>释放空间即释放队列结构所占用的内存单元，需要使用赋值null操作释放所分配的内存<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SQTypeFree</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        q=<span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="入队列-1"><a href="#入队列-1" class="headerlink" title="入队列"></a>入队列</h2><p>入队列是队列结构的基本操作，主要操作是将数据元素保存到队列结构，入队列的具体操作步骤如下：</p>
<ol>
<li>首先判断队列顶tail，如果tail等于QUEUELEN，则表示溢出，进行出错处理；否则执行以下操作；</li>
<li>设置tail=tail+1(队列顶引用加1，指向入队列地址)</li>
<li>将入队列元素保存到tail指向的位置<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InSQType</span><span class="params">(SQType q,DATA4 data)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(q.tail==QUEUELEN)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.print(<span class="string">"队列已满！操作失败"</span>);</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        q.data[q.tail++]=data;</span><br><span class="line">        <span class="keyword">return</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="出队列-1"><a href="#出队列-1" class="headerlink" title="出队列"></a>出队列</h2><p>从队列顶删除一个数据，操作步骤如下：</p>
<ol>
<li>判断队列head，如果head等于tail，则表示为空队列，进行出错处理；否则，执行下面的步骤</li>
<li>从队列首部取出队头元素（实际是返回对头元素的引用）</li>
<li>设修改对头head的编号，使其指向后一个元素<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function">DATA4 <span class="title">OutSQType</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(q.head==q.tail)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">"\n队列已空！操作失败"</span>);</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> q.data[q.head++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">``` </span><br><span class="line">## 读结点数据</span><br><span class="line">从head读出数据</span><br><span class="line">```java</span><br><span class="line">    <span class="function">DATA4 <span class="title">PeekSQType</span><span class="params">(SQType q)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(SQTypeIsEmpity(q)==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">"\n空队列"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> q.data[q.head];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="计算队列的长度-1"><a href="#计算队列的长度-1" class="headerlink" title="计算队列的长度"></a>计算队列的长度</h2><p>即计算队列长度即统计该队列中数据结点的个数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int SQTypeLen(SQType q)</span><br><span class="line">&#123;</span><br><span class="line">    int temp;</span><br><span class="line">    temp=q.tail-q.head;</span><br><span class="line">    return (temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="树结构-1"><a href="#树结构-1" class="headerlink" title="树结构"></a>树结构</h1><p>现实中很多问题都无法抽象为线性数据结构，属于非线性结构。</p>
<h2 id="树结构的基本特征：-1"><a href="#树结构的基本特征：-1" class="headerlink" title="树结构的基本特征："></a>树结构的基本特征：</h2><ul>
<li>在一个数结构中，有且仅有一个节点没有直接前驱，这个结点就是树的前驱结点</li>
<li>除根结点外，其余每个结点有且仅有一个直接前驱</li>
<li>每个结点可以有任意多个直接后继<h2 id="树结构的基本概念-1"><a href="#树结构的基本概念-1" class="headerlink" title="树结构的基本概念"></a>树结构的基本概念</h2></li>
<li>父结点和子结点</li>
<li>兄弟结点</li>
<li>结点的度：一个结点所包含子树的数量</li>
<li>树的度：是指该树所有结点中最大的度</li>
<li>叶结点：树中度为零的结点称为叶结点或终端结点</li>
<li>分支结点：树中度不为零的结点称为分支结点或非终端结点</li>
<li>结点层数：结点的层数从树根开始，根结点为第1层、依次向下为第2、3.。。</li>
<li>树的深度：树中结点的最大层数称为树的深度</li>
<li>有序树：若树中各结点树是按一定的次序从左至右排列的，称为有序树</li>
<li>无序树：若树中各结点的子树（兄弟结点）未按一定次序排列，称为无序树</li>
<li>森林：n(n&gt;0)棵互补相交的树</li>
</ul>
<h2 id="二叉树-1"><a href="#二叉树-1" class="headerlink" title="二叉树"></a>二叉树</h2><p>二叉树是最简单的一种形式，处理相对简单，更为重要的是，任意的树都可以转换成对应的二叉树<br>特点：</p>
<ul>
<li>每个结点最多只能有两个子结点</li>
<li>两个结点对应的子树分别称为左子树和右子树</li>
<li>二叉树结点的最大度为2</li>
</ul>
<p>二叉树进一步分为满二叉树和完全二叉树<br>满二叉树即在二叉树中除最下层的叶结点外，每层的结点都有两个子结点；<br>完全二叉树即最后一层结点树并未能达到最大个数，且最后一层叶结点按照从左向右的顺序连续存在，只缺最后一层右侧若干结点</p>
<h2 id="完全二叉树的顺序存储-1"><a href="#完全二叉树的顺序存储-1" class="headerlink" title="完全二叉树的顺序存储"></a>完全二叉树的顺序存储</h2><p>顺序存储结构是最基本的数据存储方式，与线性表类似，树结构的顺序一般采用<strong>一维数组</strong>来表示<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> MAXLen=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">char</span>[] SeqBinTree=<span class="keyword">new</span> <span class="keyword">char</span>[MAXLen];</span><br></pre></td></tr></table></figure></p>
<h2 id="完全二叉树的性质-1"><a href="#完全二叉树的性质-1" class="headerlink" title="完全二叉树的性质"></a>完全二叉树的性质</h2><p>若树中含有n个结点，假设这些结点的按照顺序方式存储，那么对任意一个结点m来说，具有以下性质：</p>
<ul>
<li>如果m!=1，则结点m的父结点的编号为m/2</li>
<li>如果2<em>m&lt;n，则结点m的左子树根结点的编号为2</em>m;若2*m&gt;n，则无左子树，也没有右子树；</li>
<li>如果2<em>m+1&lt;n，则结点m的右子树根结点编号为2</em>m+1;若2*m+1&gt;n，则无右子树</li>
<li>对于完全二叉树而言，则结点m的右子树根节点编号为[log2n]+1</li>
</ul>
<h2 id="二叉树的链式存储-1"><a href="#二叉树的链式存储-1" class="headerlink" title="二叉树的链式存储"></a>二叉树的链式存储</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChainTreeType</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> NodeData;              <span class="comment">//元素数据</span></span><br><span class="line">    ChainTree LSonNode;         <span class="comment">//左子树结点引用</span></span><br><span class="line">    ChainTree RSonNode;         <span class="comment">//右子树结点引用</span></span><br><span class="line">&#125;</span><br><span class="line">ChainTree root=<span class="keyword">null</span>;            <span class="comment">//定义二叉树根结点的引用</span></span><br></pre></td></tr></table></figure>
<pre><code>带父结点的二叉树引用
</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChainTreeType</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> NodeData;</span><br><span class="line">    ChainTreeType LSonNode;</span><br><span class="line">    ChainTreeType RSonNode;</span><br><span class="line">    Chain ParentNode;</span><br><span class="line">&#125;</span><br><span class="line">ChainTreeType root=<span class="keyword">null</span>;</span><br></pre></td></tr></table></figure>
<h2 id="准备数据（创建一个二叉树数据结构）"><a href="#准备数据（创建一个二叉树数据结构）" class="headerlink" title="准备数据（创建一个二叉树数据结构）"></a>准备数据（创建一个二叉树数据结构）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXLEN=<span class="number">20</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CBTType</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    String data;</span><br><span class="line">    CBTtype left;</span><br><span class="line">    CBTtype right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="初始二叉树-1"><a href="#初始二叉树-1" class="headerlink" title="初始二叉树"></a>初始二叉树</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CBType <span class="title">InitTree</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CBTType node;</span><br><span class="line">    <span class="keyword">if</span>((node=<span class="keyword">new</span> CBTType())!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.printf(<span class="string">"请输入一个根结点数据：\n"</span>);</span><br><span class="line">        node.data=input.next();</span><br><span class="line">        node.left=<span class="keyword">null</span>;</span><br><span class="line">        node.right=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(node!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="添加结点-1"><a href="#添加结点-1" class="headerlink" title="添加结点"></a>添加结点</h2><p>即在二叉树中添加结点数据，添加结点时除了要输入结点数据外，还需要指定其父结点，以及添加添加的结点是作为左子树和右子树，其代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">AddTreeNode</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        CBTType pnode,parent;</span><br><span class="line">        String data;</span><br><span class="line">        <span class="keyword">int</span> menusel;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>((pnode=<span class="keyword">new</span> CBTType())!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.printf(<span class="string">"请输入二叉树结点数据：\n"</span>);</span><br><span class="line">        pnode.data=input.next();</span><br><span class="line">        pnode.left=<span class="keyword">null</span>;</span><br><span class="line">        pnode.right=<span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">        System.out.printf(<span class="string">"请输入该结点的父结点的数据："</span>);</span><br><span class="line">        data=input.next();</span><br><span class="line">        </span><br><span class="line">        parent=TreeFindNode(treeNode,data);</span><br><span class="line">        <span class="keyword">if</span>(parent==<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.printf(<span class="string">"未找到该父结点"</span>);</span><br><span class="line">            pnode=<span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">"1.添加该结点到左子树\n2.添加到该结点到右子树\n"</span>);</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            menusel=input.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(menusel==<span class="number">1</span>||menusel==<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(parent==<span class="keyword">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.printf(<span class="string">"不存在父结点，请先设置父结点！\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">switch</span>(menusel)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                            <span class="keyword">if</span>(parent.left!=<span class="keyword">null</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                System.out.printf(<span class="string">"左子树结点为空\n"</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                parent.left=pnode;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                            <span class="keyword">if</span>(parent.right!=<span class="keyword">null</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                System.out.printf(<span class="string">"右子树结点不为空\n"</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line">                                parent.right=pnode;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">default</span>;</span><br><span class="line">                            System.out.printf(<span class="string">"无效参数：\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(menusel!=<span class="number">1</span>&amp;&amp;menusel!=<span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="查找结点-3"><a href="#查找结点-3" class="headerlink" title="查找结点"></a>查找结点</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CBTType <span class="title">TreeFindNode</span><span class="params">(CBTType treeNode,String data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CBTType ptr;</span><br><span class="line">    <span class="keyword">if</span>(treeNode==<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(treeNode.data.equals(data))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> treeNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((ptr=TreeFindNode(treeNode.left,data))!=<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ptr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(ptr=TreeFindNode(treeNode.right,data)!=<span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ptr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="获取左子树-1"><a href="#获取左子树-1" class="headerlink" title="获取左子树"></a>获取左子树</h2><p>获取左子树即返回当前结点的左子树结点的值，由于在二叉树结构中定义了相应的引用，因此，该操作比较简单。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CBTType <span class="title">TreeLeftNode</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> treeNode.left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="获取右子树-1"><a href="#获取右子树-1" class="headerlink" title="获取右子树"></a>获取右子树</h2><p>获取左子树即返回当前结点的左子树结点的值，由于在二叉树结构中定义了相应的引用，因此，该操作比较简单。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CBTType <span class="title">TreeRightNode</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> treeNode.right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="判断空树-1"><a href="#判断空树-1" class="headerlink" title="判断空树"></a>判断空树</h2><p>判断空树即判断一个二叉树结构是否为空，如果是空树，则表示该二叉树结构中没有数据，判断空树的代码示例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TreeIsEmpty</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="计算二叉树的深度"><a href="#计算二叉树的深度" class="headerlink" title="计算二叉树的深度"></a>计算二叉树的深度</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> depleft,depright;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(treeNode==<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        depleft=TreeDepth(treeNode.left);</span><br><span class="line">        depright=TreeDepth(treeNode.right);</span><br><span class="line">        <span class="keyword">if</span>(depleft&gt;depright)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> depleft+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> depright+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="清空二叉树-1"><a href="#清空二叉树-1" class="headerlink" title="清空二叉树"></a>清空二叉树</h2><p>清空二叉树即将二叉树变成一颗空树，这里仍需要递归算法实现<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ClearTree(treeNode.left);</span><br><span class="line">        ClearTree(treeNode.right);</span><br><span class="line">        treeNode=<span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="显示结点数据-1"><a href="#显示结点数据-1" class="headerlink" title="显示结点数据"></a>显示结点数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TreeNodeData</span><span class="params">(CBTType p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    System.out.printf(<span class="string">"%s"</span>,p.data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="遍历二叉树-1"><a href="#遍历二叉树-1" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h2><p>遍历二叉树即逐个查找二叉树中的所有结点，这是二叉树的基本操作，因此很多操作都需要首先遍历整个二叉树，由于二叉树结构的特殊性，往往可以包含多种方法：</p>
<ul>
<li>先序遍历：即先访问根结点，再按先序遍历左子树，最后按先序遍历右子树，先序遍历一般也称为先根次序遍历，简称为DLR遍历。</li>
<li>中序遍历：即先按照中序遍历左子树，再访问根结点，最后按中序遍历右子树，中序遍历一般也成为中根次序遍历，简称LDR遍历</li>
<li>后续遍历：即先按后序遍历左子树，再按后序遍历右子树，最后访问根接点，后序遍历也称后根次序遍历，简称LRD遍历。</li>
</ul>
<h3 id="按层遍历算法-1"><a href="#按层遍历算法-1" class="headerlink" title="按层遍历算法"></a>按层遍历算法</h3><p>首先处理第一层的结点即根结点，然后处理第一层结点所在的左右子树即所谓的第二结点<br>代码示例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LevelTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CBTType p;</span><br><span class="line">    CBTType[] q=<span class="keyword">new</span> CBTType[MAXLEN];</span><br><span class="line">    <span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tail=(tail+<span class="number">1</span>)%MAXLEN;</span><br><span class="line">        q[tail]=treeNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(head!=tail)</span><br><span class="line">    &#123;</span><br><span class="line">        head=(head+<span class="number">1</span>)%MAXLEN;</span><br><span class="line">        p=q[head];</span><br><span class="line">        TreeNodeData(p);</span><br><span class="line">        <span class="keyword">if</span>(p.left!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tail=(tail+<span class="number">1</span>)%MAXLEN;</span><br><span class="line">            q[tail]=p.left;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(p.right!=<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tail=(tail+<span class="number">1</span>)%MAXLEN;</span><br><span class="line">            q[tail]=p.right;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="先序遍历算法"><a href="#先序遍历算法" class="headerlink" title="先序遍历算法"></a>先序遍历算法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">void DLRTree(CBTType treeNode)</span><br><span class="line">&#123;</span><br><span class="line">    if(treeNode!=null)</span><br><span class="line">    &#123;</span><br><span class="line">        TreeNodeData(treeNode);</span><br><span class="line">        DLRTree(treeNode.left);</span><br><span class="line">        DLRTree(treeNode.right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="中序遍历算法-1"><a href="#中序遍历算法-1" class="headerlink" title="中序遍历算法"></a>中序遍历算法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDRTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LDRTree(treeNode.left);</span><br><span class="line">        TreeNodeData(treeNode);</span><br><span class="line">        LDRTree(treeNode.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="中序遍历算法-2"><a href="#中序遍历算法-2" class="headerlink" title="中序遍历算法"></a>中序遍历算法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDRTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LDRTree(treeNode.left);</span><br><span class="line">        TreeNodeData(treeNode);</span><br><span class="line">        LDRTree(treeNode.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="后序遍历算法"><a href="#后序遍历算法" class="headerlink" title="后序遍历算法"></a>后序遍历算法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LRDTree</span><span class="params">(CBTType treeNode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(treeNode!=<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LRDTree(treeNode.left);</span><br><span class="line">        LRDTree(treeNode.right);</span><br><span class="line">        TreeNodeData(treeNode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="图结构"><a href="#图结构" class="headerlink" title="图结构"></a>图结构</h1><p>图结构是一种非线性数据结构，图结构在实际生活中具有丰富的例子，例如通信网络、交通网络、人际关系网等</p>
<h2 id="什么是图结构"><a href="#什么是图结构" class="headerlink" title="什么是图结构"></a>什么是图结构</h2><p>之前的树结构虽然具有层次关系，但是每个下层元素只能和一个上层元素关联，图结构可以使每个数据元素之间相互关联<br>一个典型的图结构包含：</p>
<ul>
<li>顶点（vertex）:途中的数据元素</li>
<li>边（Edge）：图中连接这些顶点的线<br>所有的顶点构成一个顶点集合，所有的边构成边集合，一个完整的图结构由顶点集合和边集合组成，图结构在数学上一般记为如下方式：<pre><code>G=（V,E）=(V(G),E(G))
</code></pre>其顶点集合和边集合如下：</li>
</ul>
<hr>
<center><br>V(G)={V1，V2，V3，V4，V5，V6}<br><br>E(G)={(V1，V2),(V1，V3),(V1,V5)…(V5,V6)}<br></center>

<hr>
<h2 id="图的基本概念"><a href="#图的基本概念" class="headerlink" title="图的基本概念"></a>图的基本概念</h2><ol>
<li>无向图<br>边的指向没有方向性，(V1,V2)和(V2,v1)一样<center><br>V(G)={V1，V2，V3，V4，V5，V6}<br><br>E(G)={(V1，V2),(V1，V3),(V1,V5)…(V5,V6)}<br></center></li>
<li>有向图<br>类似于向量，有指向<v1,v2>和<v2,v1>不一样<center><br>V(G)={V1，V2，V3，V4，V5，V6}<br><br>E(G)={<v1,v2>,<v2,v1>,(V2,V3)…(V5,V6)}<br></v2,v1></v1,v2></center></v2,v1></v1,v2></li>
<li>顶点的度<br>连接顶点的边的数量，在无向图中记作D(V)，在有向图中，分为入度，记作ID(V)，出度，记作OD(V)</li>
<li>邻接顶点<br>邻接顶点是指图结构中一条边的两个顶点，在无向图中，两个顶点无区别，在有向图中，根据边的指向分为入边邻接点和出边邻接点</li>
<li>无向完全图<br>在无向图中，每两个顶点之间都存在一条边</li>
<li>有向完全图<br>在有向图中，每两个顶点之间都存在方向相反的两条边</li>
<li>子图<br>类似于集合的概念，一个子图的顶点和边都应该是另一个图结构的子集合</li>
<li>路径<br>路径即图结构中的顶点之间的连线（之间途径其他顶点），路径上边的数量称为路径长度</li>
<li>连通、连通图和连通分量</li>
</ol>
<ul>
<li>如果图结构中两个顶点之间有路径，则称这两个顶点是连通的</li>
<li>如果无向图中任意两个顶点都是连通的，那么这个图称为连通图，否则称为非连通图</li>
<li>无向图的极大连通图称为该图的非连通图</li>
</ul>
<ol>
<li>强连通图和强连通分量 </li>
<li>权<br>在实际的应用中往往需要将边表示成某种数值，这个数值便是该边的权，无向图中加入权值，则称为无向带权图</li>
<li>网<br>网即边上带有权值的图的另一名称</li>
</ol>
<h2 id="准备数据（创建图结构用到的数据变量和数据结构）"><a href="#准备数据（创建图结构用到的数据变量和数据结构）" class="headerlink" title="准备数据（创建图结构用到的数据变量和数据结构）"></a>准备数据（创建图结构用到的数据变量和数据结构）</h2><p>在实际应用中，通常采用<strong>结构数组</strong>的形式来单独保存顶点的信息，然后采<strong>用二维数组</strong>的形式保存顶点之间的联系，这种保存顶点之间关系的数组称为<strong>邻接矩</strong>阵。<br>对于一个包含n个顶点的图，可以使用如下语句来声明一个数组保存顶点的信息<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>[] Vertex=<span class="keyword">new</span> <span class="keyword">char</span>[MaxNum]              <span class="comment">//保存顶点信息</span></span><br><span class="line"><span class="keyword">int</span>[][] EdgeWeight=<span class="keyword">new</span> <span class="keyword">int</span>[MaxNum][MaxNum]  <span class="comment">//保存边上的权（连接关系）</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>在表示连接关系时，该二维数组中的元素EdgeVeight[i][j]=1表示（Vi,Vj）或者<vi,vj>，两个顶点之间的关系EdgeVeight[i][j]=0<br>无向图中，可以用一维数组保存顶点信息</vi,vj></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vertex[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">Vertex[<span class="number">2</span>]=<span class="number">2</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>代码示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MaxNum=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MaxValue=<span class="number">65535</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphMatrix</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>[] Vertex=<span class="keyword">new</span> <span class="keyword">char</span>[MaxNum];</span><br><span class="line">    <span class="keyword">int</span> GType;<span class="comment">//图的类型（0为无向图，1为有向图）</span></span><br><span class="line">    <span class="keyword">int</span> VertexNum;</span><br><span class="line">    <span class="keyword">int</span> EdgeNum;</span><br><span class="line">    <span class="keyword">int</span>[][] EdgeWeight=<span class="keyword">new</span> <span class="keyword">int</span>[MaxNum][MaxNum]<span class="comment">//保存边的权重</span></span><br><span class="line">    iint[] isTrav=<span class="keyword">new</span> <span class="keyword">int</span>[MaxNum];<span class="comment">//遍历标志</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="初始化图"><a href="#初始化图" class="headerlink" title="初始化图"></a>初始化图</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateGraph</span><span class="params">(GraphMatrix GM)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    <span class="keyword">int</span> weight;</span><br><span class="line">    <span class="keyword">char</span> Estart,EndV;<span class="comment">//边的起始顶点</span></span><br><span class="line">    </span><br><span class="line">    System.out.printf(<span class="string">"输入图中各顶点的信息\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GM.VertexNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.printf(<span class="string">"第%d各个顶点："</span>,i+<span class="number">1</span>);</span><br><span class="line">        GM.Vertex[i]=(input.next().toCharArray())[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//保存到各顶点数组元素中</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="清空图"><a href="#清空图" class="headerlink" title="清空图"></a>清空图</h2><p>即将一个图结构变成一个空图，这里只需将各个元素设置为MaxValue即可<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearGraph</span><span class="params">(GraphMatrix GM)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GM.VertexNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;GM.VertexNum;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            GM.EdgeWeight[i][j]=GraphMatrix.MaxValue;</span><br><span class="line">            <span class="comment">//设置矩阵中各元素的值为maxvalue</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="显示图"><a href="#显示图" class="headerlink" title="显示图"></a>显示图</h2><p>显示图即为显示图的邻接矩阵，用户可以通过邻接矩阵方便地了解图的顶点和边等结构的信息。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutGraph</span><span class="params">(GraphMatrix GM)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;GM.VertexNum;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.printf(<span class="string">"\t%c"</span>,GM.Vertex[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.printf(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GM.VertexNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.printf(<span class="string">"%c"</span>,GM.Vertex[i]);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;GM.VertexNum;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(GM.EdgeWeight[i][j]==GraphMatrix.MaxValue)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.printf(<span class="string">"\tZ"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.out.printf(<span class="string">"\t%d"</span>,GM.EdgeWeight[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="遍历图"><a href="#遍历图" class="headerlink" title="遍历图"></a>遍历图</h2><p>遍历图即逐个访问图中的所有的顶点，由于图的结构复杂，存在多对多的特点，因此，当顺着某一路径访问该顶点时，可能会顺着另一路径回到该顶点。<br>常用的手段是在图结构中设置一个数组isTrav[n],该数组的各元素的初始值为零，当某个顶点被遍历访问过时，则设置对应的数据元素值为1。在访问某个顶点i时，先判断数组isTrav[i]中的值，如果其值为1，则继续路径的下一个顶点；如果其值为0，则访问当前顶点（进行相应的处理），然后继续路径的下一个顶点。<br>常用的遍历方法有两种：广度优先遍历法和深度优先遍历法，深度优先遍历方法如下所示：</p>
<ul>
<li>从数组isTrav中选择一个未访问的顶点Vi，将其标记为1，表示已经访问过。</li>
<li>从Vi的一个未被访问的邻接点出发进行深度优先遍历</li>
<li>重复上一个步骤，直至图中所有和Vi有路径相通的顶点都被访问过。</li>
<li>重复步骤（1）至步骤（3）的操作，直到图中的所有顶点都被访问过。</li>
</ul>
<p>深度优先遍历法是一个递归过程，具体的程序代码实现如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeepTraOne</span><span class="params">(GraphMatrix GM,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    GM.isTrav[n]=<span class="number">1</span>;</span><br><span class="line">    System.out.printf(<span class="string">"-&gt;%c"</span>,GM.Vertex[n];</span><br><span class="line">    <span class="comment">//添加处理结点的操作</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GM.VertexNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(GM.EdgeWeight[n][i]!=GraphMatrix.MaxValue&amp;&amp;GM.isTrav[n]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DeepTraOne(GM,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeepTraGraph</span><span class="params">(GraphMatrix GM)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GM.VertexNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        GM.isTrav[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.printf(<span class="string">"深度优先遍历结点"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GM.VertexNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(GM.isTrav[i]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DeepTraOne(GM,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.printf(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在上述代码中，方法DeepTraOne()从第n个结点开始深度遍历图，其输入参数GM为一个指向图结构的引用，输入参数n为顶点编号，通过通过递归实现遍历。<br>方法DeepTraGraph()用于执行完整的深度优先遍历，以访问所有的顶点。其中，输入参数GM为一个指向图结构的引用，程序中通过调用方法DeepTraOne()来完成遍历所有顶点的遍历。</p>
]]></content>
      
        <categories>
            
            <category> 职场进阶 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[20171201]]></title>
      <url>/2017/12/01/20171201/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>一个月了啊，还特么挺忙，时间也过的贼快，想想看都干了啥，自拿了offer之后，就一门心思的学java了，先是把java过了一遍，然后是html、css、javascript，再然后是看了点视频，韩顺平的基本上把servlet过完了，然后又捣鼓了两天数据库，最后又回过头来，总结了一下html,css，javascript，目前javascript系统学了一半，书上还有十章，然而。。。但是。。。操蛋的论文又特么要提上日程了，自暑假以来，论文就没怎么弄，好吧，现在实验结束了，论文也要完稿了，完稿就意味结束。。。</p>
<a id="more"></a>
<p>感觉时间不够用了啊现在，目前的问题在于，单位希望三月份过去实习，一旦过去实习，就只能按照单位指的路走了，对咱这种非科班出身的人来说可不是一件好事啊，可能路会窄啊，这跟自己预想的有差距啊，另外，那边打算搞人工智能，自己想转到人工智能方向，也算没有浪费自己的硕士学历啊，想转的话，肯定要特么先把相关知识摸一遍啊，数学基础应该是没问题的哦，要有这个自信，毕竟考研什么的，而且从小到大，也就数学成绩能拿的出手了，呵呵，然后就是语言基础，python是肯定要学的，然后是机器学习的相关理论，这些都是要看书的啊，感觉自己看教学视频还是不适合，相比之下，一遍看书，一遍看电视剧或者电影可能更适合自己啊，效果也还不错（这个月刷了多少电视剧来着，风云系列、猎场、相爱十年，有的都特么刷好几遍了）</p>
<p>接下里还要看哪些书呢，工作方面，当前还有个javascript，在下面一个月内与论文写作穿插进行吧，前端方面还差个oracle，jsp和spring，oracle这个就先不要系统的去学了，学下jsp和spring，跟着书练习两个小项目中间需要与数据库交互时，再针对性的看oracle或mysql吧，重点关注数据的增删查改，练习掌握基本的sql语句，作好整理、笔记，把知识点整理成md传上来；然后把java第二次再过一遍，这一遍穿插数据结构和算法，用java来实现</p>
<div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer1"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "今天",
					author: "刘德华",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E4%BB%8A%E5%A4%A9.mp3",
					pic: "",
				}
			});
		</script>
<p>然后呢，学一下python编程基础，可以尝试用python实现数据结构和算法，闲暇无事看看机器学习方面的知识了。、。</p>
<p>好吧，是挺能折腾的，注意锻炼，还是要保证每周有一定时间跑步的、保证睡眠，中午不休的时候，晚上11点半之前关机睡觉，好友过来玩时，该出去玩的时候就出去玩啊，今后工作了，估计玩的时间就不多了，趁现在到处玩玩吧，整天待在这里，一点明天都看不到，办公室坐腻了的时候，可以去图书馆再坐坐啊，趁着现在，多尝试些吧，才不至于今后把路走的越来越窄，不求自己有多大成就，只是在人生最宝贵的三五年，在还没有什么特别羁绊的时候，在职业定位还算清晰的这个时候，用心大胆尝试，其实，自己从来不就是这样吗，虽然在现在看来，之前的选择也有看似错误的时候，虽然和朋友聊起，会说后悔，但自己心里也并未真的后悔吧，相信一些都是命运的安排，也会是好的安排，就像选择学校，在别人眼中，志愿填错了，其实想想，如果当初没选择江大，自己又怎会遇到的那些人那些事，感觉自己一直都特么挺幸运的，遇到了真心互相帮助的知心好友，所以还是坚信自己的选择，虽然有的时候选择比努力更重要，但是在选择尚未明朗的情况下用心去走总没有错吧。。。另外，反思一下，有些东西还是要好好争取一下的啊，老大不小了都，扪心自问一下，一路走来真的没有遇到合适的吗，更多的还是自己作吧</p>
]]></content>
      
        <categories>
            
            <category> 生活杂感 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[css样式]]></title>
      <url>/2017/11/27/css%E6%A0%B7%E5%BC%8F/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="CSS背景"><a href="#CSS背景" class="headerlink" title="CSS背景"></a>CSS背景</h1><p>css允许应用纯色作为背景，也允许使用背景图像创建相当复杂的效果<br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p&#123;background-color:gray&#125;</span><br><span class="line"><span class="comment">&lt;!--如果希望背景色从元素中的文本向外少有延伸，只需增加一些内边距--&gt;</span></span><br><span class="line">p&#123;background-color: gray;padding: 20px&#125;</span><br><span class="line"><span class="comment">&lt;!--如果需要设置背景图像，需要为这个图像设置一个路径值--&gt;</span></span><br><span class="line">body&#123;background-image: url(/i/eg_bg_04.gif);&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body</span></span><br><span class="line"><span class="undefined">&#123; </span></span><br><span class="line"><span class="undefined">background-image: </span></span><br><span class="line"><span class="undefined">url(/i/eg_bg_03.gif);</span></span><br><span class="line"><span class="undefined">background-repeat: repeat-y</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>背景定位：可以利用background-position属性改变图像在背景中的位置<br>下面的例子在body元素中将一个图像居中放置<br><div id="aplayer6" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer6"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "爱江山更爱美人",
					author: "李丽芬",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E7%88%B1%E6%B1%9F%E5%B1%B1%E6%9B%B4%E7%88%B1%E7%BE%8E%E4%BA%BA%20%20%20%E6%9D%8E%E4%B8%BD%E8%8A%AC.mp3",
					pic: "",
				}
			});
		</script><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">body</span><br><span class="line">  &#123; </span><br><span class="line">    background-image:url('/i/eg_bg_03.gif');</span><br><span class="line">    background-repeat:no-repeat;</span><br><span class="line">    background-position:center;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>
<p>背景关联：如果文档比较长，那么文档向下滚动时，背景图像也会随之滚动，当文档滚动到超过图像的位置时，图像就会消失，可以通过background-attachment属性防止<br>这种滚动。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">body </span><br><span class="line">  &#123;</span><br><span class="line">  background-image:url(/i/eg_bg_02.gif);</span><br><span class="line">  background-repeat:no-repeat;</span><br><span class="line">  background-attachment:fixed</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="CSS文本"><a href="#CSS文本" class="headerlink" title="CSS文本"></a>CSS文本</h1><p>CSS文本属性可以定义文本的外观，修改颜色，字符家具，对齐文本，装饰文本，对文本进行缩进<br>缩进文本<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;text-indent:5em;&#125;</span><br></pre></td></tr></table></figure></p>
<p>缩进的继承<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">div#outer &#123;width: 500px;&#125;</span><br><span class="line">div#inner &#123;text-indent: 10%;&#125;</span><br><span class="line">p &#123;width: 200px;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"inner"</span>&gt;</span>some text. some text. some text.</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>this is a paragragh.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>水平对齐<br>text-align是一个基本属性，它会影响一个元素中的文本行互相之间的对齐方式，left、right、center和justify<br>字间隔<br>word-spacing 可以改变单词之间的标准间隔，其默认值为normal与设置值为0是一样的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">p.spread &#123;word-spacing: <span class="number">30</span>px;&#125;</span><br><span class="line">p.tight &#123;word-spacing: <span class="number">-0.5</span>em;&#125;</span><br><span class="line"></span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"spread"</span>&gt;</span><br><span class="line">This is a paragraph. The spaces between words will be increased.</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;p class="tight"&gt;</span></span><br><span class="line"><span class="regexp">This is a paragraph. The spaces between words will be decreased.</span></span><br><span class="line"><span class="regexp">&lt;/</span>p&gt;</span><br></pre></td></tr></table></figure></p>
<p>字母间隔：letter-spacing与word-spacing的区别在于，字母间隔修改的是字符或字母之间的间隔<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;letter-spacing: <span class="number">-0.5</span>em&#125;</span><br><span class="line">h4 &#123;letter-spacing: <span class="number">20</span>px&#125;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;This is header <span class="number">121</span><span class="string">``</span>/h1&gt;</span><br><span class="line">&lt;h4&gt;This is header <span class="number">4</span>&lt;<span class="regexp">/h4&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>字符转换<br>text-transform属性处理文本的大小写，这个属性有4个值“none，uppercase(全部转为大写)，lowercase（全部转为小写）和capitalize</p>
<pre><code>h1{text-transform: uppercase}
</code></pre><p>文本装饰<br>text-decoration属性，这个属性有5个值：none，underline,overline,line-through,blink</p>
<pre><code>a{text-decoration: none;}
</code></pre><p>还可以在一个规则中结合多种装束，如果希望所有超链接既有下划线，又有上划线，规则如下：</p>
<pre><code>a:link a:visited{text-decoration:underline overline;}
</code></pre><p>不过要主要的是，如果两个不同的装饰都与同一元素匹配，胜出规则的值会完全取代另一个值，</p>
<pre><code>h2.stricken{text-decoration: line-through;}
h2{text-decoration: underline overline;}
</code></pre><p>处理空白符<br>white-space属性会影响到用户代理对源文档中的空格、换行和tab字符的处理，其值有：normal,pre,nowrap,pre-wrap和pre-line<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;This is paragraph has many spaces   <span class="keyword">in</span> it.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">p&#123;whit-space: normal&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>值pre<br>将white-space设置为pre，受这个属性影响的元素中，空白符的处理就有所不同<br>white-space属性的行为</p>
<pre><code>值                 空白符                换行符
pre-lien         合并                 保留
normal             合并                忽略
nowrap            合并                忽略
pre             保留                保留
pre-wrap         保留                 保留
</code></pre><p>文本方向<br>direction属性影响块级元素文本的书写方向、表中列布局的方向、内容水平填充其元素框的方向，以及两端对齐元素中的最后一行的位置，对于行内元素，只有当unicode-bidi属性设置为embed或bidi-override时才会调用direction属性。<br>direction属性值对应有两个分别为：ltr和rtl</p>
<h1 id="CSS字体"><a href="#CSS字体" class="headerlink" title="CSS字体"></a>CSS字体</h1><font color="red">字体系列font-family</font>&gt;<br>例如:body{font-family:Serif字体，Sans-serif字体,Monospace字体,Cursive字体和Fantasy字体}<br><font color="red">字体风格font-style</font>&gt;<br>例如：font-style:normal文本正常显示 italic文本斜体显示 oblique文本倾斜显示<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p.normal&#123;font-style:normal;&#125;</span><br><span class="line">p.italic&#123;font-style:italic;&#125;</span><br><span class="line">p.oblique&#123;font-style:oblique;&#125;</span><br></pre></td></tr></table></figure><br><br><font color="red">字体变形font-variant可以设定小型大写字母</font><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;font-variant:small-caps;&#125;</span><br></pre></td></tr></table></figure><br><br><font color="red">字体加粗font-weight属性设置文本的粗细</font><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p.normal &#123;font-weight:normal;&#125;</span><br><span class="line">p.thick &#123;font-weight:bold;&#125;</span><br><span class="line">p.thicker &#123;font-weight:900;&#125;</span><br></pre></td></tr></table></figure><br><br><font color="red">字体大小font-size(单位多种，如60px,em，百分比)</font>

<h1 id="CSS链接：以不同的方式为链接设置样式"><a href="#CSS链接：以不同的方式为链接设置样式" class="headerlink" title="CSS链接：以不同的方式为链接设置样式"></a>CSS链接：以不同的方式为链接设置样式</h1><p>链接样式的属性包括：color,font-family,background<br>链接的四种状态：</p>
<pre><code>a:link               普通的，未被访问的链接
a:visited              用户已访问的链接
a:hover              鼠标指针位于链接的上方
a:active              链接被点击的时刻
</code></pre><h1 id="CSS列表：允许改变属性放置、改变列表项标志，或者将图像作为列表项标志"><a href="#CSS列表：允许改变属性放置、改变列表项标志，或者将图像作为列表项标志" class="headerlink" title="CSS列表：允许改变属性放置、改变列表项标志，或者将图像作为列表项标志"></a>CSS列表：允许改变属性放置、改变列表项标志，或者将图像作为列表项标志</h1><p>例如，在一个无序列表中，列表项的标志是出现在各项表项旁边的圆点，在有序列表中，标志可能是字母、数字或另外某种计数体系中的一个符号<br>要修改用于列表项的标志类型，可以使用属性：list-style-type</p>
<pre><code>ul{list-style-type:square}
</code></pre><p>使用列表项图像list-style-image</p>
<pre><code>ul li{list-style-image :url(xxx.gif)}
</code></pre><p>使用列表标志位置list-style-position</p>
<pre><code>li{list-style:url(example.gif) quare indide}
</code></pre><h1 id="CSS表格（可以帮助极大改善表格的外观）"><a href="#CSS表格（可以帮助极大改善表格的外观）" class="headerlink" title="CSS表格（可以帮助极大改善表格的外观）"></a>CSS表格（可以帮助极大改善表格的外观）</h1><p><font color="red">表格边框，如需在CSS中设置表格边框，请使用border属性</font><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">table,th,td&#123;</span><br><span class="line">	border: 1px solid blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><font color="red">折叠边框border-collapse</font><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">table&#123;</span><br><span class="line">	border-collapse:collapse;</span><br><span class="line">&#125;</span><br><span class="line">table,th,td&#123;</span><br><span class="line">	border: 1px solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><font color="red">表格宽度和高度width和height</font><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">table&#123;</span><br><span class="line">	width:100%;</span><br><span class="line">&#125;</span><br><span class="line">th&#123;</span><br><span class="line">	height: 50px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><font color="red">表格文本对齐text-align和vertical-align</font><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">td&#123;</span><br><span class="line">	text-align:right;</span><br><span class="line">&#125;</span><br><span class="line">td&#123;</span><br><span class="line">	height:50px;</span><br><span class="line">	vertical-align:bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><font color="red">表格内边框，如需控制表格中内容与边框的距离，请为td和th元素设置padding的属性</font><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">td&#123;</span><br><span class="line">	padding:15px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><font color="red">表格颜色</font><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">table,td,th&#123;</span><br><span class="line">	border:1px solid green;</span><br><span class="line">&#125;</span><br><span class="line">th&#123;</span><br><span class="line">	background-color:green;</span><br><span class="line">	color:white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>CSS Table属性</p>
<pre><code>属性                                            描述
border-collapse                                    设置是否把表格边框合并为单一的边框
border-spacing                                    设置分隔单元格边框的距离
caption-side                                    设置表格标题的位置
empty-cells                                        设置是否显示表格中的空单元格
table-layout                                    设置显示单元、行和列的算法
</code></pre><h1 id="CSS轮廓"><a href="#CSS轮廓" class="headerlink" title="CSS轮廓"></a>CSS轮廓</h1><p>轮廓（outline）是绘制与元素周围的一条线，位于边框外缘的外围，可以起到突出元素的作用，CSS outline属性规定元素轮廓的样式、颜色和宽度<br>包括：outline-style，outline-color,outline-wid<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">p </span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border</span><span class="selector-pseudo">:red</span> <span class="selector-tag">solid</span> <span class="selector-tag">thin</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">outline</span>:<span class="selector-id">#00ff00</span> <span class="selector-tag">dotted</span> <span class="selector-tag">thick</span>(定于了段落<span class="selector-tag">p</span>的外围轮廓);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注释：<span class="tag">&lt;/<span class="name">b</span>&gt;</span>只有在规定了 !DOCTYPE 时，Internet Explorer 8 （以及更高版本） 才支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 职场进阶 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS样式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CSS基础教程]]></title>
      <url>/2017/11/27/CSS%E7%9F%A5%E8%AF%86%E6%A6%82%E8%A6%81/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer2" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer2"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "爱江山更爱美人",
					author: "李丽芬",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E7%88%B1%E6%B1%9F%E5%B1%B1%E6%9B%B4%E7%88%B1%E7%BE%8E%E4%BA%BA%20%20%20%E6%9D%8E%E4%B8%BD%E8%8A%AC.mp3",
					pic: "",
				}
			});
		</script>
<h1 id="CSS基础语法"><a href="#CSS基础语法" class="headerlink" title="CSS基础语法"></a>CSS基础语法</h1><p>css规则主要由两个主要部分构成：选择器+一条多条声明<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">selector&#123;declaration <span class="number">1</span>;declaration <span class="number">2</span>;...declaration N&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>选择器通常是需要改变样式的html元素</li>
<li>每条声明由一个属性和一个值构成</li>
<li>属性（property）是希望设置的样式属性（style attribute）。每个属性有一个值，属性与值被冒号分开<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">selector&#123;<span class="attr">property</span>: value&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>例如，将h1元素内的文字颜色定义为红色，同时将字体大小设置为14像素<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">h1&#123;<span class="attr">color</span>:red;font-size:<span class="number">14</span>px&#125;</span><br><span class="line">p&#123;color:#ff0000&#125;</span><br></pre></td></tr></table></figure></p>
<p>当值value为若干单词时，要给值加双引号<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p&#123;font-family:<span class="string">"sans serif"</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>多重说明<br>p{<br>    text-align: center;<br>    color: black;<br>    font-family: arial;<br>}<br><div id="aplayer3" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer3"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "爱江山更爱美人",
					author: "李丽芬",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E7%88%B1%E6%B1%9F%E5%B1%B1%E6%9B%B4%E7%88%B1%E7%BE%8E%E4%BA%BA%20%20%20%E6%9D%8E%E4%B8%BD%E8%8A%AC.mp3",
					pic: "",
				}
			});
		</script></p>
<h1 id="CSS高级语法"><a href="#CSS高级语法" class="headerlink" title="CSS高级语法"></a>CSS高级语法</h1><p>选择器分组：分组的选择器可以分享相同的声明<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h1,h2,h3,h4,h5,h6&#123;</span><br><span class="line">	color:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>继承及其问题<br>根据CSS，子元素从父元素继承属性<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">	font-family: Verdana,sans-serif;</span><br><span class="line">&#125;</span><br><span class="line">td,ul,ol,li,dl,dt,dd&#123;</span><br><span class="line">	font-family: Verdana,sans-serif;</span><br><span class="line">&#125;</span><br><span class="line">p&#123;</span><br><span class="line">	font-family: Times,sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="CSS派生选择器"><a href="#CSS派生选择器" class="headerlink" title="CSS派生选择器"></a>CSS派生选择器</h1><p>通过依据元素在其位置的上下文关系定义样式，可以使标记更加简洁<br>比如，希望列表中的strong元素变为斜体字，而不是通常的粗体字，可以这样定义一个派生选择器<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">li strong&#123;</span><br><span class="line">	font-family: italic;</span><br><span class="line">	font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">strong&#123;</span><br><span class="line">	color: red;</span><br><span class="line">&#125;</span><br><span class="line">h2&#123;</span><br><span class="line">	color: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h2 strong&#123;</span><br><span class="line">	color: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="CSS-id选择器"><a href="#CSS-id选择器" class="headerlink" title="CSS id选择器"></a>CSS id选择器</h1><p>可以为标有特定id的html元素指定的样式<br>id选择器以“#”定义</p>
<p>下面的两个id选择器，第一个定义元素的颜色为红色，第二个定义元素的颜色为绿色<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#red &#123;color:red;&#125;</span><br><span class="line">#green &#123;color: green;&#125;</span><br></pre></td></tr></table></figure></p>
<p>在对应的html文档中，id属性为red的p元素显示为红色，而id属性为green的p元素显示为绿色<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=<span class="string">"red"</span>&gt;这个段落是红色&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;p id="green"&gt;这个段落是绿色&lt;/</span>p&gt;</span><br></pre></td></tr></table></figure></p>
<p>id选择器和派生选择器<br>在布局中，id选择器常常用于建立派生选择器,一个选择器，多种用法,单独的选择器<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#sidebar p&#123;</span><br><span class="line">	font-style: italic;</span><br><span class="line">	text-align: right;</span><br><span class="line">	margin-top: <span class="number">0.5</span>em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#sidebar h2&#123;</span><br><span class="line">	font-style: italic;</span><br><span class="line">	text-align: right;</span><br><span class="line">	margin-top: <span class="number">0.5</span>em;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="CSS类选择器"><a href="#CSS类选择器" class="headerlink" title="CSS类选择器"></a>CSS类选择器</h1><p>在CSS中，类选择器以一个点号显示,下述的center是类名<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.center&#123;text-align: center&#125;</span><br></pre></td></tr></table></figure></p>
<p>在对应的html文档中<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 <span class="class"><span class="keyword">class</span></span>=<span class="string">"center"</span>&gt;</span><br><span class="line"><span class="keyword">this</span> heading will be center-aligned</span><br><span class="line">&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;p class="center"&gt;</span></span><br><span class="line"><span class="regexp">this paragraph will also be center-aligned.</span></span><br></pre></td></tr></table></figure></p>
<p>同id选择器一样，class选择器也可被用作派生选择器<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.fancy td&#123;</span><br><span class="line">	color:#f60;</span><br><span class="line">	background: #666;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="CSS属性选择器"><a href="#CSS属性选择器" class="headerlink" title="CSS属性选择器"></a>CSS属性选择器</h1><p>对带有指定属性的HTML元素设置样式，可以为拥有指定属性的HTML元素设置样式，而不仅限于class和id属性<br>下面的例子为带有title属性的所有元素设置样式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[title=w3school]</span><br><span class="line">&#123;</span><br><span class="line">	color:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">[title~=hello]</span><br><span class="line">&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125; </span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;可以应用样式：&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;h2 title="hello world"&gt;Hello world&lt;/</span>h2&gt;</span><br><span class="line">&lt;p title=<span class="string">"student hello"</span>&gt;Hello W3School students!&lt;/h1&gt;</span><br><span class="line">&lt;hr /&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;无法应用样式：&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;h2 title="world"&gt;Hello world&lt;/</span>h2&gt;</span><br><span class="line">&lt;p title=<span class="string">"student"</span>&gt;Hello W3School students!&lt;/p&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>
<p>设置表单的样式<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">input[type="text"]</span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="undefined">  width:150px;</span></span><br><span class="line"><span class="undefined">  display:block;</span></span><br><span class="line"><span class="undefined">  margin-bottom:10px;</span></span><br><span class="line"><span class="undefined">  background-color:yellow;</span></span><br><span class="line"><span class="undefined">  font-family: Verdana, Arial;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">input[type="button"]</span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="undefined">  width:120px;</span></span><br><span class="line"><span class="undefined">  margin-left:35px;</span></span><br><span class="line"><span class="undefined">  display:block;</span></span><br><span class="line"><span class="undefined">  font-family: Verdana, Arial;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"input"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"Name"</span> <span class="attr">value</span>=<span class="string">"Bill"</span> <span class="attr">size</span>=<span class="string">"20"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"Name"</span> <span class="attr">value</span>=<span class="string">"Gates"</span> <span class="attr">size</span>=<span class="string">"20"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"Example Button"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="如何创建CSS"><a href="#如何创建CSS" class="headerlink" title="如何创建CSS"></a>如何创建CSS</h1><p>当读到一个样式表时，浏览器会根据它来格式化html文档，插入样式表的方法有三种：</p>
<ul>
<li>外部样式表<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"mystyle.css"</span>/&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>浏览器会从文件mystyle.css中读到样式声明，并根据它来格式文档</p>
<p>外部样式表可以在任何文本编辑器中编辑，mystyle.css文件：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">hr&#123;<span class="attr">color</span>: sienna;&#125;</span><br><span class="line">p&#123;margin-left: <span class="number">20</span>px;&#125;</span><br><span class="line">body&#123;background-image: url(<span class="string">"images/back40.gif"</span>)&#125;</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string">外部样式表实例</span></span><br><span class="line"><span class="string">外部样式表文件</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>css</span><br><span class="line"><span class="comment">/*charset用于指定样式表使用的字符集，该关键字只能用于外部样式表文件中，并位于样式表的最前面，只允许出现一次*/</span></span><br><span class="line">@charset <span class="string">"utf-8"</span></span><br><span class="line">h1&#123;</span><br><span class="line">	color: #033;</span><br><span class="line">	border:dashed 1px #6600c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hr&#123;</span><br><span class="line">	width: <span class="number">95</span>%;</span><br><span class="line">	text-align: center;</span><br><span class="line">	color:#03C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">span&#123;</span><br><span class="line">	font-wight:bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html"</span>;<span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>连接外部样式表的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>连接外部样式表的使用<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">hr</span>&gt;</span>连接外部样式表<span class="tag">&lt;/<span class="name">hr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>内部样式表（嵌入到head中）</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">hr&#123;color:sienna;&#125;</span></span><br><span class="line"><span class="undefined">p&#123;margin-left: 20px;&#125;</span></span><br><span class="line"><span class="undefined">body&#123;background-image: url(images/back40.gif;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>内联样式（在body中对局部进行格式化）</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: sienna; margin-left: 20px"</span>&gt;</span></span><br><span class="line">This is a paragraph</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>多重样式</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">外部样式表对h3进行定义</span><br><span class="line">h3&#123;</span><br><span class="line">	color: red;</span><br><span class="line">	text-align: left;</span><br><span class="line">	font-size: 8pt;</span><br><span class="line">&#125;</span><br><span class="line">内部样式表同样对h3进行定义</span><br><span class="line">h3&#123;</span><br><span class="line">	text-align: right;</span><br><span class="line">	font-size: 20pt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>即颜色属性将被继承于外部样式表，而文字排列和字体尺寸会被内部样式表中的规则取代</p>
<h1 id="div-css样式"><a href="#div-css样式" class="headerlink" title="div+css样式"></a>div+css样式</h1><p>html示例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBBIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</span></span><br><span class="line"><span class="meta">        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/css"</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面内容框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"structureDemo.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"containerDiv"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bannerDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navigationDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"focusDiv"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"leftDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"rightDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearBoth"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>   <span class="comment">&lt;!--清除前面浮动对后面元素的影响--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearBoth"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>       <span class="comment">&lt;!--清除前面浮动对后面元素的影响--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footerDiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"utf-8"</span>;</span><br><span class="line">                      <span class="selector-tag">body</span>,<span class="selector-tag">div</span>&#123;</span><br><span class="line">                                <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">                                <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                      <span class="selector-id">#containerDiv</span>&#123;</span><br><span class="line">                          <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">                          <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">750px</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#CCC</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#bannerDiv</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#BBB</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#navigationDiv</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#888</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#focusDiv</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#EEE</span>;</span><br><span class="line">                          <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">0px</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#containerDiv</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#999</span>;</span><br><span class="line">                          <span class="attribute">padding-top</span>: <span class="number">3px</span> <span class="number">0px</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#footerDiv</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">90px</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#BBB</span>;</span><br><span class="line">                          <span class="attribute">margin-top</span>: <span class="number">3px</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#leftDiv</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>:<span class="number">60%</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">90px</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#CCC</span>;</span><br><span class="line">                          <span class="attribute">float</span>:left;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#rightDiv</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>:<span class="number">39%</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">99%</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#CCC</span>;</span><br><span class="line">                          <span class="attribute">float</span>: right;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#content1</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>:<span class="number">330px</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">98%</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#CCC</span>;</span><br><span class="line">                          <span class="attribute">float</span>:left;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#content2</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>:<span class="number">330px</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">98%</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>: <span class="number">#CCC</span>;</span><br><span class="line">                          <span class="attribute">float</span>:left;</span><br><span class="line">                          <span class="attribute">margin-left</span>: <span class="number">4px</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-id">#content3</span>&#123;</span><br><span class="line">                          <span class="attribute">width</span>:<span class="number">330px</span>;</span><br><span class="line">                          <span class="attribute">height</span>:<span class="number">98%</span>;</span><br><span class="line">                          <span class="attribute">background-color</span>:<span class="number">#CCC</span>;</span><br><span class="line">                          <span class="attribute">float</span>:left;</span><br><span class="line">                          <span class="attribute">marging-left</span>:<span class="number">4px</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="selector-class">.clearBoth</span>&#123;</span><br><span class="line">                          <span class="attribute">clear</span>:both;</span><br><span class="line">                      &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 职场进阶 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CSS基础知识 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[html知识概要]]></title>
      <url>/2017/11/27/html/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="html标签"><a href="#html标签" class="headerlink" title="html标签"></a>html标签</h1><p>html标记标签通常称为html标签（html tag）<br>html标签由尖括号包围，通常成对出现的，比如:&lt;b&gt;…&lt;/b&gt;<br>   <a id="more"></a></p>
<h1 id="html文档-网页"><a href="#html文档-网页" class="headerlink" title="html文档=网页"></a>html文档=网页</h1><h1 id="html编辑器"><a href="#html编辑器" class="headerlink" title="html编辑器"></a>html编辑器</h1><p> &nbsp;&nbsp;notepad 或 textedit或 Adobe Dreamweaver</p>
<h1 id="html头部"><a href="#html头部" class="headerlink" title="html头部"></a>html头部</h1><p>文档的标题：&lt;title&gt;定义文档的标题<br>所有链接一个目标</p>
<pre><code>&lt;head&gt;
    &lt;base href=&quot;http://www.baidu.com&quot;&gt;
    &lt;base target=&quot;_blank&quot;&gt;
&lt;/head&gt;
</code></pre><p>文档描述：&lt;meta&gt;描述文档,提供关于html文档的元数据，规定页面的描述，关键词，文档的作者，最后的修改时间以及其他元数据等<br>&lt;meta name=”description” content=”Free Web tutorials on HTML, CSS, XML”&gt;<br>重定向用户：如何把用户定向添加到新的网址</p>
<h1 id="html基础"><a href="#html基础" class="headerlink" title="html基础"></a>html基础</h1><h2 id="注释-lt-–注释内容–-gt"><a href="#注释-lt-–注释内容–-gt" class="headerlink" title="注释&lt;!–注释内容–&gt;"></a>注释&lt;!–注释内容–&gt;</h2><h2 id="html标题-lt-h1-gt-…-lt-h1-gt"><a href="#html标题-lt-h1-gt-…-lt-h1-gt" class="headerlink" title="html标题  &lt;h1&gt;…&lt;h1&gt;"></a>html标题  &lt;h1&gt;…&lt;h1&gt;</h2><h2 id="html段落-lt-p-gt-…-lt-p-gt-（可以用-lt-br-gt-强制换行）"><a href="#html段落-lt-p-gt-…-lt-p-gt-（可以用-lt-br-gt-强制换行）" class="headerlink" title="html段落  &lt;p&gt;…&lt;/p&gt;（可以用&lt;br/&gt;强制换行）"></a>html段落  &lt;p&gt;…&lt;/p&gt;（可以用&lt;br/&gt;强制换行）</h2><h2 id="html标签-lt-a-href-”www-baidu-com”-gt-这是百度-lt-a-gt"><a href="#html标签-lt-a-href-”www-baidu-com”-gt-这是百度-lt-a-gt" class="headerlink" title="html标签  &lt;a href=”www.baidu.com”&gt;这是百度&lt;/a&gt;"></a>html标签  &lt;a href=”www.baidu.com”&gt;这是百度&lt;/a&gt;</h2><h2 id="下划线-lt-hr-gt"><a href="#下划线-lt-hr-gt" class="headerlink" title="下划线  &lt;hr/&gt;"></a>下划线  &lt;hr/&gt;</h2><h2 id="html图像-lt-img-src-”图片-jpg”-width-”100”-height-”50”-alt-”Big-Boat-鼠标移至该图片时出现的提示信息-”-gt"><a href="#html图像-lt-img-src-”图片-jpg”-width-”100”-height-”50”-alt-”Big-Boat-鼠标移至该图片时出现的提示信息-”-gt" class="headerlink" title="html图像  &lt;img src=”图片.jpg” width=”100” height=”50” alt=”Big Boat(鼠标移至该图片时出现的提示信息)”&gt;"></a>html图像  &lt;img src=”图片.jpg” width=”100” height=”50” alt=”Big Boat(鼠标移至该图片时出现的提示信息)”&gt;</h2><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><pre><code>&lt;html&gt;
&lt;body background=&quot;/i/eg_background.jpg&quot;&gt;
&lt;h3&gt;图像背景&lt;/h3&gt;
&lt;p&gt;gif 和 jpg 文件均可用作 HTML 背景。&lt;/p&gt;
&lt;p&gt;如果图像小于页面，图像会进行重复。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><h2 id="空格-lt-br-gt"><a href="#空格-lt-br-gt" class="headerlink" title="空格   &lt;br/&gt;"></a>空格   &lt;br/&gt;</h2><h1 id="html元素（元素与标签的区别）"><a href="#html元素（元素与标签的区别）" class="headerlink" title="html元素（元素与标签的区别）"></a>html元素（元素与标签的区别）</h1><p>指开始标签和结束标签之间的所有代码</p>
<h1 id="html属性-可参考html属性手册"><a href="#html属性-可参考html属性手册" class="headerlink" title="html属性(可参考html属性手册)"></a>html属性(可参考html属性手册)</h1><p>标签拥有属性，属性总是以名称/值的形式出现，例如：<br>&lt;a href=”www.baidu.com” target=”_blank”&gt;百度&lt;/a&gt;    target指向blank表示指向的链接在新页面打开</p>
<h1 id="html链接"><a href="#html链接" class="headerlink" title="html链接"></a>html链接</h1><p>命名锚：在html文档中对锚进行定义，创建锚 &lt;a name=”tips”（锚的地址）&gt;基本的注意事项(锚的名称)&lt;/a&gt;<br>指向锚: 然后在该文档中创建指向该锚的链接 &lt;a href=”#tips”&gt;有用的提示&lt;/a&gt;<br>属性：名称=值  &lt;h2 style=”background-color: green”&gt;This is a paragraph&lt;/h2&gt;</p>
<h1 id="html格式化"><a href="#html格式化" class="headerlink" title="html格式化"></a>html格式化</h1><p>所谓的格式化，（赋予文本一定的格式）可定义很多供格式化输出的元素，比如粗体和斜体字</p>
<p>文本格式化标签</p>
<pre><code>&lt;b&gt;                定义粗体文字
&lt;big&gt;            定于大号字
&lt;em&gt;            定义着重文字
&lt;i&gt;                定义斜体字
&lt;small&gt;&lt;/small&gt; 定义小号字
&lt;strong&gt;        定义加重语气
&lt;sub&gt;            定义下表字
&lt;sup&gt;            定义上标字
&lt;ins&gt;            定义插入字
&lt;del&gt;            定义删除字（字被杠掉）
</code></pre><p>计算机输出标签</p>
<pre><code>&lt;code&gt;            定义计算机代码
&lt;kbd&gt;            定义键盘码
&lt;samp&gt;            定义计算机代码样本
&lt;tt&gt;            定义打字机代码
&lt;var&gt;            定义变量
&lt;pre&gt;            定义预格式文本
</code></pre><p>引用、引用和术语定义</p>
<pre><code>&lt;abbr&gt;            定义缩写:&lt;abbr title=&quot;World Health Organization&quot;&gt;WHO&lt;/abbr&gt;&gt; 鼠标移至WHO时，会出现全称提示
&lt;acronym&gt;        定义首字母缩写
&lt;address&gt;        定义地址
&lt;bdo&gt;            定义文字方向
&lt;blockquote&gt;    定义长的引用
&lt;q&gt;                定义短的引用语
&lt;cite&gt;            定义引用、印证
&lt;dfn&gt;            定义一个定义项目
</code></pre><h1 id="html-css"><a href="#html-css" class="headerlink" title="html css"></a>html css</h1><p>通过使用HTML4.0,所有的格式化代码均可移出html文档，然后移入一个独立的样式表，格式化怎么理解？</p>
<h2 id="html中的样式"><a href="#html中的样式" class="headerlink" title="html中的样式"></a>html中的样式</h2><p>当单个文件需要特别样式时，就可以使用内部样式表</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;style type=&quot;text/css&quot;&gt;
    h1{color:red}
    p{color:blue}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;header 1&lt;/h1&gt;
    &lt;p&gt;a paragraph&lt;/p&gt;&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><h2 id="没有下划线的链接（内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式，样式属性可以包含任何CSS属性）"><a href="#没有下划线的链接（内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式，样式属性可以包含任何CSS属性）" class="headerlink" title="没有下划线的链接（内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式，样式属性可以包含任何CSS属性）"></a>没有下划线的链接（内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式，样式属性可以包含任何CSS属性）</h2><pre><code>&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt;
&lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;zh-cn&quot; /&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;a href=&quot;/example/html/lastpage.html&quot; style=&quot;text-decoration:none&quot;&gt;
这是一个链接！
&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><h2 id="链接到一个外部样式表（使用标签链接到一个外部样式表）"><a href="#链接到一个外部样式表（使用标签链接到一个外部样式表）" class="headerlink" title="链接到一个外部样式表（使用标签链接到一个外部样式表）"></a>链接到一个外部样式表（使用<link>标签链接到一个外部样式表）</h2><p>当样式需要被应用到很多页面时，外部样式表将是理想的选择。使用外部样式表，便于通过更改一个整个站点的外观</p>
<pre><code>&lt;html&gt;
&lt;head&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/html/csstest1.css&quot; &gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;我通过外部样式表进行格式化。&lt;/h1&gt;
&lt;p&gt;我也一样！&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><h2 id="样式属性参考表"><a href="#样式属性参考表" class="headerlink" title="样式属性参考表"></a>样式属性参考表</h2><pre><code>&lt;style&gt;         定义样式定义
&lt;link&gt;            定义资源引用
&lt;div&gt;            定义文档中的节或区域（块级）
&lt;span&gt;            定义文档中的行内的小块或区域
</code></pre><h1 id="html表格"><a href="#html表格" class="headerlink" title="html表格"></a>html表格</h1><pre><code>&lt;table border=&quot;1&quot; bgcolor=&quot;red&quot; background=&quot;/图片.jpg&quot;&gt;
&lt;tr&gt;
&lt;th&gt;表头&lt;/th&gt;
&lt;th&gt;表头&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td bgcolor=&quot;red&quot;&gt;row 1, cell 1&lt;/td&gt;
&lt;td&gt;row 1, cell 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td background=&quot;/图片.jpg&quot;&gt;row 2, cell 1&lt;/td&gt;
&lt;td&gt;row 2, cell 2&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</code></pre><p>浏览器显示：<br>    row 1, cell 1     row 1, cell 2<br>    row 2, cell 1     row 2, cell 2</p>
<h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><pre><code>&lt;table&gt;            定义表格
&lt;caption&gt;        定义表格标题
&lt;th&gt;            定义表格的表头
&lt;tr&gt;            定义表格的行
&lt;td&gt;            定义表格单元
&lt;thead&gt;            定义表格的页眉
&lt;tbody&gt;            定义表格的主体
&lt;tfoot&gt;            定义表格的页脚
&lt;col&gt;            定义表格列的属性
&lt;colgroup&gt;        定义表格列的组
</code></pre><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>无序列表</p>
<pre><code>&lt;ul&gt;
    &lt;li&gt;Coffee&lt;/li&gt;
    &lt;li&gt;milk&lt;/li&gt;&gt;
&lt;/ul&gt;
</code></pre><p>有序列表</p>
<pre><code>&lt;ol&gt;
    &lt;li&gt;Coffee&lt;/li&gt;
    &lt;li&gt;milk&lt;/li&gt;&gt;
&lt;/ol&gt;
</code></pre><h1 id="html块"><a href="#html块" class="headerlink" title="html块"></a>html块</h1><p>可以通过&lt;div&gt;和&lt;span&gt;将html元素组合起来<br>html&lt;div&gt;元素是快加元素，它是可用于组合其他html元素的容器<br>&lt;div&gt;元素没有特定的含义，除此之外，由于它属于块级元素，浏览器会在其后显示折行<br>如果与css一同使用，&lt;div&gt;元素可用于对大的内容块设置样式属性<br>&lt;div&gt;元素的另一个常见的用途是文档布局，它取代了使用表格定义布局的老式方法，使用&lt;table&gt;元素进行文档布局不是表格的正确用法，<table>元素的作用是显示表格化的数据</table></p>
<p>html&lt;span&gt;元素是内联元素，可用作文本的容器<br>&lt;span&gt;元素也没有特定的含义<br>当与CSS一同使用时，&lt;span&gt;元素可用于为部分文本设置样式属性。</p>
<h1 id="html类"><a href="#html类" class="headerlink" title="html类"></a>html类</h1><p>对html进行分类（设置类），使我们能够为元素类定义CSS样式，为相同的类设置相同的样式，或者为不同的类设置不同的样式<br>&lt;div&gt;示例</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
.cities {
    background-color:black;
    color:white;
    margin:20px;
    padding:20px;
}
.cities_2{
    background-color:red;
    color:white;
    margin:20px;
    padding:20px;
}        
&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;!--分块，从head区中引用相应的style--&gt;
&lt;div class=&quot;cities&quot;&gt;
&lt;h2&gt;London&lt;/h2&gt;

&lt;p&gt;London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants.&lt;/p&gt;

&lt;p&gt;Standing on the River Thames, London has been a major settlement for two millennia, its history going back to its founding by the Romans, who named it Londinium.&lt;/p&gt;
&lt;/div&gt; 

&lt;div class=&quot;cities_2&quot;&gt;
&lt;h2&gt;Paris&lt;/h2&gt;

&lt;p&gt;Paris is the capital and most populous city of France.&lt;/p&gt;

&lt;p&gt;Situated on the Seine River, it is at the heart of the 蝜e-de-France region, also known as the r間ion parisienne.&lt;/p&gt;

&lt;p&gt;Within its metropolitan area is one of the largest population centers in Europe, with over 12 million inhabitants.&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&quot;cities&quot;&gt;
&lt;h2&gt;Tokyo&lt;/h2&gt;

&lt;p&gt;Tokyo is the capital of Japan, the center of the Greater Tokyo Area, and the most populous metropolitan area in the world.&lt;/p&gt;

&lt;p&gt;It is the seat of the Japanese government and the Imperial Palace, and the home of the Japanese Imperial Family.&lt;/p&gt;

&lt;p&gt;The Tokyo prefecture is part of the world&apos;s most populous metropolitan area with 38 million people and the world&apos;s largest urban economy.&lt;/p&gt;
&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre><p>&lt;span&gt;示例；内联样式</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  span.red {color:red;}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;My &lt;span class=&quot;red&quot;&gt;Important&lt;/span&gt; Heading&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><h1 id="html布局（网站的结构布局）"><a href="#html布局（网站的结构布局）" class="headerlink" title="html布局（网站的结构布局）"></a>html布局（网站的结构布局）</h1><p>使用&lt;div&gt;元素的html布局：&lt;div&gt;元素常用作布局工具，因为能够轻松通过CSS对其进行定位<br>这个例子使用了四个&lt;div&gt;元素来创建的多列布局</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;!--style内部的CSS样式--&gt;
&lt;style&gt;
#header {
    background-color:black;
    color:white;
    text-align:center;
    padding:5px;
}
#nav {
    line-height:30px;
    background-color:#eeeeee;
    height:300px;
    width:100px;
    float:left;
    padding:5px;          
}
#section {
    width:350px;
    float:left;
    padding:10px;          
}
#footer {
    background-color:black;
    color:white;
    clear:both;
    text-align:center;
   padding:5px;          
}
&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div id=&quot;header&quot;&gt;
&lt;h1&gt;City Gallery&lt;/h1&gt;
&lt;/div&gt;

&lt;div id=&quot;nav&quot;&gt;
London&lt;br&gt;
Paris&lt;br&gt;
Tokyo&lt;br&gt;
&lt;/div&gt;

&lt;div id=&quot;section&quot;&gt;
&lt;h2&gt;London&lt;/h2&gt;
&lt;p&gt;
London is the capital city of England. It is the most populous city in the United Kingdom,
with a metropolitan area of over 13 million inhabitants.
&lt;/p&gt;
&lt;p&gt;
Standing on the River Thames, London has been a major settlement for two millennia,
its history going back to its founding by the Romans, who named it Londinium.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;footer&quot;&gt;
Copyright ? W3Schools.com
&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre><h2 id="html5语义元素"><a href="#html5语义元素" class="headerlink" title="html5语义元素"></a>html5语义元素</h2><pre><code>header             定义文档或节的页眉
nav             定义导航链接的容器
section         定义文档中的节
article         定义独立的自包含文章
aside             定义内容之外的内容（比如侧栏）
footer             定义文档或节的页脚
details         定义额外的细节
summary          定义details元素的标题
</code></pre><h1 id="html响应式Web容器"><a href="#html响应式Web容器" class="headerlink" title="html响应式Web容器"></a>html响应式Web容器</h1><ul>
<li>RWD指的是响应式Web涉及（Responsive Web Design）</li>
<li>RWD能够以可变尺寸传递网页</li>
<li>RWD对于平板和移动设备是必需的<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en-US"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.city &#123;</span><br><span class="line">float: left;</span><br><span class="line">margin: <span class="number">5</span>px;</span><br><span class="line">padding: <span class="number">15</span>px;</span><br><span class="line">width: <span class="number">300</span>px;</span><br><span class="line">height: <span class="number">300</span>px;</span><br><span class="line">border: <span class="number">1</span>px solid black;</span><br><span class="line">&#125; </span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;W3School Demo&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;h2&gt;Resize this responsive page!&lt;/</span>h2&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"city"</span>&gt;</span><br><span class="line">&lt;h2&gt;London&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;London is the capital city of England.&lt;/</span>p&gt;</span><br><span class="line">&lt;p&gt;It is the most populous city <span class="keyword">in</span> the United Kingdom,</span><br><span class="line"><span class="keyword">with</span> a metropolitan area <span class="keyword">of</span> over <span class="number">13</span> million inhabitants.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"city"</span>&gt;</span><br><span class="line">&lt;h2&gt;Paris&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;Paris is the capital and most populous city of France.&lt;/</span>p&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;div class="city"&gt;</span></span><br><span class="line"><span class="regexp">&lt;h2&gt;Tokyo&lt;/</span>h2&gt;</span><br><span class="line">&lt;p&gt;Tokyo is the capital <span class="keyword">of</span> Japan, the center <span class="keyword">of</span> the Greater Tokyo Area,</span><br><span class="line">and the most populous metropolitan area <span class="keyword">in</span> the world.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="html框架"><a href="#html框架" class="headerlink" title="html框架"></a>html框架<frame></h1><p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面<br>框架标签<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;frameset cols=<span class="string">"25%,75%"</span>&gt;</span><br><span class="line">	&lt;frame src=<span class="string">"frame_a.html"</span>&gt;</span><br><span class="line">	&lt;frame src=<span class="string">"frame_b.html"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/frameset&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="html内联框架（用于在网页内显示网页）"><a href="#html内联框架（用于在网页内显示网页）" class="headerlink" title="html内联框架（用于在网页内显示网页）"></a>html内联框架（用于在网页内显示网页）</h1><pre><code>&lt;iframe src=&quot;URL&quot; frameborder=&quot;0&quot; width=&quot;200&quot; height=&quot;100&quot;&gt;...&lt;/frame&gt;
</code></pre><p>URL指向隔离页面的位置</p>
<h1 id="html背景"><a href="#html背景" class="headerlink" title="html背景"></a>html背景</h1><p>作为body的属性，&lt;body bgcolor=”red”&gt;&lt;/body&gt;</p>
<h1 id="html脚本"><a href="#html脚本" class="headerlink" title="html脚本"></a>html脚本</h1><pre><code>&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
document.write(&quot;Hello World!&quot;)
//--&gt;
&lt;/script&gt;
</code></pre><h1 id="html字符实体"><a href="#html字符实体" class="headerlink" title="html字符实体"></a>html字符实体</h1><pre><code>html中的预留字符必须被替换为字符实体，空格，大于，小于号等
</code></pre><h1 id="html-web服务器"><a href="#html-web服务器" class="headerlink" title="html web服务器"></a>html web服务器</h1><h1 id="html-表单"><a href="#html-表单" class="headerlink" title="html 表单"></a>html 表单</h1><p>html表单用于搜集不同类型的用户输入<br>用&lt;form&gt;元素定义html表单</p>
<pre><code>&lt;form&gt;
    form elements
&lt;form&gt;
</code></pre><p>html表单包含表单元素<br>表单元素指不同类型的input元素、复选框、单选按钮和提交按钮等</p>
<p>##&lt;input&gt;元素<br>属性类型<br>    text             定义常规文本输入<br>    radio            定义单选按钮输入（选择多个选择之一）<br>    submit            定义提交按钮（提交表单）</p>
<p>&lt;input type=”text”&gt;定义用于文本输入的单行输入字段<br>文本输入框实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">	First name:<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="comment">&lt;!--插入文本框--&gt;</span></span></span><br><span class="line">	&lt;input type="text" name="firstname"&gt;</span><br><span class="line">	&lt;br&gt;</span><br><span class="line">	Last name:&lt;br&gt;</span><br><span class="line">	&lt;input type="text" name="lastname"&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>
<p>&lt;input type=”radio”&gt;定义单选按钮<br>单选按钮实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">	&lt;input type=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"male"</span> checked&gt;Male</span><br><span class="line">	&lt;br&gt;</span><br><span class="line">	&lt;input type=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"female"</span>&gt;Female</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>&lt;input type=”submit”&gt;定义用于向表单处理程序<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--表单结果提交到的位置,method指表单的提交方式，适用于少量提交，并且信息会出现在浏览器中--&gt;</span><br><span class="line">&lt;form action=<span class="string">"action_page.php"</span> method=<span class="string">"GET"</span>&gt;</span><br><span class="line">	First name:<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line">	&lt;input type="text" name="firstname" value="Mickey"&gt;</span><br><span class="line">	&lt;br&gt;</span><br><span class="line">	Last name:&lt;br&gt;</span><br><span class="line">	&lt;input type="text" name="lastname" value="Mouse"&gt;</span><br><span class="line">	&lt;br&gt;&lt;br&gt;</span><br><span class="line">	&lt;input type="submit" value="Submit"&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>
<p>用&lt;fieldset&gt;组合表单数据<br>&lt;legend&gt;元素为&lt;fieldset&gt;元素定义标题，把下面的几个文本框联系到一起，框成一个整体<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"action_page.php"</span>&gt;</span><br><span class="line">	&lt;fieldset&gt;</span><br><span class="line">		&lt;legend&gt;Personal information&lt;<span class="regexp">/legend&gt;</span></span><br><span class="line"><span class="regexp">		First name:&lt;br&gt;</span></span><br><span class="line"><span class="regexp">		&lt;input type="text" name="firstname" value="mickey"&gt;</span></span><br><span class="line"><span class="regexp">		&lt;br&gt;</span></span><br><span class="line"><span class="regexp">		Last name:&lt;br&gt;</span></span><br><span class="line"><span class="regexp">		&lt;input type="text" name="lastname" value="Mouse"&gt;</span></span><br><span class="line"><span class="regexp">		&lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="regexp">		&lt;input type="submit" value="submit"&gt;</span></span><br><span class="line"><span class="regexp">	&lt;/</span>fieldset&gt;</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="html-form属性"><a href="#html-form属性" class="headerlink" title="html form属性"></a>html form属性</h2><pre><code>&lt;form action=&quot;action_page.php&quot; method=&quot;GET&quot; target=&quot;_blank&quot; accept-charset=&quot;
UTF-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot; novalidate&gt;
form elements
&lt;/form&gt;
</code></pre><p>&lt;form&gt;属性列表<br>    accept-charset                规定在被提交表单中使用的字符集（默认：页面字符集）<br>    action                         规定向何处提交表单的地址（url）提交页面<br>    autocomplete                 规定浏览器应该自动完成表单（默认开启）<br>    enctype                     规定被提交数据的编码(默认：url-encoded)<br>    method                         规定在提交表单时所用的http方法（默认：GET）<br>    name                         规定识别表单的名称(对于DOM使用：document.forms.name)<br>    novalidate                     规定浏览器不验证表单<br>    target                         规定action属性中地址的目标（默认：_self）</p>
<h2 id="lt-select-gt-元素（下拉列表）"><a href="#lt-select-gt-元素（下拉列表）" class="headerlink" title="&lt;select&gt;元素（下拉列表）"></a>&lt;select&gt;元素（下拉列表）</h2><p>实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;select name=<span class="string">"cars"</span>&gt;</span><br><span class="line">	&lt;option value=<span class="string">"volo"</span>&gt;Volo&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">	&lt;option value="saab"&gt;Saab&lt;/</span>option&gt;</span><br><span class="line">	&lt;option value=<span class="string">"fiat"</span>&gt;Fiat&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">	&lt;option value="audi"&gt;Audi&lt;/</span>option&gt;</span><br><span class="line">&lt;<span class="regexp">/select&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="textarea元素定义多行输入字段（文本域）"><a href="#textarea元素定义多行输入字段（文本域）" class="headerlink" title="textarea元素定义多行输入字段（文本域）"></a>textarea元素定义多行输入字段（文本域）</h2><p>实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea name=<span class="string">"message"</span> rows=<span class="string">"10"</span> cols=<span class="string">"30"</span>&gt;</span><br><span class="line">	The cat was playing <span class="keyword">in</span> the garden.</span><br><span class="line">&lt;<span class="regexp">/textarea&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="button元素定义可点击的按钮，上面的submit也会自动生成一个按钮，这个按钮的功能单一，只是用于向服务器提交表单"><a href="#button元素定义可点击的按钮，上面的submit也会自动生成一个按钮，这个按钮的功能单一，只是用于向服务器提交表单" class="headerlink" title="button元素定义可点击的按钮，上面的submit也会自动生成一个按钮，这个按钮的功能单一，只是用于向服务器提交表单"></a>button元素定义可点击的按钮，上面的submit也会自动生成一个按钮，这个按钮的功能单一，只是用于向服务器提交表单</h2><p>实例<br>    &lt;button type=”button” onclick=”alert(‘hello world’)”&gt;click me&lt;/button&gt;</p>
<h2 id="html5新增表单元素"><a href="#html5新增表单元素" class="headerlink" title="html5新增表单元素"></a>html5新增表单元素</h2><ul>
<li>&lt;datalist&gt;&lt;/datalist&gt;元素为&lt;input&gt;元素规定预定义选项列表，用户会在他们输入数据时看到预定义选项的下拉列表</li>
<li>&lt;keygen&gt;&lt;/keygen&gt;</li>
<li>&lt;output&gt;&lt;/output&gt;<br>实例<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"action_page.php"</span>&gt;</span><br><span class="line">	&lt;input list=<span class="string">"browsers"</span>&gt;</span><br><span class="line">	&lt;datalist id=<span class="string">"browsers"</span>&gt;</span><br><span class="line">		&lt;option value=<span class="string">"Internet Explorer"</span>&gt;</span><br><span class="line">		&lt;option value=<span class="string">"Firefox"</span>&gt;</span><br><span class="line">		&lt;option value=<span class="string">"chrome"</span>&gt;</span><br><span class="line">		&lt;option value=<span class="string">"opera"</span>&gt;</span><br><span class="line">		&lt;option value=<span class="string">"safari"</span>&gt;</span><br><span class="line">	&lt;<span class="regexp">/datalist&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>form&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="html输入类型-本章描述-lt-input元素的输入类型-gt"><a href="#html输入类型-本章描述-lt-input元素的输入类型-gt" class="headerlink" title="html输入类型,本章描述&lt;input元素的输入类型&gt;"></a>html输入类型,本章描述&lt;input元素的输入类型&gt;</h1><ul>
<li>input type：text</li>
<li>input type: password</li>
<li>input type：submit</li>
<li>input type: radio</li>
<li>input type: checkbox复选框</li>
<li>input type: button</li>
</ul>
<h1 id="html输入属性"><a href="#html输入属性" class="headerlink" title="html输入属性"></a>html输入属性</h1><ul>
<li>value表示输入框中初始值，用于提示，用户可以手动删除，自行添加自己所需的值</li>
<li>readonly属性规定输入字段为只读（不能修改）,不需要属性值，等同于readonly=”readonly”<br>  例如：&lt;input type=”text” name=”firstname” value=”John” readonly&gt;</li>
<li>disabled属性规定输入字段是禁用的，被禁用的元素是不可用和不可点击的，被禁用的元素不会被提交<br>  例如：&lt;input type=”text” name=”firstname” value=”John” disabled&gt;</li>
<li>size属性规定输入字段的尺寸（以字符计）<br>  例如：&lt;input type=”text” name=”firstname” value=”John” size=”40”&gt;</li>
<li>maxlength属性规定输入字段允许的最大长度<br>  例如：&lt;input type=”text” name=”firstname” maxlength=”10”&gt;</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 职场进阶 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java web项目开发实例一]]></title>
      <url>/2017/11/23/Java-web%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%BE%8B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>实现简单的用户登录网站，具体功能有：提供一个登录界面（Login）,包括用户名，密码等；然后验证用户输入的信息是否正确（LoginCl），如果正确，跳转提示登录成功的界面；错误则返回到登录界面<br><a id="more"></a><br>主要知识点：页面的跳转</p>
<h1 id="登录界面-Login-java-：通过html的方式实现，代码如下："><a href="#登录界面-Login-java-：通过html的方式实现，代码如下：" class="headerlink" title="登录界面(Login.java)：通过html的方式实现，代码如下："></a>登录界面(Login.java)：通过html的方式实现，代码如下：</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zy.firstWeb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//处理get请求</span></span><br><span class="line">	<span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line">	<span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line">		</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line">	<span class="comment">//业务逻辑</span></span><br><span class="line">			</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">				</span><br><span class="line">			<span class="comment">//中文乱码</span></span><br><span class="line">			res.setContentType(<span class="string">"text/html;charset=gbk"</span>);</span><br><span class="line">			PrintWriter pw=res.getWriter();</span><br><span class="line">			</span><br><span class="line">		</span><br><span class="line">			<span class="comment">//返回登录界面</span></span><br><span class="line">			pw.println(<span class="string">"&lt;html&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"&lt;body&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"&lt;h1&gt;登录界面&lt;h1&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"&lt;form action=servlet/LoginCI method=post&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"用户名:&lt;input type=text name=usrname&gt;&lt;br&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"密码:&lt;input type=password name=passwd&gt;&lt;br&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"&lt;input type=submit value=loing&gt;&lt;br&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"&lt;/form&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"&lt;/body&gt;"</span>);</span><br><span class="line">			pw.println(<span class="string">"&lt;/html&gt;"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">				ex.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//处理post请求</span></span><br><span class="line">	<span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line">	<span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line">		</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line">		<span class="comment">//用this传给get方法</span></span><br><span class="line">		<span class="keyword">this</span>.doGet(req,res);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<div id="aplayer5" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer5"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "如果来生还是今世的重复",
					author: "杭宏",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%9D%AD%E5%AE%8F%20-%20%E5%A6%82%E6%9E%9C%E6%9D%A5%E7%94%9F%E8%BF%98%E6%98%AF%E4%BB%8A%E4%B8%96%E7%9A%84%E9%87%8D%E5%A4%8D.mp3",
					pic: "",
				}
			});
		</script>
<h1 id="处理、验证用户的登录信息（）LoginCl"><a href="#处理、验证用户的登录信息（）LoginCl" class="headerlink" title="处理、验证用户的登录信息（）LoginCl"></a>处理、验证用户的登录信息（）LoginCl</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zy.firstWeb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">//验证用户提交的信息是否正确，用req</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"serial"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginCI</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//处理get请求</span></span><br><span class="line">	<span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line">	<span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line">		</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line">			<span class="comment">//业务逻辑</span></span><br><span class="line">			</span><br><span class="line">	<span class="keyword">try</span>&#123;</span><br><span class="line">		<span class="comment">//接受用户名和密码</span></span><br><span class="line">		String u=req.getParameter(<span class="string">"usrname"</span>);</span><br><span class="line">		String p=req.getParameter(<span class="string">"passwd"</span>);</span><br><span class="line">		<span class="comment">//验证</span></span><br><span class="line">		<span class="keyword">if</span>((u.equals(<span class="string">"zy"</span>))&amp;&amp;(p.equals(<span class="string">"123"</span>)))&#123;</span><br><span class="line">			<span class="comment">//合法</span></span><br><span class="line">			<span class="comment">//跳转到wel</span></span><br><span class="line">			res.sendRedirect(<span class="string">"Wel"</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="comment">//不合法</span></span><br><span class="line">			<span class="comment">//跳转</span></span><br><span class="line">			res.sendRedirect(<span class="string">"Login"</span>);</span><br><span class="line">			<span class="comment">//写你要的servlet的那个servlet的url，</span></span><br><span class="line">			<span class="comment">//myeclipse自动生成的web.xml文件中的url-pattern，格式为/servlet/****,作为跳转对象，浏览器报404错误，认为去掉servlet保留成/***的形式，跳转会成功,可能就不能写成两个/的形式吧！！！！！</span></span><br><span class="line">		&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">				ex.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//处理post请求</span></span><br><span class="line">		<span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line">		<span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line">		</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line">			<span class="comment">//用this传给get方法</span></span><br><span class="line">			<span class="keyword">this</span>.doGet(req,res);</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="登录成功的欢迎页面（Well-java"><a href="#登录成功的欢迎页面（Well-java" class="headerlink" title="登录成功的欢迎页面（Well.java)"></a>登录成功的欢迎页面（Well.java)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zy.firstWeb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wel</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//处理get请求</span></span><br><span class="line">	<span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line">	<span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line">		</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line">			<span class="comment">//业务逻辑</span></span><br><span class="line">			</span><br><span class="line">			<span class="keyword">try</span>&#123;</span><br><span class="line">				PrintWriter pw=res.getWriter();</span><br><span class="line">				pw.println(<span class="string">"wel.hello"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">				ex.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//处理post请求</span></span><br><span class="line">		<span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line">		<span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line">		</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line">			<span class="comment">//用this传给get方法</span></span><br><span class="line">			<span class="keyword">this</span>.doGet(req,res);</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="配置信息如下：web-xml"><a href="#配置信息如下：web-xml" class="headerlink" title="配置信息如下：web.xml"></a>配置信息如下：web.xml</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.zy.firstWeb.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.zy.firstWeb.Login<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginCI<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.zy.firstWeb.LoginCI<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Wel<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.zy.firstWeb.Wel<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginCI<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LoginCI<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Wel<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Wel<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 案例练习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> servlet开发 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[servlet开发]]></title>
      <url>/2017/11/22/servlet%E5%BC%80%E5%8F%91/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Jsp是基于servlet的，servlet的开发流程如下："><a href="#Jsp是基于servlet的，servlet的开发流程如下：" class="headerlink" title="Jsp是基于servlet的，servlet的开发流程如下："></a>Jsp是基于servlet的，servlet的开发流程如下：</h1><ul>
<li>在tomacat的文件夹（\webapps）下新建servelt名，然后在其中创建WEB-INF的文件夹，WEB-INF文件夹至少包含两个文件夹分别是classes(用于存放servlet程序编译生成的class文件，)，lib文件夹（用于存放包jar，图片等资源），一个文件web.xml</li>
<li>开发servlet（编写程序，引入servlet-api.jar）</li>
<li>部署你的servlet（就是在tomcat那里登记自己开发的servlet的名称位置等信息，通过在WEB-INF文件夹下新建web.xml文件）</li>
<li>启动tomcat，访问你的servlet(在浏览器中输入地址:http//“ip地址（本机可用localhost代替）”:8080/myWebsite/servlet名)<a id="more"></a>
<h1 id="servlet程序"><a href="#servlet程序" class="headerlink" title="servlet程序"></a>servlet程序</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="comment">//这是我的第一个servlet，使用servlet接口的方式实现</span></span><br><span class="line"><span class="keyword">package</span> com.zy;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">	 <span class="comment">//该函数用于初始化serlvet（类似于类的构造函数</span></span><br><span class="line">	 <span class="comment">//该函数只会被调用一次（当用户第一次访问该servlet时被调用）</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig parm1)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">		<span class="comment">// <span class="doctag">TODO:</span> Add your code here</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// <span class="doctag">TODO:</span> Add your code here</span></span><br><span class="line">	&#125;</span><br><span class="line">	 <span class="comment">//该函数用于处理逻辑</span></span><br><span class="line">	 <span class="comment">//程序员应当将业务逻辑代码写在这里</span></span><br><span class="line">	 <span class="comment">//当用户每访问该servlet时，都会被调用</span></span><br><span class="line">	 <span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line">	 <span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest req, ServletResponse res)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//为了解其执行方式，让它在控制台打印</span></span><br><span class="line">		System.out.println(<span class="string">"service it"</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//从res中得到PrintWrite</span></span><br><span class="line">		PrintWriter pw=res.getWriter();</span><br><span class="line">		pw.println(<span class="string">"hello world"</span>);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// <span class="doctag">TODO:</span> Add your code here</span></span><br><span class="line">		<span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	 <span class="comment">//销毁servlet实例（释放内存）</span></span><br><span class="line">	 <span class="comment">//1.reload改servlet</span></span><br><span class="line">	 <span class="comment">//2.关闭servlet</span></span><br><span class="line">	 <span class="comment">//3.关机</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// <span class="doctag">TODO:</span> Add your code here</span></span><br><span class="line">		System.out.println(<span class="string">"destroy"</span>);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<div id="aplayer9" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer9"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "最后的倾诉",
					author: "韩磊",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E9%9F%A9%E7%A3%8A%20-%20%E6%9C%80%E5%90%8E%E7%9A%84%E5%80%BE%E8%AF%89.mp3",
					pic: "",
				}
			});
		</script>
<h1 id="文件部署"><a href="#文件部署" class="headerlink" title="文件部署"></a>文件部署</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;!-- 给你的servlet取名，任意的--&gt;</span><br><span class="line">	&lt;servlet-name&gt;hello&lt;<span class="regexp">/servlet-name&gt;</span></span><br><span class="line"><span class="regexp">     &lt;!--指明servlet的路径，（包名+类名）--&gt;</span></span><br><span class="line"><span class="regexp">	&lt;servlet-class&gt;com.zy.Hello&lt;/</span>servlet-<span class="class"><span class="keyword">class</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">  &lt;<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;!-- 给你的<span class="title">servlet</span>取名，任意的，与上面的名字对应--&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">servlet</span>-<span class="title">name</span>&gt;<span class="title">hello</span>&lt;/<span class="title">servlet</span>-<span class="title">name</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;!--这是在浏览器中输入的访问该<span class="title">servlet</span>的<span class="title">url</span>,任意的--&gt;</span></span><br><span class="line"><span class="class">	&lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/<span class="title">zy</span>&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">web</span>-<span class="title">app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="完成上述两步后，然后启动tomcat，输入对应的URL可实现相关servlet的访问"><a href="#完成上述两步后，然后启动tomcat，输入对应的URL可实现相关servlet的访问" class="headerlink" title="完成上述两步后，然后启动tomcat，输入对应的URL可实现相关servlet的访问"></a>完成上述两步后，然后启动tomcat，输入对应的URL可实现相关servlet的访问</h1>]]></content>
      
        <categories>
            
            <category> 职场进阶 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CGI </tag>
            
            <tag> Servlet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java web整合开发一]]></title>
      <url>/2017/11/20/Java%20Web%E6%95%B4%E5%90%88%E5%BC%80%E5%8F%911/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="静态页面"><a href="#静态页面" class="headerlink" title="静态页面"></a>静态页面</h1><p>&#160; &#160; 单纯的用Html、CSS（负责对Html整体管理，可以内嵌到Html语言，也可以单独编写成文件，在Html语言中外部引用）语言编写的页面，其特点就是“死的”，无法与外部进行交互，就像搭建的博客本身，呈现给读者的只是一个单纯的网页，这个网页除了开发者从后台操作之外，并不会“动”<br><a id="more"></a><br>&#160;&#160;为了让网页“活起来”，CGI（Common Gateway interface，公共网关接口）诞生了，特点是运行在服务器端，根据不同客户端请求输出相应的HTML页面，然后Web服务器再把这个静态页面返回给浏览器作为客户端的响应。</p>
<pre><code>                                                                    ***********服务器端**********
                                                                    *                            *
                                                                    *                             *
        1.输出URL地址   *              2.向服务器发送浏览请求  3.请求运行                    5.输出生成
    **********************            *************************   某个CGI程序                 HTML语言
                        *                                            *                              *
用户                        客户端                                  *                            *
     *                        浏览器     *                                 * *                         * *    
    **********************            *************************       *                           *
     *    7.显示HTML                     * 6.返回HTML页面作出响应          CGI程序生成所需的HTML文件
                                                                                    *                
                                                                                   *
                                                                          4.读取数据库或者文件
                                                                                   *
                                                                                   *
                                                                                  数据库

                                          CGI的操作过程
</code></pre><p>类比java程序，CGI程序的语言主要有两种Perl和shell脚本(java，c，c++均可)，CGI可以访问存储数据库中的数据或者其他系统中的文件，实现动态生成效果。<br>不足之处：<br>    每个请求均需要启动一个可执行的CGI程序，如果请求频繁。。。<br>    为了解决这个问题，改进的CGI诞生了，即所谓的Java Servert，本质上是程序（在Java中程序是以类为单位的，没毛病吧？，这其实也是servert比CGI的高明之处，CGI有点像面向过程，而Servlet面向对象，可供多个对象同时调用），用于处理来自浏览器的指令（网址），并向浏览器输出html代码，该程序提供了多种类及其方法却没有main方法，所以不能主动执行，由web服务器如（Tomcat）调用Servlet的中的方法来实现。<br><div id="aplayer4" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer4"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "白龙马",
					author: "樊竹青",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%A8%8A%E7%AB%B9%E9%9D%92%20-%20%E7%99%BD%E9%BE%99%E9%A9%AC.mp3",
					pic: "",
				}
			});
		</script></p>
<p>&#160;&#160;&#160;&#160;Servert的模板：JSP（Java Server Pages）<strong><em>*</em></strong>实现普通静态html和动态html混合编码，其是Servlet API的扩展，把它当成servlet的一种</p>
<h4 id="JSP基本原理"><a href="#JSP基本原理" class="headerlink" title="JSP基本原理"></a>JSP基本原理</h4><ol>
<li>翻译：编写好的JSP（.jsp文件）文件首先会被Web容器中JSP（也是Servlet引擎）引擎转换成Java源代码。</li>
<li>编译：Java代码通过Jvm(Java虚拟机)编程成可执行的字节码（二进制形式）</li>
<li>请求：当Web服务器（“容器”）接受了客户端的请求后，执行上述的字节码，生成相应的页面反馈给浏览器显示</li>
</ol>
<p>Java Web开发环境：开发者工具包JDK，集成开发环境IDE（集编写、编译、部署和调试程序的“一条龙服务”），Java Web服务器（所谓的“容器”），web应用程序都需要部署到容器中运行</p>
]]></content>
      
        <categories>
            
            <category> 职场进阶 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CGI </tag>
            
            <tag> Servlet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[。。。]]></title>
      <url>/2017/11/19/2017119/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>&#160; &#160; &#160; &#160;有点无奈，有点不甘心，还有点心疼，特么的，自己将来有一天肯定会后悔的，看来还是太闲了<br><a id="more"></a><br>&#160; &#160; &#160; &#160;呵呵，现在还看我博客的都是真爱粉啊，估计是自说自话吧，访客数量都没增加，还有哪位老铁在看的，可以用手机访问，多刷几次首页，貌似可以增加访客数量，让我知道有人在看，这块以后就不更了，会发点技术方面的干货，不过还是随便发恼骚，扯淡好写，其实我也想搞个留言板或者分享链接什么的，可惜现阶段水平不到家，就先搁置吧 。。。。<br><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer0"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "风云",
					author: "屠洪刚",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E5%B1%A0%E6%B4%AA%E5%88%9A%20-%20%E9%A3%8E%E4%BA%91.mp3",
					pic: "",
				}
			});
		</script><br>&#160; &#160; &#160; &#160;有点发低烧，怕冷，书书看不进去就先回来了，本来还要去做实验的，后来接到通知今晚不做了，意外的惊喜啊，今天写点什么呢，说说找工作的情况吧</p>
<p>&#160; &#160; &#160; &#160;什么专业？热能与动力工程，本来打算按照实验室的惯例找热设计相关的工作（主要从事电子设备散热相关），这块需求主要有通信电子设备，新能源和一些车企，其实很少有公司招这块的，一般招这块的公司都是比较牛逼的公司，小公司压根温饱都没解决，哪顾得上热设计这种部分单独招人啊<br>&#160; &#160; &#160; &#160;有人说去华为啊，中兴啊，是啊，我也想去啊，然而想去？不是你想去，想去就能去的哈，人家不要啊，后来想想也对，热能与动力工程全国每年那么多毕业生，就热设计这块远远供大于求了，作为企业，自然是“好”的捡好的跳啊，先看学校，再看项目，个人觉得项目要重于学校，关键自己手上确实没有能拿得出手的项目啊，而作为这块，企业更倾向于招进去了就可以上手做了。。。<br>&#160; &#160; &#160; &#160;其实我投的简历并不多，而且投了之后基本山都收到面试了，细数一下，投了可能都不超过十家，投的都是不太起眼的公司，因为前面吃了亏啊，凡是主招咱们专业的，宣讲会基本上都爆满了，对，全是咱们专业的，呵呵，不恰当的比喻，感觉有点像“狗抢食”，像我这只本科出生不好的狗往往连简历筛选关都过不了啊，这种情况投了两三次后，我特么醒悟了，就咱们专业，而大多数人都没有相关的实习，所以用人单位看学历、看出身是最高效，也是保险的做法。嗯，在咱们学校，我玩不过你们啊，所以我把爪子伸向了南京周边高校，嘿嘿，效果还是很明显的啊，至少投了基本上都让去面试了，而且都到了谈工资的份上了，然后在等通知的过程中都渐渐的黄了。。。后来跟别人交流，可能工资期望值过高是一个重要的原因，唉，毕竟是传统行业嘛。。。。<br>&#160; &#160; &#160; &#160;虽然嘴硬，虽然自己也并不咋地，虽然。。。。但其实我特么还是挺挑的，省外的基本上不考虑，省内也只考虑苏锡常，省外只考虑杭州，其实当时想去杭州的，有点没想到的是，喜欢的那个人暑假期间在浙大发了个朋友圈，无奈当时，心都凉半截了，不过当时还是有点。。。说不上来，反正觉得三观很合啊，很有缘分啊，唉，感觉本来有机会的啊，奈何被自己搞砸了，不知道自己当时在想什么。。。<br>&#160; &#160; &#160; &#160;有的时候觉得找工作和找女朋友很像啊，都要双方都看得上眼，奈何我这个自身实力不咋地还特么挑，找的到就怪了。。。我没有像身边的很多同学那样海投，即使海投中了，不喜欢的企业，我也绝不会，其实当时有点王八吃秤砣，铁了心了，这找工作和找对象能特么一样吗，手上多几个offer总归是好的，这说明自己比较优秀，找对象，多找几个，那是人品有问题。。。是吧，所以在自己喜欢的工作不要自己或者晾着自己等消息时，还要继续捕捞啊，小鱼小虾啥的，先抓只在手上啊。。。<br>&#160; &#160; &#160; &#160;苏州一次（苏州那次是在他们去苏州时，真的让那个谁又说中了，早知道跟他们去苏州了），无锡一次，这两次我都没有通过校招，都给offer了，感觉自己还是要折腾啊，无锡这份工作，虽然起薪不高，但是我很喜欢，所以我当下就决定了，难得人家不嫌弃咱半路出家的，愿意给个机会，真的挺感激的，当时HR还担心被放鸽子，我回到学校拿到三方就寄出去了，平台还算不错吧，先辛辛苦苦干个两年吧，充实自己，然后在考虑其他。。。当时这么想的，确实过程确实是有点难，不过没关系，只要能够预见到结果，我愿意去努力，去尝试的。。。<br>&#160; &#160; &#160; &#160;工作定了，现在又要考虑个人问题了，呵呵，好难，感觉比找工作难多了，感觉现阶段的运气被这份工作耗光了都，每次说到这个话题，我还是会第一时间想到你，其实也挺怪的，其实我们单独相处的时间并不长啊，（当然当时也不长，当时也是脑袋一拍就约看电影了，不知道哪来的勇气都），自暑假后，我以为我们之间会隔着千山万水。。。如果你能找到一个真心喜欢你的和你真心希望的，(其实操场上那次那家伙应该还不错的，反正我是自愧不如)我也就甘心了（我特么有这么伟大吗），还有一层原因，不想依赖实验室这层关系，半点都不想，我不想今后的生活绑着一些无关的东西，要苟延残喘的去迎合。。。好吧，又死心眼了，可能离开这儿后慢慢就会好了，就这样吧，长这么大，头一次喜欢一个人这么久，还是想对你好，只是终究名不正言不顺。。。其实除了你那届的，实验室其他的小伙伴都知道我约你看电影的事了，撞见那谁谁了，感觉自己确实不适合干坏事，第一次就败露了，还是感谢小伙伴的，都有意撮合过，只是你不知道，如果注定看不到结果，那就保持原来的样子吧。（感觉自己这个想法很危险啊，感觉是把将来别人介绍、相亲这条路给堵死了啊）。。。</p>
]]></content>
      
        <categories>
            
            <category> 生活杂感 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 恼骚 </tag>
            
            <tag> 无病呻吟 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初步看书后的困扰]]></title>
      <url>/2017/11/19/%E5%BD%93%E4%B8%8B%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>&#160; &#160; &#160; &#160;根据单位那边同事的建议，工作这要涉及到的知识有java，javascript,spring框架，extjs框架，oricle数据库，Sql语句，工作的内容包括了从网站搭建到后台数据库的交互。<br>   <a id="more"></a></p>
<h1 id="计划和进度"><a href="#计划和进度" class="headerlink" title="计划和进度"></a>计划和进度</h1><p>&#160; &#160; &#160; &#160;毕竟是半路出家，自己要做好打算，而且根据那边的意思可能要涉及到人工智能、无监督学习方面的知识等等，这不正是自己希望的嘛</p>
<h2 id="先把网铺开"><a href="#先把网铺开" class="headerlink" title="先把网铺开"></a>先把网铺开</h2><p>&#160; &#160; &#160; &#160;七年间与计算机方面相关的也就是编程这一小块了，现在要做的就是把这个领域的知识网铺开，先有语言基础开始，慢慢往外拓宽，目前的状态时，看完了java语言编程，能编写简单的小程序，对着书能够写程序实现对数据库的简单访问和数去读取；前端方面，学习了html、css和javascript，按照知乎上大牛们的建议，学习这些知识后，基本上就可以弄一些项目练练手了，目前手上的书籍中的项目感觉都比较冗大，都是真实的企业级项目，感觉好吃力。</p>
<div id="aplayer10" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer10"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "渔舟唱晚",
					author: "浦琦璋",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%B5%A6%E7%90%A6%E7%92%8B%20-%20%E6%B8%94%E8%88%9F%E5%94%B1%E6%99%9A%20%28cut%E7%89%88%29.mp3",
					pic: "",
				}
			});
		</script>
<h1 id="困惑和不解"><a href="#困惑和不解" class="headerlink" title="困惑和不解"></a>困惑和不解</h1><p>&#160; &#160; &#160; &#160;先把现有的问题抛在这面，以后来逐一解释：<br>&#160; &#160; &#160; &#160;1.就拿之前的酒店企业进销存管理系统来说，必然要涉及到用户、商品信息的读取吧，实现这些方法的class可以用java写，难以理解的是，在class对象化的过程中必然要去读取数据库既有的商品、用户信息，在成功连接数据库后，数据库中各种信息是以何种方式，分门别类的传向相关的类实现数据的调用的(感觉问题都没列清楚啊)<br>&#160; &#160; &#160; &#160;2.java面向对象编程的一个核心技术是API的应用，说白了，java自身帮我们已经写了大量的函数，在开发过程中，程序猿要尽量去调用现有的API（即方法，C中称为函数），如何快速的找到自己所需的API。（这跟开发工具的使用有关吧，单位用的intellij idea，捣鼓去吧）<br>&#160; &#160; &#160; &#160;3.前端方面，html和css较为容易，javascript也比较好掌握，但是如何把它们结合起来写一个像样的网站出来，这需要练习，初步想法是选几个网站，利用上述的知识把它们的网站复现出来<br>&#160; &#160; &#160; &#160;4.框架，就目前的看到的相关知识，还未涉及到，感觉一头雾水啊</p>
]]></content>
      
        <categories>
            
            <category> 职场进阶 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 前端开发 </tag>
            
            <tag> 框架 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[本科学习报告（本科阶段写的，摘上来充数）]]></title>
      <url>/2017/11/17/my-second-blog/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  假如没有考研，要我评价一下自己的大学生活，四个字足矣：庸庸碌碌。没有拿过什么出色的奖项，没有干过班干部，没有组织过像样的活动，没有谈过像样的恋爱……就连四、六级都是低分飘过,好像大家眼中所期待的大学里最美好的事物通通都与我无关。毫不夸张的讲，在大学这个小社会里我可能就属于所谓的“草根”。大学，可以成就一个人，也可以毁掉一个人，有追求的人通过自己的努力离梦想越来越近，而相当一部分人过于沉迷象牙塔的“美好”，无所事事，浑浑噩噩早已偏离了最初的航线。而我决不能够容忍我的大学、我的青春如此草草收场，在这人生最值得怀念的日子同时也是最值得奋斗的日子里，我希望留下点什么，不为别的，只为将来的自己在回忆这段刻骨铭心的岁月时能够多一份感动、少一分懊悔。就像自己的高四，整整一年的时间，一个人在学校的附近租个房子，三点一线，独自面对压力，慢慢的让自己的内心变得强大，现在想来，还是有那么一丝感动的（其实，真的很感谢爸爸妈妈，让我真正的任性了一回）。考研，也是一个锻炼心智的好机会，我不想错过，一方面证明自己的实力，通过踏踏实实的努力圆了自己的名校梦，另一方面，越往上走，所处的平台不一样了，周围的人不一样了，机会可能会更多。</p>
   <a id="more"></a>
<p>  关于报考学校的选择，我建议大家先考虑几个，刚开始的时候可以将目标适当的定高点，这样前期复习起来劲头更足，等到暑假那段时间结合前面阶段的复习状态，可以再好好考虑到底要报考哪个学校。我刚开始准备的时候，定了3个目标，分别是：西安交大、浙大、东大。后来再三考虑还是选择了东大，首先，西交大地理位置太远，读本科的时候本来就有机会去外省的好点儿学校，当时父母嫌远没有答应，读研自己也感觉没必要再折腾那么远；其次，浙大和东大这两个学校我纠结了好久，按照浙大的专业课准备了好久，觉得自己按照往年的数据来看还是有把握的，可是后来还是放弃了，一方面，今年政策变了，保研的人越来越多，况且浙大的统考招生人数迟迟没有公布，不敢托大，毕竟自己认真准备了一年，还是想有所收获，不想败在选择上；另一方面，东大同学比较多，而且还有几个中学时期的好友也准备报考东大，希望能够再续“前缘”吧；此外，父母也希望我能够“稳”一点儿，记得当时当我告诉老爸我要考浙大时，老爸是犹豫的“儿子，我和你妈可没有非要你出人头地”。万一考不上其实于我个人来说没什么，重在过程嘛！可是我知道爸妈希望我能够考上，所以还是决定慎重选择（大家都过了任性的年龄了，不能光为了自己，要知道我们现在所作的每一个决定都将影响一个家庭）。</p>
<p>  下面我简单总结一下自己的备考过程：</p>
  <!--more-->
<h1 id="初试准备阶段"><a href="#初试准备阶段" class="headerlink" title="初试准备阶段"></a>初试准备阶段</h1><p>  我简单把备考分为4个阶段:<br>  第一阶段：大三下学期（我是从3月中旬开始的）。<br>  第二阶段：暑假（大致是6月底到8月底）。<br>  第三阶段：大四上学期开学到考前20天左右。<br>  第四阶段：考前20天到考试。  </p>
<p>  在备考的第一阶段，复习主要以数学和英语为主，政治和专业课没必要看。</p>
<p>  数学方面，可以先把课本先看2到3遍，至于课本上的习题到底要不要做，因人而异。如果你的数学基础比较扎实，可以不做，或者每一大章挑一些题目做一下，基础稍微薄弱一点的或者说对数学缺乏信心的同学在做题时，也不要太追究对错，对于所谓的难题没必要深究，做到心中有数以免影响信心和进度。记得当时复习时总有人拿一些难和怪的积分题目问我，绝大多数的题，我也做不出来，其实，积分只是作为一个工具，我们只需掌握其一般的类型和解法即可，考试若真考到技巧性强的题，做不出来也没关系，大家都不会。举这个例子，就是想告诉大家，复习时一定要有大局观，不要片面的去追究一个点，否则会很容易出现所谓的“卡壳”现象，前期很多人放弃就是因为这个原因。建议看完一门课本后接着就去看数学全书上相应的部分，不要非等着把高数、线代、概率论4本书都看完了再去看全书，那样可能等到你看全书的时候，之前看的很多东西也忘的差不多了。（李王版的数学全书上可能有错误，大家遇到有疑问的地方可以互相讨论）至于全书怎么看，四个字：一字不落。上面的每道例题都应该理解透彻，总之，复习全书时应该是毫无保留的。</p>
<p>  对于英语，第一阶段，主要是以背单词为主，不管是红宝书还是新东方的，选择一本，每天抽一个小时（早、中、晚各20分钟）左右的时间背一下，同样，背单词也需要大局观，第一遍背的时候也不要太纠结于某个单词，按照自己的计划先将单词书背一遍，背的时候注意回顾以前背的，反复记忆。</p>
   <!--more-->
<h1 id="第二阶段：暑假（强化阶段）。"><a href="#第二阶段：暑假（强化阶段）。" class="headerlink" title="第二阶段：暑假（强化阶段）。"></a>第二阶段：暑假（强化阶段）。</h1><p>  整个考研过程中最值得怀念的应该就是暑假了。一方面，酷暑难当，每天晚上一个人在宿舍大汗淋漓，热的睡不着觉，遇到雷雨天气，冒雨涉水的去教室复习（当时就在想，付出这么多，一定会有回报的，即使真的考不上也没关系，就凭着这股拼劲，我今后什么事都可以做的很好）；另一方面，暑假里没有课不用考试，时间都是属于自己的，是进行系统复习的最佳时机。强调一点，除非你自己自觉性超级强，否则别自欺欺人在家里复习，还是乖乖回到学校，按照平时上课的作息时间要求自己，别待在宿舍，宿舍只是睡觉的地方，仅此而已。</p>
<p>  第二阶段的复习还是以数学和英语为主，数学继续全书的复习，英语每天可以做两篇阅读理解，这里推荐张建的黄皮书系列的《阅读150篇》，不要在意对错，我当时平均每篇错3到4个，有的时候全军覆没，其实这个说明不了任何问题，做这个的目的在于更好的记单词，可能你会发现，第一阶段背过的很多单词放到具体的阅读中就不知道意思了。每做完一篇阅读，一定要结合解析将文中的每个单词意思弄懂，同时在书上做好笔记，每个星期可以挑选做过的阅读中一到两篇书面翻译（别人介绍的，据说效果很好，我个人没尝试过）。</p>
<p>  到第二阶段结束（开学初），数学全书第一遍应该看完了，大家一定要注意这个时间节点，另外需要强调的还是复习的反复性，数学的复习之所以难，一个重要原因就是内容多，杂，容易遗忘，所以一定要抽出时间回顾前面的知识，比如，当你复习线代时，隔三天回顾一下高数，回顾时，可以结合全书在纸上列一下知识点以及解题易错点，如此的反复回顾应该是贯彻着整个复习过程和各个科目。</p>
   <!--more-->
<h1 id="第三阶段（提高期）。"><a href="#第三阶段（提高期）。" class="headerlink" title="第三阶段（提高期）。"></a>第三阶段（提高期）。</h1><p>  这学期是大四的上学期了，很多专业基本上没什么课了，我们专业例外，满满的全是课，这个时候大家就要擦亮眼睛注意选择性的翘课，切记:鱼和熊掌不可兼得，具体的讲就是：有机会，果断翘。还有群众关系一定要搞好（说到这儿，还是要好好感谢好兄弟门，遇到老师点名果断发短信、打电话），便于遇到管的严的老师时及时赶到。至于期末考试，一般老师都会理解考研同学的，考前都给了重点，所以大家不要傻傻的担心期末考试而影响了自己的复习，得不偿失，再次强调，如果你立志考研，对于期末考试，一定要相信：办法总比困难多、车到山前必有路。</p>
<p>  第三阶段复习，专业课应该抓起来了（专业课学的渣的同学暑假期间就可以开始准备了），我考的是传热学，说实话，当时学的也不好。首先花一个月左右的时间将课本认认真真的看一遍，课本中的例题和习题一定要挑着做一点，另外，对全书知识体系要有一个整体的把握，能将前后章节串起来，便于理解，这里推荐西交大王秋旺编的《传热学知识精要》作为参考书(选考工程热力学的应该也有类似的书,原书已绝版，复印本在淘宝可买)。课本看完一遍后，开始研究报考学校的专业课真题，第一遍可以大致看看，肯定有很多不会的，不用心慌，重点是把握一下人家的题型，常考知识点。然后再看课本，这遍看课本的时候心中应该有所侧重，同时，做好笔记，将自己认为重要的知识点整理出来，加深理解和记忆。</p>
<p>  另外，报考院校的历年真题的获取方法：</p>
<p>  第一、通过本校在那读研的学长学姐；</p>
<p>  第二、百度搜索，考研论坛(一般都能找到的)；</p>
<p>  第三、报考院校的考研群，可能是有偿的；  </p>
<p>  第四、淘宝上买（不推荐，太不靠谱，几百块，有时候发给你的可能就是百度里面现成的东西）；  </p>
<p>  至于政治的复习，完全可以等到考研大纲出来再复习，政治大纲解析（所谓的“红宝书”不建议买，如果考纲有变化，各大考研机构的资料里都会有所体现），政治复习资料推荐肖秀荣系列（对于政治资料的购买千万不要“吃着眼里看着锅里的”，盲目贪多，最后只能是一个下场：看不完，该掌握的没掌握），当然，报辅导班的同学只要跟着辅导班的进度走即可（我没有报班，现在想来，还是建议大家政治可以报个班，从今年考试情况来看，客观题趋向更加灵活，侧重理解，单凭记忆效果不好），如果实在不想报班的，最好花个一、两块钱到淘宝上买一些考研机构的讲课视频看一看（追着一个人看即可，不可贪多）。本阶段政治复习的主要任务就是过一遍考研政治的知识点，过的时候可以结合肖秀荣的《1000题》检测自己看书的效果，有所侧重，加深对知识点的理解。</p>
<p>  英语方面复习的重点还是在阅读上，建议这阶段每天做4篇阅读理解，时间控制在60到70分钟，做完后一定要花更长的时间去整理，另外，历年的真题也必须带着做了，建议一个星期做两年的真题，做真题的顺序当时是年代越久的先做，最近两三年的最好留到后期做，避免后期闹“题荒”。  </p>
<p>  数学这阶段应该完成数学全书的第二遍复习，《660题》，以及《历年真题》，当然，全书第一遍复习如果到位，全书第二遍可以刷的快点儿。</p>
<p>  第三阶段的复习时间跨度很长，4门课要全部抓起来，时间上的分配一定要把握好（自己哪一科弱就多花点时间，哪一科强就少花点时间）。另外，提醒一下，如果你的执行力不强，在制定复习计划时，没必要过于详细，甚至精确到分秒，个人感觉那样太华而不实，计划是用来执行的，不是用来看的，况且，俗话说“计划不如变化快”，后期的复习已经够紧张的了，何苦再制定那么苛刻的计划来折腾自己，对于计划，只需做到心中有数即可。<br>  <div id="aplayer7" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			new APlayer({
				element: document.getElementById("aplayer7"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "白夜",
					author: "尹姝贻",
					url: "http://ozjh9fb7b.bkt.clouddn.com/%E5%B0%B9%E5%A7%9D%E8%B4%BB%20-%20%E7%99%BD%E5%A4%9C.mp3",
					pic: "",
				}
			});
		</script></p>
   <!--more-->
<h1 id="第四阶段"><a href="#第四阶段" class="headerlink" title="第四阶段"></a>第四阶段</h1><p>  离走进考场已经不到一个月，如果你已经走到了这里，你应该在心里偷着乐了，因为当初好好荡荡的考研大军因为这样或那样的原因已经所剩不多了</p>
<p>  这个阶段，我觉得最关键的就是心态，因为大家都复习的差不多了，现在阶段主要就分两种心态。第一种：慌。感觉自己有很多东西没看完，如果你在以往的大考中有过类似的经历，我希望你在前面几个阶段的复习中能够提高效率，整个复习进度可以适当提前，这样到了这个阶段，你可能会从容、淡定一点。第二种：急。感觉自己都复习好了，巴不得明天就能考试，持有这种心态的人往往在这个时候显得很“跳”，坐不住。当然还有第三种，那就是真正的学霸、大神，自身有着超强的实力，波澜不惊（身边的大神不少，此类人有个特征，在大考中，要么一鸣惊人，要么让人大跌眼镜，个人感觉决定他们成败的只有一个因素：心态）。某种程度上我属于第二种心态，身边的研友们觉得我有点盲目自信，甚至自负（也许初试体现的不够明显，但复试着实让我摔了个跟头）。总而言之，在这个阶段，大家一定要把心态调整好，要学会积极的心理暗示，引导自己往积极的方面去想，书看不进去的时候，可以适当放松一下，上网搜点儿励志故事以及语句，时常读一读，给自己幼小的心灵灌点儿鸡汤。我当时最喜欢的一句话：宠辱不惊，笑看庭前花开花落；去留无意，漫随天外云卷云舒（可惜自己做的不够好）。有人可能会抱怨身边的学习环境、氛围不好，奉劝一句：如果你改变不了环境，就去改变自己吧，不时问问自己到底想要什么，就跟玩游戏、打刀塔似的，要将整盘比赛的节奏牢牢攥在自己手中，这样才不会为所谓的外在因素牵着走，从而乱了阵脚。</p>
<p> 在最后这个阶段，数学方面，保持手感，重视真题，可以做个两到三遍（我说的“做”，是要认认真真将解答过程写出来，不要感觉自己以前做过了，就可以不做，考研数学相当一部分就是考察计算能力），至于模拟题，时间紧迫的话可以不做；英语方面，开始适当的背些范文，另外一定要动手写几篇作文，之前留的近几年真题可以完完整整的做一下，作为考前模拟；政治方面，每天带着记一些知识点（风中劲草或者肖的知识点精要均可，没必要非一字不落的背，我们背这些只是为了针对选择题，看到了能选出来即可）。考前最后一周，背肖秀荣的4套卷，这个必须全部背下来，全国的考研大军都指望他押题呢，押不中大家一起吃亏而已。背的时候，可以将答案分条，方便记忆；专业课方面，课本、真题反复的刷，真题上面有计算题的一定要认认真真的算个1到2遍，切记不可眼高手低，我今年专业课计算题，很多的式子都列出来了，就是算不对，有些看到那么长的式子干脆不算了，瞎写了个数字放上面，现在想来，自己当时真是够大方的。</p>
  <!--more-->
<h1 id="复试准备阶段"><a href="#复试准备阶段" class="headerlink" title="复试准备阶段"></a>复试准备阶段</h1><p>  东大两门指定的复试科目：《锅炉原理》和《制冷原理》。这两门课都没学过，然后咨询了往届的前辈们，结合报考的专业，选择了《锅炉原理》，虽说自我感觉自学能力还是很强的，但是真正拿到了那本书心里不免有些担忧，将近500页的一本大书，从3月2号开学开始准备，3月20号复试，前前后后3个礼拜的时间。我用7天的时间把整本书过了一遍，5天的时间结合往年的几分卷子，把书又看了一遍，这一遍有所侧重，将自认为可能的考点圈划、整理出来，剩下的时间就是看、背以及准备面试的相关材料。说实话，在做完这些的时候，个人感觉自己准备的已经可以，能考个大概，至少不会比那些自认为学过的人考的差了（这是不是就是所谓的“中庸”，父母经常调侃我，中等、平庸）。</p>
<p>复试笔试部分考的不好，直接导致学硕被调成了专硕（主要还是因为没有足够重视，绝不是因为没学过）。所以，我希望大家还是要好好准备复试的，别的高校我不知道，反正东大的复试真的很重要，基本上初试的一分换复试笔试的一分，要知道，初试总分是500分，笔试总分是150分，你换的起吗？另外， 如果能够找到历年复试的笔试试卷，大家一定要好好利用，把上面的每一道题都搞懂，今年有两题我不会的题目就是往年试卷上的，当时复习到了，总觉得肯定不会再考了（也不知道当时哪来的自信，真应了那句“不作就会死”了）。面试部分简单说一下流程，3分钟的英语自我介绍，然后老师会用英语问几个非专业的问题，无非是为什么报考这个专业以及读研后的打算等等，然后专业的老师会问一些专业相关的知识，包括热工基础3门课：工热，流体力学，传热学，外加一门专业课（一般是大四学的课程）。</p>
<p>以上就是我个人的考研经历，于你们而言，这是经验也是教训，至于我所提到的复习方法，可以借鉴，但请不要照搬，毕竟，只有适合自己的方法才是最好的。考研本身是一个过程，如果你用心的走，你会发现过程真的比结果重要的多。最后，引用乔布斯曾经说过的一段话来结束：你不能充满遇见地将生命的点滴串联起来；只有在你回头看的时候，你才会发现这些点点滴滴之间的联系，所以，你要坚信，你现在所经历的将在你未来的生命中串联起来，你不得不相信某些东西，你的直觉、命运、生活、缘分……正是这种信仰让我不会失去希望，它让我的人生变得与众不同。</p>
<p>2015年3月28日</p>
]]></content>
      
        <categories>
            
            <category> 生活杂感 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 选择 </tag>
            
            <tag> 专业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第一篇个人博客测试版]]></title>
      <url>/2017/11/17/my-first-blog/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>一个人最好的生活状态，<br>是该看书时看书，该玩时尽情玩，<br>看见优秀的人欣赏，<br>看到落魄的人也不轻视，<br>有自己的小生活和小情趣，<br>不用去想改变世界，</p>
<a id="more"></a>
<p>努力活出自己，没人爱时专注自己<br>有人爱时，有能力拥抱彼此！</p>
]]></content>
      
        <categories>
            
            <category> 生活杂感 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 牢骚 </tag>
            
            <tag> 吐槽 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
