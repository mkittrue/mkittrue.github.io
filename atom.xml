<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mkitture的博客</title>
  
  <subtitle>种一棵树最好的时候是十年前，其次是现在！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-27T07:48:21.706Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>mkitture</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>html知识概要</title>
    <link href="http://yoursite.com/2017/11/27/html/"/>
    <id>http://yoursite.com/2017/11/27/html/</id>
    <published>2017-11-27T00:53:24.000Z</published>
    <updated>2017-11-27T07:48:21.706Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer3" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer3"),narrow: false,autoplay: true,showlrc: 0,music: {title: "陈明",author: "我要找到你",url: "http://ozjh9fb7b.bkt.clouddn.com/%E9%99%88%E6%98%8E%20-%20%E6%88%91%E8%A6%81%E6%89%BE%E5%88%B0%E4%BD%A0.mp3",pic: "",}});</script><h1 id="html标签"><a href="#html标签" class="headerlink" title="html标签"></a>html标签</h1><p>html标记标签通常称为html标签（html tag）<br>html标签由尖括号包围，通常成对出现的，比如:&lt;b&gt;…&lt;/b&gt;</p><h1 id="html文档-网页"><a href="#html文档-网页" class="headerlink" title="html文档=网页"></a>html文档=网页</h1><h1 id="html编辑器"><a href="#html编辑器" class="headerlink" title="html编辑器"></a>html编辑器</h1><p> &nbsp;&nbsp;notepad 或 textedit或 Adobe Dreamweaver</p><h1 id="html头部"><a href="#html头部" class="headerlink" title="html头部"></a>html头部</h1><p>文档的标题：&lt;title&gt;定义文档的标题<br>所有链接一个目标</p><pre><code>&lt;head&gt;    &lt;base href=&quot;http://www.baidu.com&quot;&gt;    &lt;base target=&quot;_blank&quot;&gt;&lt;/head&gt;</code></pre><p>文档描述：&lt;meta&gt;描述文档,提供关于html文档的元数据，规定页面的描述，关键词，文档的作者，最后的修改时间以及其他元数据等<br>&lt;meta name=”description” content=”Free Web tutorials on HTML, CSS, XML”&gt;<br>重定向用户：如何把用户定向添加到新的网址</p><h1 id="html基础"><a href="#html基础" class="headerlink" title="html基础"></a>html基础</h1><h2 id="注释-lt-–注释内容–-gt"><a href="#注释-lt-–注释内容–-gt" class="headerlink" title="注释&lt;!–注释内容–&gt;"></a>注释&lt;!–注释内容–&gt;</h2><h2 id="html标题-lt-h1-gt-…-lt-h1-gt"><a href="#html标题-lt-h1-gt-…-lt-h1-gt" class="headerlink" title="html标题  &lt;h1&gt;…&lt;h1&gt;"></a>html标题  &lt;h1&gt;…&lt;h1&gt;</h2><h2 id="html段落-lt-p-gt-…-lt-p-gt-（可以用-lt-br-gt-强制换行）"><a href="#html段落-lt-p-gt-…-lt-p-gt-（可以用-lt-br-gt-强制换行）" class="headerlink" title="html段落  &lt;p&gt;…&lt;/p&gt;（可以用&lt;br/&gt;强制换行）"></a>html段落  &lt;p&gt;…&lt;/p&gt;（可以用&lt;br/&gt;强制换行）</h2><h2 id="html标签-lt-a-href-”www-baidu-com”-gt-这是百度-lt-a-gt"><a href="#html标签-lt-a-href-”www-baidu-com”-gt-这是百度-lt-a-gt" class="headerlink" title="html标签  &lt;a href=”www.baidu.com”&gt;这是百度&lt;/a&gt;"></a>html标签  &lt;a href=”www.baidu.com”&gt;这是百度&lt;/a&gt;</h2><h2 id="下划线-lt-hr-gt"><a href="#下划线-lt-hr-gt" class="headerlink" title="下划线  &lt;hr/&gt;"></a>下划线  &lt;hr/&gt;</h2><h2 id="html图像-lt-img-src-”图片-jpg”-width-”100”-height-”50”-alt-”Big-Boat-鼠标移至该图片时出现的提示信息-”-gt"><a href="#html图像-lt-img-src-”图片-jpg”-width-”100”-height-”50”-alt-”Big-Boat-鼠标移至该图片时出现的提示信息-”-gt" class="headerlink" title="html图像  &lt;img src=”图片.jpg” width=”100” height=”50” alt=”Big Boat(鼠标移至该图片时出现的提示信息)”&gt;"></a>html图像  &lt;img src=”图片.jpg” width=”100” height=”50” alt=”Big Boat(鼠标移至该图片时出现的提示信息)”&gt;</h2><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><pre><code>&lt;html&gt;&lt;body background=&quot;/i/eg_background.jpg&quot;&gt;&lt;h3&gt;图像背景&lt;/h3&gt;&lt;p&gt;gif 和 jpg 文件均可用作 HTML 背景。&lt;/p&gt;&lt;p&gt;如果图像小于页面，图像会进行重复。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="空格-lt-br-gt"><a href="#空格-lt-br-gt" class="headerlink" title="空格   &lt;br/&gt;"></a>空格   &lt;br/&gt;</h2><h1 id="html元素（元素与标签的区别）"><a href="#html元素（元素与标签的区别）" class="headerlink" title="html元素（元素与标签的区别）"></a>html元素（元素与标签的区别）</h1><p>指开始标签和结束标签之间的所有代码</p><h1 id="html属性-可参考html属性手册"><a href="#html属性-可参考html属性手册" class="headerlink" title="html属性(可参考html属性手册)"></a>html属性(可参考html属性手册)</h1><p>标签拥有属性，属性总是以名称/值的形式出现，例如：<br>&lt;a href=”www.baidu.com” target=”_blank”&gt;百度&lt;/a&gt;    target指向blank表示指向的链接在新页面打开</p><h1 id="html链接"><a href="#html链接" class="headerlink" title="html链接"></a>html链接</h1><p>命名锚：在html文档中对锚进行定义，创建锚 &lt;a name=”tips”（锚的地址）&gt;基本的注意事项(锚的名称)&lt;/a&gt;<br>指向锚: 然后在该文档中创建指向该锚的链接 &lt;a href=”#tips”&gt;有用的提示&lt;/a&gt;<br>属性：名称=值  &lt;h2 style=”background-color: green”&gt;This is a paragraph&lt;/h2&gt;</p><h1 id="html格式化"><a href="#html格式化" class="headerlink" title="html格式化"></a>html格式化</h1><p>所谓的格式化，（赋予文本一定的格式）可定义很多供格式化输出的元素，比如粗体和斜体字</p><p>文本格式化标签</p><pre><code>&lt;b&gt;                定义粗体文字&lt;big&gt;            定于大号字&lt;em&gt;            定义着重文字&lt;i&gt;                定义斜体字&lt;small&gt;&lt;/small&gt; 定义小号字&lt;strong&gt;        定义加重语气&lt;sub&gt;            定义下表字&lt;sup&gt;            定义上标字&lt;ins&gt;            定义插入字&lt;del&gt;            定义删除字（字被杠掉）</code></pre><p>计算机输出标签</p><pre><code>&lt;code&gt;            定义计算机代码&lt;kbd&gt;            定义键盘码&lt;samp&gt;            定义计算机代码样本&lt;tt&gt;            定义打字机代码&lt;var&gt;            定义变量&lt;pre&gt;            定义预格式文本</code></pre><p>引用、引用和术语定义</p><pre><code>&lt;abbr&gt;            定义缩写:&lt;abbr title=&quot;World Health Organization&quot;&gt;WHO&lt;/abbr&gt;&gt; 鼠标移至WHO时，会出现全称提示&lt;acronym&gt;        定义首字母缩写&lt;address&gt;        定义地址&lt;bdo&gt;            定义文字方向&lt;blockquote&gt;    定义长的引用&lt;q&gt;                定义短的引用语&lt;cite&gt;            定义引用、印证&lt;dfn&gt;            定义一个定义项目</code></pre><h1 id="html-css"><a href="#html-css" class="headerlink" title="html css"></a>html css</h1><p>通过使用HTML4.0,所有的格式化代码均可移出html文档，然后移入一个独立的样式表，格式化怎么理解？</p><h2 id="html中的样式"><a href="#html中的样式" class="headerlink" title="html中的样式"></a>html中的样式</h2><p>当单个文件需要特别样式时，就可以使用内部样式表</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;style type=&quot;text/css&quot;&gt;    h1{color:red}    p{color:blue}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;h1&gt;header 1&lt;/h1&gt;    &lt;p&gt;a paragraph&lt;/p&gt;&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="没有下划线的链接（内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式，样式属性可以包含任何CSS属性）"><a href="#没有下划线的链接（内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式，样式属性可以包含任何CSS属性）" class="headerlink" title="没有下划线的链接（内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式，样式属性可以包含任何CSS属性）"></a>没有下划线的链接（内联样式，当特殊的样式需要应用到个别元素时，就可以使用内联样式，样式属性可以包含任何CSS属性）</h2><pre><code>&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt;&lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;zh-cn&quot; /&gt;&lt;/head&gt;&lt;body&gt;&lt;a href=&quot;/example/html/lastpage.html&quot; style=&quot;text-decoration:none&quot;&gt;这是一个链接！&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="链接到一个外部样式表（使用标签链接到一个外部样式表）"><a href="#链接到一个外部样式表（使用标签链接到一个外部样式表）" class="headerlink" title="链接到一个外部样式表（使用标签链接到一个外部样式表）"></a>链接到一个外部样式表（使用<link>标签链接到一个外部样式表）</h2><p>当样式需要被应用到很多页面时，外部样式表将是理想的选择。使用外部样式表，便于通过更改一个整个站点的外观</p><pre><code>&lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/html/csstest1.css&quot; &gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;我通过外部样式表进行格式化。&lt;/h1&gt;&lt;p&gt;我也一样！&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="样式属性参考表"><a href="#样式属性参考表" class="headerlink" title="样式属性参考表"></a>样式属性参考表</h2><pre><code>&lt;style&gt;         定义样式定义&lt;link&gt;            定义资源引用&lt;div&gt;            定义文档中的节或区域（块级）&lt;span&gt;            定义文档中的行内的小块或区域</code></pre><h1 id="html表格"><a href="#html表格" class="headerlink" title="html表格"></a>html表格</h1><pre><code>&lt;table border=&quot;1&quot; bgcolor=&quot;red&quot; background=&quot;/图片.jpg&quot;&gt;&lt;tr&gt;&lt;th&gt;表头&lt;/th&gt;&lt;th&gt;表头&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td bgcolor=&quot;red&quot;&gt;row 1, cell 1&lt;/td&gt;&lt;td&gt;row 1, cell 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td background=&quot;/图片.jpg&quot;&gt;row 2, cell 1&lt;/td&gt;&lt;td&gt;row 2, cell 2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code></pre><p>浏览器显示：<br>    row 1, cell 1     row 1, cell 2<br>    row 2, cell 1     row 2, cell 2</p><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><pre><code>&lt;table&gt;            定义表格&lt;caption&gt;        定义表格标题&lt;th&gt;            定义表格的表头&lt;tr&gt;            定义表格的行&lt;td&gt;            定义表格单元&lt;thead&gt;            定义表格的页眉&lt;tbody&gt;            定义表格的主体&lt;tfoot&gt;            定义表格的页脚&lt;col&gt;            定义表格列的属性&lt;colgroup&gt;        定义表格列的组</code></pre><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>无序列表</p><pre><code>&lt;ul&gt;    &lt;li&gt;Coffee&lt;/li&gt;    &lt;li&gt;milk&lt;/li&gt;&gt;&lt;/ul&gt;</code></pre><p>有序列表</p><pre><code>&lt;ol&gt;    &lt;li&gt;Coffee&lt;/li&gt;    &lt;li&gt;milk&lt;/li&gt;&gt;&lt;/ol&gt;</code></pre><h1 id="html块"><a href="#html块" class="headerlink" title="html块"></a>html块</h1><p>可以通过&lt;div&gt;和&lt;span&gt;将html元素组合起来<br>html&lt;div&gt;元素是快加元素，它是可用于组合其他html元素的容器<br>&lt;div&gt;元素没有特定的含义，除此之外，由于它属于块级元素，浏览器会在其后显示折行<br>如果与css一同使用，&lt;div&gt;元素可用于对大的内容块设置样式属性<br>&lt;div&gt;元素的另一个常见的用途是文档布局，它取代了使用表格定义布局的老式方法，使用&lt;table&gt;元素进行文档布局不是表格的正确用法，<table>元素的作用是显示表格化的数据</table></p><p>html&lt;span&gt;元素是内联元素，可用作文本的容器<br>&lt;span&gt;元素也没有特定的含义<br>当与CSS一同使用时，&lt;span&gt;元素可用于为部分文本设置样式属性。</p><h1 id="html类"><a href="#html类" class="headerlink" title="html类"></a>html类</h1><p>对html进行分类（设置类），使我们能够为元素类定义CSS样式，为相同的类设置相同的样式，或者为不同的类设置不同的样式<br>&lt;div&gt;示例</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;.cities {    background-color:black;    color:white;    margin:20px;    padding:20px;}.cities_2{    background-color:red;    color:white;    margin:20px;    padding:20px;}        &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--分块，从head区中引用相应的style--&gt;&lt;div class=&quot;cities&quot;&gt;&lt;h2&gt;London&lt;/h2&gt;&lt;p&gt;London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants.&lt;/p&gt;&lt;p&gt;Standing on the River Thames, London has been a major settlement for two millennia, its history going back to its founding by the Romans, who named it Londinium.&lt;/p&gt;&lt;/div&gt; &lt;div class=&quot;cities_2&quot;&gt;&lt;h2&gt;Paris&lt;/h2&gt;&lt;p&gt;Paris is the capital and most populous city of France.&lt;/p&gt;&lt;p&gt;Situated on the Seine River, it is at the heart of the 蝜e-de-France region, also known as the r間ion parisienne.&lt;/p&gt;&lt;p&gt;Within its metropolitan area is one of the largest population centers in Europe, with over 12 million inhabitants.&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;cities&quot;&gt;&lt;h2&gt;Tokyo&lt;/h2&gt;&lt;p&gt;Tokyo is the capital of Japan, the center of the Greater Tokyo Area, and the most populous metropolitan area in the world.&lt;/p&gt;&lt;p&gt;It is the seat of the Japanese government and the Imperial Palace, and the home of the Japanese Imperial Family.&lt;/p&gt;&lt;p&gt;The Tokyo prefecture is part of the world&apos;s most populous metropolitan area with 38 million people and the world&apos;s largest urban economy.&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>&lt;span&gt;示例；内联样式</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;  span.red {color:red;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;My &lt;span class=&quot;red&quot;&gt;Important&lt;/span&gt; Heading&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h1 id="html布局（网站的结构布局）"><a href="#html布局（网站的结构布局）" class="headerlink" title="html布局（网站的结构布局）"></a>html布局（网站的结构布局）</h1><p>使用&lt;div&gt;元素的html布局：&lt;div&gt;元素常用作布局工具，因为能够轻松通过CSS对其进行定位<br>这个例子使用了四个&lt;div&gt;元素来创建的多列布局</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;!--style内部的CSS样式--&gt;&lt;style&gt;#header {    background-color:black;    color:white;    text-align:center;    padding:5px;}#nav {    line-height:30px;    background-color:#eeeeee;    height:300px;    width:100px;    float:left;    padding:5px;          }#section {    width:350px;    float:left;    padding:10px;          }#footer {    background-color:black;    color:white;    clear:both;    text-align:center;   padding:5px;          }&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;header&quot;&gt;&lt;h1&gt;City Gallery&lt;/h1&gt;&lt;/div&gt;&lt;div id=&quot;nav&quot;&gt;London&lt;br&gt;Paris&lt;br&gt;Tokyo&lt;br&gt;&lt;/div&gt;&lt;div id=&quot;section&quot;&gt;&lt;h2&gt;London&lt;/h2&gt;&lt;p&gt;London is the capital city of England. It is the most populous city in the United Kingdom,with a metropolitan area of over 13 million inhabitants.&lt;/p&gt;&lt;p&gt;Standing on the River Thames, London has been a major settlement for two millennia,its history going back to its founding by the Romans, who named it Londinium.&lt;/p&gt;&lt;/div&gt;&lt;div id=&quot;footer&quot;&gt;Copyright ? W3Schools.com&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="html5语义元素"><a href="#html5语义元素" class="headerlink" title="html5语义元素"></a>html5语义元素</h2><pre><code>header             定义文档或节的页眉nav             定义导航链接的容器section         定义文档中的节article         定义独立的自包含文章aside             定义内容之外的内容（比如侧栏）footer             定义文档或节的页脚details         定义额外的细节summary          定义details元素的标题</code></pre><h1 id="html响应式Web容器"><a href="#html响应式Web容器" class="headerlink" title="html响应式Web容器"></a>html响应式Web容器</h1><ul><li>RWD指的是响应式Web涉及（Responsive Web Design）</li><li>RWD能够以可变尺寸传递网页</li><li>RWD对于平板和移动设备是必需的<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en-US"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.city &#123;</span><br><span class="line">float: left;</span><br><span class="line">margin: <span class="number">5</span>px;</span><br><span class="line">padding: <span class="number">15</span>px;</span><br><span class="line">width: <span class="number">300</span>px;</span><br><span class="line">height: <span class="number">300</span>px;</span><br><span class="line">border: <span class="number">1</span>px solid black;</span><br><span class="line">&#125; </span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;W3School Demo&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">&lt;h2&gt;Resize this responsive page!&lt;/</span>h2&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"city"</span>&gt;</span><br><span class="line">&lt;h2&gt;London&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;London is the capital city of England.&lt;/</span>p&gt;</span><br><span class="line">&lt;p&gt;It is the most populous city <span class="keyword">in</span> the United Kingdom,</span><br><span class="line"><span class="keyword">with</span> a metropolitan area <span class="keyword">of</span> over <span class="number">13</span> million inhabitants.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"city"</span>&gt;</span><br><span class="line">&lt;h2&gt;Paris&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;Paris is the capital and most populous city of France.&lt;/</span>p&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;div class="city"&gt;</span></span><br><span class="line"><span class="regexp">&lt;h2&gt;Tokyo&lt;/</span>h2&gt;</span><br><span class="line">&lt;p&gt;Tokyo is the capital <span class="keyword">of</span> Japan, the center <span class="keyword">of</span> the Greater Tokyo Area,</span><br><span class="line">and the most populous metropolitan area <span class="keyword">in</span> the world.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="html框架"><a href="#html框架" class="headerlink" title="html框架"></a>html框架<frame></h1><p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面<br>框架标签<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;frameset cols=<span class="string">"25%,75%"</span>&gt;</span><br><span class="line">&lt;frame src=<span class="string">"frame_a.html"</span>&gt;</span><br><span class="line">&lt;frame src=<span class="string">"frame_b.html"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/frameset&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="html内联框架（用于在网页内显示网页）"><a href="#html内联框架（用于在网页内显示网页）" class="headerlink" title="html内联框架（用于在网页内显示网页）"></a>html内联框架（用于在网页内显示网页）</h1><pre><code>&lt;iframe src=&quot;URL&quot; frameborder=&quot;0&quot; width=&quot;200&quot; height=&quot;100&quot;&gt;...&lt;/frame&gt;</code></pre><p>URL指向隔离页面的位置</p><h1 id="html背景"><a href="#html背景" class="headerlink" title="html背景"></a>html背景</h1><p>作为body的属性，&lt;body bgcolor=”red”&gt;&lt;/body&gt;</p><h1 id="html脚本"><a href="#html脚本" class="headerlink" title="html脚本"></a>html脚本</h1><pre><code>&lt;script type=&quot;text/javascript&quot;&gt;&lt;!--document.write(&quot;Hello World!&quot;)//--&gt;&lt;/script&gt;</code></pre><h1 id="html字符实体"><a href="#html字符实体" class="headerlink" title="html字符实体"></a>html字符实体</h1><pre><code>html中的预留字符必须被替换为字符实体，空格，大于，小于号等</code></pre><h1 id="html-web服务器"><a href="#html-web服务器" class="headerlink" title="html web服务器"></a>html web服务器</h1><h1 id="html-表单"><a href="#html-表单" class="headerlink" title="html 表单"></a>html 表单</h1><p>html表单用于搜集不同类型的用户输入<br>用&lt;form&gt;元素定义html表单</p><pre><code>&lt;form&gt;    form elements&lt;form&gt;</code></pre><p>html表单包含表单元素<br>表单元素指不同类型的input元素、复选框、单选按钮和提交按钮等</p><p>##&lt;input&gt;元素<br>属性类型<br>    text             定义常规文本输入<br>    radio            定义单选按钮输入（选择多个选择之一）<br>    submit            定义提交按钮（提交表单）</p><p>&lt;input type=”text”&gt;定义用于文本输入的单行输入字段<br>文本输入框实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">First name:<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--插入文本框--&gt;</span></span></span><br><span class="line">&lt;input type="text" name="firstname"&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">Last name:&lt;br&gt;</span><br><span class="line">&lt;input type="text" name="lastname"&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><p>&lt;input type=”radio”&gt;定义单选按钮<br>单选按钮实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">&lt;input type=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"male"</span> checked&gt;Male</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"female"</span>&gt;Female</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure></p><p>&lt;input type=”submit”&gt;定义用于向表单处理程序<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--表单结果提交到的位置,method指表单的提交方式，适用于少量提交，并且信息会出现在浏览器中--&gt;</span><br><span class="line">&lt;form action=<span class="string">"action_page.php"</span> method=<span class="string">"GET"</span>&gt;</span><br><span class="line">First name:<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line">&lt;input type="text" name="firstname" value="Mickey"&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">Last name:&lt;br&gt;</span><br><span class="line">&lt;input type="text" name="lastname" value="Mouse"&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;input type="submit" value="Submit"&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><p>用&lt;fieldset&gt;组合表单数据<br>&lt;legend&gt;元素为&lt;fieldset&gt;元素定义标题，把下面的几个文本框联系到一起，框成一个整体<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"action_page.php"</span>&gt;</span><br><span class="line">&lt;fieldset&gt;</span><br><span class="line">&lt;legend&gt;Personal information&lt;<span class="regexp">/legend&gt;</span></span><br><span class="line"><span class="regexp">First name:&lt;br&gt;</span></span><br><span class="line"><span class="regexp">&lt;input type="text" name="firstname" value="mickey"&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;</span></span><br><span class="line"><span class="regexp">Last name:&lt;br&gt;</span></span><br><span class="line"><span class="regexp">&lt;input type="text" name="lastname" value="Mouse"&gt;</span></span><br><span class="line"><span class="regexp">&lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="regexp">&lt;input type="submit" value="submit"&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>fieldset&gt;</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="html-form属性"><a href="#html-form属性" class="headerlink" title="html form属性"></a>html form属性</h2><pre><code>&lt;form action=&quot;action_page.php&quot; method=&quot;GET&quot; target=&quot;_blank&quot; accept-charset=&quot;UTF-8&quot; enctype=&quot;application/x-www-form-urlencoded&quot; autocomplete=&quot;off&quot; novalidate&gt;form elements&lt;/form&gt;</code></pre><p>&lt;form&gt;属性列表<br>    accept-charset                规定在被提交表单中使用的字符集（默认：页面字符集）<br>    action                         规定向何处提交表单的地址（url）提交页面<br>    autocomplete                 规定浏览器应该自动完成表单（默认开启）<br>    enctype                     规定被提交数据的编码(默认：url-encoded)<br>    method                         规定在提交表单时所用的http方法（默认：GET）<br>    name                         规定识别表单的名称(对于DOM使用：document.forms.name)<br>    novalidate                     规定浏览器不验证表单<br>    target                         规定action属性中地址的目标（默认：_self）</p><h2 id="lt-select-gt-元素（下拉列表）"><a href="#lt-select-gt-元素（下拉列表）" class="headerlink" title="&lt;select&gt;元素（下拉列表）"></a>&lt;select&gt;元素（下拉列表）</h2><p>实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;select name=<span class="string">"cars"</span>&gt;</span><br><span class="line">&lt;option value=<span class="string">"volo"</span>&gt;Volo&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">&lt;option value="saab"&gt;Saab&lt;/</span>option&gt;</span><br><span class="line">&lt;option value=<span class="string">"fiat"</span>&gt;Fiat&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">&lt;option value="audi"&gt;Audi&lt;/</span>option&gt;</span><br><span class="line">&lt;<span class="regexp">/select&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="textarea元素定义多行输入字段（文本域）"><a href="#textarea元素定义多行输入字段（文本域）" class="headerlink" title="textarea元素定义多行输入字段（文本域）"></a>textarea元素定义多行输入字段（文本域）</h2><p>实例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea name=<span class="string">"message"</span> rows=<span class="string">"10"</span> cols=<span class="string">"30"</span>&gt;</span><br><span class="line">The cat was playing <span class="keyword">in</span> the garden.</span><br><span class="line">&lt;<span class="regexp">/textarea&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="button元素定义可点击的按钮，上面的submit也会自动生成一个按钮，这个按钮的功能单一，只是用于向服务器提交表单"><a href="#button元素定义可点击的按钮，上面的submit也会自动生成一个按钮，这个按钮的功能单一，只是用于向服务器提交表单" class="headerlink" title="button元素定义可点击的按钮，上面的submit也会自动生成一个按钮，这个按钮的功能单一，只是用于向服务器提交表单"></a>button元素定义可点击的按钮，上面的submit也会自动生成一个按钮，这个按钮的功能单一，只是用于向服务器提交表单</h2><p>实例<br>    &lt;button type=”button” onclick=”alert(‘hello world’)”&gt;click me&lt;/button&gt;</p><h2 id="html5新增表单元素"><a href="#html5新增表单元素" class="headerlink" title="html5新增表单元素"></a>html5新增表单元素</h2><ul><li>&lt;datalist&gt;&lt;/datalist&gt;元素为&lt;input&gt;元素规定预定义选项列表，用户会在他们输入数据时看到预定义选项的下拉列表</li><li>&lt;keygen&gt;&lt;/keygen&gt;</li><li>&lt;output&gt;&lt;/output&gt;<br>实例<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"action_page.php"</span>&gt;</span><br><span class="line">&lt;input list=<span class="string">"browsers"</span>&gt;</span><br><span class="line">&lt;datalist id=<span class="string">"browsers"</span>&gt;</span><br><span class="line">&lt;option value=<span class="string">"Internet Explorer"</span>&gt;</span><br><span class="line">&lt;option value=<span class="string">"Firefox"</span>&gt;</span><br><span class="line">&lt;option value=<span class="string">"chrome"</span>&gt;</span><br><span class="line">&lt;option value=<span class="string">"opera"</span>&gt;</span><br><span class="line">&lt;option value=<span class="string">"safari"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/datalist&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>form&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="html输入类型-本章描述-lt-input元素的输入类型-gt"><a href="#html输入类型-本章描述-lt-input元素的输入类型-gt" class="headerlink" title="html输入类型,本章描述&lt;input元素的输入类型&gt;"></a>html输入类型,本章描述&lt;input元素的输入类型&gt;</h1><ul><li>input type：text</li><li>input type: password</li><li>input type：submit</li><li>input type: radio</li><li>input type: checkbox复选框</li><li>input type: button</li></ul><h1 id="html输入属性"><a href="#html输入属性" class="headerlink" title="html输入属性"></a>html输入属性</h1><ul><li>value表示输入框中初始值，用于提示，用户可以手动删除，自行添加自己所需的值</li><li>readonly属性规定输入字段为只读（不能修改）,不需要属性值，等同于readonly=”readonly”<br>  例如：&lt;input type=”text” name=”firstname” value=”John” readonly&gt;</li><li>disabled属性规定输入字段是禁用的，被禁用的元素是不可用和不可点击的，被禁用的元素不会被提交<br>  例如：&lt;input type=”text” name=”firstname” value=”John” disabled&gt;</li><li>size属性规定输入字段的尺寸（以字符计）<br>  例如：&lt;input type=”text” name=”firstname” value=”John” size=”40”&gt;</li><li>maxlength属性规定输入字段允许的最大长度<br>  例如：&lt;input type=”text” name=”firstname” maxlength=”10”&gt;</li></ul>]]></content>
    
    <summary type="html">
    
      html作为一种超文本标记语言
    
    </summary>
    
      <category term="职场进阶" scheme="http://yoursite.com/categories/%E8%81%8C%E5%9C%BA%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>jdbc方式连接sql</title>
    <link href="http://yoursite.com/2017/11/26/mysql%E8%BF%9E%E6%8E%A5/"/>
    <id>http://yoursite.com/2017/11/26/mysql连接/</id>
    <published>2017-11-26T06:27:48.000Z</published>
    <updated>2017-11-26T06:53:04.451Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer5" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer5"),narrow: false,autoplay: true,showlrc: 0,music: {title: "相思",author: "毛阿敏",url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%AF%9B%E9%98%BF%E6%95%8F%20-%20%E7%9B%B8%E6%80%9D.mp3",pic: "",}});</script><h1 id="JDBC基础知识"><a href="#JDBC基础知识" class="headerlink" title="JDBC基础知识"></a>JDBC基础知识</h1><p>JDBC是一种底层的API<br>通过编写java程序，调用标准的sql语句访问数据库，（只需要在程序的业务逻辑中嵌入sql）<br>JDBC不能直接访问数据库，必须依赖数据库厂商提供的JDBC驱动<br>JDBC同数据库完成以下三个工作：</p><ul><li>同数据库建立连接</li><li>向数据库发送sql语句</li><li>处理从数据库返回的结果<br>JDBC提供了很多的类和接口，实现与数据库的连接，这些接口位于java.sql中</li></ul><h1 id="DirverManager类的常用方法"><a href="#DirverManager类的常用方法" class="headerlink" title="DirverManager类的常用方法"></a>DirverManager类的常用方法</h1><p>getConnection(String url,String user,String password)<br>url：连接数据库的urL;user：用户名；password:密码<br>setLoginTimeout()<br>获取驱动程序试图登录到某一数据库时可以等待的最长时间，以秒为单位<br>println(String message)<br>将一条消息打印到当前的JDBC日志</p><h1 id="Connection类的常用方法"><a href="#Connection类的常用方法" class="headerlink" title="Connection类的常用方法"></a>Connection类的常用方法</h1><p>createStatement()<br>创建并返回一个Statement实例，通常在执行无参的sql语句时创建的实例<br>prepareStatement()<br>创建并返回一个<br>println(String message)<br>commit()<br>rollback()<br>close()</p><h1 id="Statement接口（在此嵌入、发送sql语句）"><a href="#Statement接口（在此嵌入、发送sql语句）" class="headerlink" title="Statement接口（在此嵌入、发送sql语句）"></a>Statement接口（在此嵌入、发送sql语句）</h1><p>execute(String sql)<br>执行静态的SELECT语句，该语句可能返回多个结果集<br>executeQuery(String sql)<br>执行给定的SQL语句，该语句返回单个ResultSet对象<br>clearBatch()<br>清空此Statement对象的当前SQL命令列表<br>addBatch(String sql)<br>将给定的SQL命令添加到此Statement对象的当前列表中。如果驱动程序不支持批量处理将抛出异常<br>close()<br>释放Statement实例占用的数据库和JDBD资源                    </p><h1 id="可执行动态SQL的接口PreparedStatement"><a href="#可执行动态SQL的接口PreparedStatement" class="headerlink" title="可执行动态SQL的接口PreparedStatement"></a>可执行动态SQL的接口PreparedStatement</h1><h1 id="操作数据库的步骤"><a href="#操作数据库的步骤" class="headerlink" title="操作数据库的步骤"></a>操作数据库的步骤</h1><pre><code>加载JDBC驱动程序    Class.forname(String driverManager)例如：try{Class.forname(&quot;net.source.jtds.jdbc.Driver&quot;);}catch(ClassNotFoundException e){ e.printStackTrace();}创建数据库连接Connection conn=DriverManager.getConnection(String url,String user,String password);</code></pre><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetConn</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> Connection conn= <span class="keyword">null</span>;<span class="comment">//创建Connection的对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;<span class="comment">//获取数据库连接的方法</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载数据库的驱动</span></span><br><span class="line"><span class="comment">//指定连接数据库的URL</span></span><br><span class="line">String url = <span class="string">"jdbc:mysql://localhost:3306/labmemberinfo"</span>;</span><br><span class="line">String user= <span class="string">"root"</span>;</span><br><span class="line">String password = <span class="string">"123456"</span>;</span><br><span class="line">conn = DriverManager.getConnection(url,user,password);</span><br><span class="line"><span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">"数据库连接成功"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="comment">//异常处理</span></span><br><span class="line"><span class="keyword">return</span> conn;<span class="comment">//返回connection对象</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;<span class="comment">//创建GetConn对象</span></span><br><span class="line">GetConn getConn=<span class="keyword">new</span> GetConn();</span><br><span class="line">getConn.getConnection();<span class="comment">//调用连接数据库的方法</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      JDBC（java database connectivity）是一种有关数据库连接的技术
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="JDBC" scheme="http://yoursite.com/tags/JDBC/"/>
    
      <category term="数据库连接" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>Java web项目开发实例一</title>
    <link href="http://yoursite.com/2017/11/23/Java-web%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2017/11/23/Java-web项目开发实例/</id>
    <published>2017-11-23T08:40:32.000Z</published>
    <updated>2017-11-23T12:08:01.435Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer2" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer2"),narrow: false,autoplay: true,showlrc: 0,music: {title: "如果来生还是今世的重复",author: "杭宏",url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%9D%AD%E5%AE%8F%20-%20%E5%A6%82%E6%9E%9C%E6%9D%A5%E7%94%9F%E8%BF%98%E6%98%AF%E4%BB%8A%E4%B8%96%E7%9A%84%E9%87%8D%E5%A4%8D.mp3",pic: "",}});</script><p>实现简单的用户登录网站，具体功能有：提供一个登录界面（Login）,包括用户名，密码等；然后验证用户输入的信息是否正确（LoginCl），如果正确，跳转提示登录成功的界面；错误则返回到登录界面<br>主要知识点：页面的跳转</p><h1 id="登录界面-Login-java-：通过html的方式实现，代码如下："><a href="#登录界面-Login-java-：通过html的方式实现，代码如下：" class="headerlink" title="登录界面(Login.java)：通过html的方式实现，代码如下："></a>登录界面(Login.java)：通过html的方式实现，代码如下：</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zy.firstWeb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理get请求</span></span><br><span class="line"><span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line"><span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line"><span class="comment">//业务逻辑</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中文乱码</span></span><br><span class="line">res.setContentType(<span class="string">"text/html;charset=gbk"</span>);</span><br><span class="line">PrintWriter pw=res.getWriter();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回登录界面</span></span><br><span class="line">pw.println(<span class="string">"&lt;html&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"&lt;body&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"&lt;h1&gt;登录界面&lt;h1&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"&lt;form action=servlet/LoginCI method=post&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"用户名:&lt;input type=text name=usrname&gt;&lt;br&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"密码:&lt;input type=password name=passwd&gt;&lt;br&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"&lt;input type=submit value=loing&gt;&lt;br&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"&lt;/form&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"&lt;/body&gt;"</span>);</span><br><span class="line">pw.println(<span class="string">"&lt;/html&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">ex.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//处理post请求</span></span><br><span class="line"><span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line"><span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line"><span class="comment">//用this传给get方法</span></span><br><span class="line"><span class="keyword">this</span>.doGet(req,res);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="处理、验证用户的登录信息（）LoginCl"><a href="#处理、验证用户的登录信息（）LoginCl" class="headerlink" title="处理、验证用户的登录信息（）LoginCl"></a>处理、验证用户的登录信息（）LoginCl</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zy.firstWeb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">//验证用户提交的信息是否正确，用req</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"serial"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginCI</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理get请求</span></span><br><span class="line"><span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line"><span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line"><span class="comment">//业务逻辑</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//接受用户名和密码</span></span><br><span class="line">String u=req.getParameter(<span class="string">"usrname"</span>);</span><br><span class="line">String p=req.getParameter(<span class="string">"passwd"</span>);</span><br><span class="line"><span class="comment">//验证</span></span><br><span class="line"><span class="keyword">if</span>((u.equals(<span class="string">"zy"</span>))&amp;&amp;(p.equals(<span class="string">"123"</span>)))&#123;</span><br><span class="line"><span class="comment">//合法</span></span><br><span class="line"><span class="comment">//跳转到wel</span></span><br><span class="line">res.sendRedirect(<span class="string">"Wel"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//不合法</span></span><br><span class="line"><span class="comment">//跳转</span></span><br><span class="line">res.sendRedirect(<span class="string">"Login"</span>);</span><br><span class="line"><span class="comment">//写你要的servlet的那个servlet的url，</span></span><br><span class="line"><span class="comment">//myeclipse自动生成的web.xml文件中的url-pattern，格式为/servlet/****,作为跳转对象，浏览器报404错误，认为去掉servlet保留成/***的形式，跳转会成功,可能就不能写成两个/的形式吧！！！！！</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">ex.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//处理post请求</span></span><br><span class="line"><span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line"><span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line"><span class="comment">//用this传给get方法</span></span><br><span class="line"><span class="keyword">this</span>.doGet(req,res);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="登录成功的欢迎页面（Well-java"><a href="#登录成功的欢迎页面（Well-java" class="headerlink" title="登录成功的欢迎页面（Well.java)"></a>登录成功的欢迎页面（Well.java)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.zy.firstWeb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wel</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理get请求</span></span><br><span class="line"><span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line"><span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line"><span class="comment">//业务逻辑</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">PrintWriter pw=res.getWriter();</span><br><span class="line">pw.println(<span class="string">"wel.hello"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">ex.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//处理post请求</span></span><br><span class="line"><span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line"><span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req,HttpServletResponse res)</span></span>&#123;</span><br><span class="line"><span class="comment">//用this传给get方法</span></span><br><span class="line"><span class="keyword">this</span>.doGet(req,res);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="配置信息如下：web-xml"><a href="#配置信息如下：web-xml" class="headerlink" title="配置信息如下：web.xml"></a>配置信息如下：web.xml</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.zy.firstWeb.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.zy.firstWeb.Login<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginCI<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.zy.firstWeb.LoginCI<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Wel<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.zy.firstWeb.Wel<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginCI<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/LoginCI<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Wel<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Wel<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      跟着韩顺平的视频练习的一个Java web程序开发，搞不懂为什么和他一样用Jcreator工具开发报404错，用myclipse却可以,版本问题？
    
    </summary>
    
      <category term="案例练习" scheme="http://yoursite.com/categories/%E6%A1%88%E4%BE%8B%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="servlet开发" scheme="http://yoursite.com/tags/servlet%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>servlet开发</title>
    <link href="http://yoursite.com/2017/11/22/servlet%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2017/11/22/servlet开发/</id>
    <published>2017-11-22T05:38:58.000Z</published>
    <updated>2017-11-23T08:37:53.773Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer6" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer6"),narrow: false,autoplay: true,showlrc: 0,music: {title: "最后的倾诉",author: "韩磊",url: "http://ozjh9fb7b.bkt.clouddn.com/%E9%9F%A9%E7%A3%8A%20-%20%E6%9C%80%E5%90%8E%E7%9A%84%E5%80%BE%E8%AF%89.mp3",pic: "",}});</script><h1 id="Jsp是基于servlet的，servlet的开发流程如下："><a href="#Jsp是基于servlet的，servlet的开发流程如下：" class="headerlink" title="Jsp是基于servlet的，servlet的开发流程如下："></a>Jsp是基于servlet的，servlet的开发流程如下：</h1><ul><li>在tomacat的文件夹（\webapps）下新建servelt名，然后在其中创建WEB-INF的文件夹，WEB-INF文件夹至少包含两个文件夹分别是classes(用于存放servlet程序编译生成的class文件，)，lib文件夹（用于存放包jar，图片等资源），一个文件web.xml</li><li>开发servlet（编写程序，引入servlet-api.jar）</li><li>部署你的servlet（就是在tomcat那里登记自己开发的servlet的名称位置等信息，通过在WEB-INF文件夹下新建web.xml文件）</li><li>启动tomcat，访问你的servlet(在浏览器中输入地址:http//“ip地址（本机可用localhost代替）”:8080/myWebsite/servlet名)<h1 id="servlet程序"><a href="#servlet程序" class="headerlink" title="servlet程序"></a>servlet程序</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="comment">//这是我的第一个servlet，使用servlet接口的方式实现</span></span><br><span class="line"><span class="keyword">package</span> com.zy;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//该函数用于初始化serlvet（类似于类的构造函数</span></span><br><span class="line"> <span class="comment">//该函数只会被调用一次（当用户第一次访问该servlet时被调用）</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig parm1)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Add your code here</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletConfig <span class="title">getServletConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Add your code here</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//该函数用于处理逻辑</span></span><br><span class="line"> <span class="comment">//程序员应当将业务逻辑代码写在这里</span></span><br><span class="line"> <span class="comment">//当用户每访问该servlet时，都会被调用</span></span><br><span class="line"> <span class="comment">//req:用于获得客户端（浏览器）的信息</span></span><br><span class="line"> <span class="comment">//res:用于向客户端（浏览器）返回信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest req, ServletResponse res)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为了解其执行方式，让它在控制台打印</span></span><br><span class="line">System.out.println(<span class="string">"service it"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//从res中得到PrintWrite</span></span><br><span class="line">PrintWriter pw=res.getWriter();</span><br><span class="line">pw.println(<span class="string">"hello world"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getServletInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Add your code here</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//销毁servlet实例（释放内存）</span></span><br><span class="line"> <span class="comment">//1.reload改servlet</span></span><br><span class="line"> <span class="comment">//2.关闭servlet</span></span><br><span class="line"> <span class="comment">//3.关机</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Add your code here</span></span><br><span class="line">System.out.println(<span class="string">"destroy"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="文件部署"><a href="#文件部署" class="headerlink" title="文件部署"></a>文件部署</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;!-- 给你的servlet取名，任意的--&gt;</span><br><span class="line">&lt;servlet-name&gt;hello&lt;<span class="regexp">/servlet-name&gt;</span></span><br><span class="line"><span class="regexp">     &lt;!--指明servlet的路径，（包名+类名）--&gt;</span></span><br><span class="line"><span class="regexp">&lt;servlet-class&gt;com.zy.Hello&lt;/</span>servlet-<span class="class"><span class="keyword">class</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">  &lt;<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br><span class="line"><span class="class">      &lt;!-- 给你的<span class="title">servlet</span>取名，任意的，与上面的名字对应--&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">servlet</span>-<span class="title">name</span>&gt;<span class="title">hello</span>&lt;/<span class="title">servlet</span>-<span class="title">name</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;!--这是在浏览器中输入的访问该<span class="title">servlet</span>的<span class="title">url</span>,任意的--&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/<span class="title">zy</span>&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">web</span>-<span class="title">app</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="完成上述两步后，然后启动tomcat，输入对应的URL可实现相关servlet的访问"><a href="#完成上述两步后，然后启动tomcat，输入对应的URL可实现相关servlet的访问" class="headerlink" title="完成上述两步后，然后启动tomcat，输入对应的URL可实现相关servlet的访问"></a>完成上述两步后，然后启动tomcat，输入对应的URL可实现相关servlet的访问</h1>]]></content>
    
    <summary type="html">
    
      Jsp是基于servlet的，servlet的开发流程如下：
    
    </summary>
    
      <category term="职场进阶" scheme="http://yoursite.com/categories/%E8%81%8C%E5%9C%BA%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="CGI" scheme="http://yoursite.com/tags/CGI/"/>
    
      <category term="Servlet" scheme="http://yoursite.com/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>Java web整合开发一</title>
    <link href="http://yoursite.com/2017/11/20/Java%20Web%E6%95%B4%E5%90%88%E5%BC%80%E5%8F%911/"/>
    <id>http://yoursite.com/2017/11/20/Java Web整合开发1/</id>
    <published>2017-11-20T12:30:33.000Z</published>
    <updated>2017-11-21T03:40:34.061Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: true,showlrc: 0,music: {title: "白龙马",author: "樊竹青",url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%A8%8A%E7%AB%B9%E9%9D%92%20-%20%E7%99%BD%E9%BE%99%E9%A9%AC.mp3",pic: "",}});</script><h1 id="静态页面"><a href="#静态页面" class="headerlink" title="静态页面"></a>静态页面</h1><p>&#160; &#160; 单纯的用Html、CSS（负责对Html整体管理，可以内嵌到Html语言，也可以单独编写成文件，在Html语言中外部引用）语言编写的页面，其特点就是“死的”，无法与外部进行交互，就像搭建的博客本身，呈现给读者的只是一个单纯的网页，这个网页除了开发者从后台操作之外，并不会“动”</p><p>&#160;&#160;为了让网页“活起来”，CGI（Common Gateway interface，公共网关接口）诞生了，特点是运行在服务器端，根据不同客户端请求输出相应的HTML页面，然后Web服务器再把这个静态页面返回给浏览器作为客户端的响应。</p><pre><code>                                                                    ***********服务器端**********                                                                    *                            *                                                                    *                             *        1.输出URL地址   *              2.向服务器发送浏览请求  3.请求运行                    5.输出生成    **********************            *************************   某个CGI程序                 HTML语言                        *                                            *                              *用户                        客户端                                  *                            *     *                        浏览器     *                                 * *                         * *        **********************            *************************       *                           *     *    7.显示HTML                     * 6.返回HTML页面作出响应          CGI程序生成所需的HTML文件                                                                                    *                                                                                                   *                                                                          4.读取数据库或者文件                                                                                   *                                                                                   *                                                                                  数据库                                          CGI的操作过程</code></pre><p>类比java程序，CGI程序的语言主要有两种Perl和shell脚本(java，c，c++均可)，CGI可以访问存储数据库中的数据或者其他系统中的文件，实现动态生成效果。<br>不足之处：<br>    每个请求均需要启动一个可执行的CGI程序，如果请求频繁。。。<br>    为了解决这个问题，改进的CGI诞生了，即所谓的Java Servert，本质上是程序（在Java中程序是以类为单位的，没毛病吧？，这其实也是servert比CGI的高明之处，CGI有点像面向过程，而Servlet面向对象，可供多个对象同时调用），用于处理来自浏览器的指令（网址），并向浏览器输出html代码，该程序提供了多种类及其方法却没有main方法，所以不能主动执行，由web服务器如（Tomcat）调用Servlet的中的方法来实现。</p><p>&#160;&#160;&#160;&#160;Servert的模板：JSP（Java Server Pages）<strong><em>*</em></strong>实现普通静态html和动态html混合编码，其是Servlet API的扩展，把它当成servlet的一种</p><h4 id="JSP基本原理"><a href="#JSP基本原理" class="headerlink" title="JSP基本原理"></a>JSP基本原理</h4><ol><li>翻译：编写好的JSP（.jsp文件）文件首先会被Web容器中JSP（也是Servlet引擎）引擎转换成Java源代码。</li><li>编译：Java代码通过Jvm(Java虚拟机)编程成可执行的字节码（二进制形式）</li><li>请求：当Web服务器（“容器”）接受了客户端的请求后，执行上述的字节码，生成相应的页面反馈给浏览器显示</li></ol><p>Java Web开发环境：开发者工具包JDK，集成开发环境IDE（集编写、编译、部署和调试程序的“一条龙服务”），Java Web服务器（所谓的“容器”），web应用程序都需要部署到容器中运行</p>]]></content>
    
    <summary type="html">
    
      静态页面，动态页面，服务器。。。
    
    </summary>
    
      <category term="职场进阶" scheme="http://yoursite.com/categories/%E8%81%8C%E5%9C%BA%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="CGI" scheme="http://yoursite.com/tags/CGI/"/>
    
      <category term="Servlet" scheme="http://yoursite.com/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>。。。</title>
    <link href="http://yoursite.com/2017/11/19/2017119/"/>
    <id>http://yoursite.com/2017/11/19/2017119/</id>
    <published>2017-11-19T07:27:33.000Z</published>
    <updated>2017-11-21T14:39:21.794Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer1"),narrow: false,autoplay: true,showlrc: 0,music: {title: "后来",author: "刘若英",url: "http://ozjh9fb7b.bkt.clouddn.com/%E5%90%8E%E6%9D%A5.mp3",pic: "",}});</script><p>&#160; &#160; &#160; &#160;有点无奈，有点不甘心，还有点心疼，特么的，自己将来有一天肯定会后悔的，看来还是太闲了</p><p>&#160; &#160; &#160; &#160;呵呵，现在还看我博客的都是真爱粉啊，估计是自说自话吧，访客数量都没增加，还有哪位老铁在看的，可以用手机访问，多刷几次首页，貌似可以增加访客数量，让我知道有人在看，这块以后就不更了，会发点技术方面的干货，不过还是随便发恼骚，扯淡好写，其实我也想搞个留言板或者分享链接什么的，可惜现阶段水平不到家，就先搁置吧 。。。。</p><p>&#160; &#160; &#160; &#160;有点发低烧，怕冷，书书看不进去就先回来了，本来还要去做实验的，后来接到通知今晚不做了，意外的惊喜啊，今天写点什么呢，说说找工作的情况吧</p><p>&#160; &#160; &#160; &#160;什么专业？热能与动力工程，本来打算按照实验室的惯例找热设计相关的工作（主要从事电子设备散热相关），这块需求主要有通信电子设备，新能源和一些车企，其实很少有公司招这块的，一般招这块的公司都是比较牛逼的公司，小公司压根温饱都没解决，哪顾得上热设计这种部分单独招人啊<br>&#160; &#160; &#160; &#160;有人说去华为啊，中兴啊，是啊，我也想去啊，然而想去？不是你想去，想去就能去的哈，人家不要啊，后来想想也对，热能与动力工程全国每年那么多毕业生，就热设计这块远远供大于求了，作为企业，自然是“好”的捡好的跳啊，先看学校，再看项目，个人觉得项目要重于学校，关键自己手上确实没有能拿得出手的项目啊，而作为这块，企业更倾向于招进去了就可以上手做了。。。<br>&#160; &#160; &#160; &#160;其实我投的简历并不多，而且投了之后基本山都收到面试了，细数一下，投了可能都不超过十家，投的都是不太起眼的公司，因为前面吃了亏啊，凡是主招咱们专业的，宣讲会基本上都爆满了，对，全是咱们专业的，呵呵，不恰当的比喻，感觉有点像“狗抢食”，像我这只本科出生不好的狗往往连简历筛选关都过不了啊，这种情况投了两三次后，我特么醒悟了，就咱们专业，而大多数人都没有相关的实习，所以用人单位看学历、看出身是最高效，也是保险的做法。嗯，在咱们学校，我玩不过你们啊，所以我把爪子伸向了南京周边高校，嘿嘿，效果还是很明显的啊，至少投了基本上都让去面试了，而且都到了谈工资的份上了，然后在等通知的过程中都渐渐的黄了。。。后来跟别人交流，可能工资期望值过高是一个重要的原因，唉，毕竟是传统行业嘛。。。。<br>&#160; &#160; &#160; &#160;虽然嘴硬，虽然自己也并不咋地，虽然。。。。但其实我特么还是挺挑的，省外的基本上不考虑，省内也只考虑苏锡常，省外只考虑杭州，其实当时想去杭州的，有点没想到的是，喜欢的那个人暑假期间在浙大发了个朋友圈，无奈当时，心都凉半截了，不过当时还是有点。。。说不上来，反正觉得三观很合啊，很有缘分啊，唉，感觉本来有机会的啊，奈何被自己搞砸了，不知道自己当时在想什么。。。<br>&#160; &#160; &#160; &#160;有的时候觉得找工作和找女朋友很像啊，都要双方都看得上眼，奈何我这个自身实力不咋地还特么挑，找的到就怪了。。。我没有像身边的很多同学那样海投，即使海投中了，不喜欢的企业，我也绝不会，其实当时有点王八吃秤砣，铁了心了，这找工作和找对象能特么一样吗，手上多几个offer总归是好的，这说明自己比较优秀，找对象，多找几个，那是人品有问题。。。是吧，所以在自己喜欢的工作不要自己或者晾着自己等消息时，还要继续捕捞啊，小鱼小虾啥的，先抓只在手上啊。。。<br>&#160; &#160; &#160; &#160;苏州一次（苏州那次是在他们去苏州时，真的让那个谁又说中了，早知道跟他们去苏州了），无锡一次，这两次我都没有通过校招，都给offer了，感觉自己还是要折腾啊，无锡这份工作，虽然起薪不高，但是我很喜欢，所以我当下就决定了，难得人家不嫌弃咱半路出家的，愿意给个机会，真的挺感激的，当时HR还担心被放鸽子，我回到学校拿到三方就寄出去了，平台还算不错吧，先辛辛苦苦干个两年吧，充实自己，然后在考虑其他。。。当时这么想的，确实过程确实是有点难，不过没关系，只要能够预见到结果，我愿意去努力，去尝试的。。。<br>&#160; &#160; &#160; &#160;工作定了，现在又要考虑个人问题了，呵呵，好难，感觉比找工作难多了，感觉现阶段的运气被这份工作耗光了都，每次说到这个话题，我还是会第一时间想到你，其实也挺怪的，其实我们单独相处的时间并不长啊，（当然当时也不长，当时也是脑袋一拍就约看电影了，不知道哪来的勇气都），自暑假后，我以为我们之间会隔着千山万水。。。如果你能找到一个真心喜欢你的和你真心希望的，(其实操场上那次那家伙应该还不错的，反正我是自愧不如)我也就甘心了（我特么有这么伟大吗），还有一层原因，不想依赖实验室这层关系，半点都不想，我不想今后的生活绑着一些无关的东西，要苟延残喘的去迎合。。。好吧，又死心眼了，可能离开这儿后慢慢就会好了，就这样吧，长这么大，头一次喜欢一个人这么久，还是想对你好，只是终究名不正言不顺。。。其实除了你那届的，实验室其他的小伙伴都知道我约你看电影的事了，撞见那谁谁了，感觉自己确实不适合干坏事，第一次就败露了，还是感谢小伙伴的，都有意撮合过，只是你不知道，如果注定看不到结果，那就保持原来的样子吧。（感觉自己这个想法很危险啊，感觉是把将来别人介绍、相亲这条路给堵死了啊）。。。</p>]]></content>
    
    <summary type="html">
    
      该敲点啥，好吧，又矫情了
    
    </summary>
    
      <category term="生活杂感" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E6%84%9F/"/>
    
    
      <category term="恼骚" scheme="http://yoursite.com/tags/%E6%81%BC%E9%AA%9A/"/>
    
      <category term="无病呻吟" scheme="http://yoursite.com/tags/%E6%97%A0%E7%97%85%E5%91%BB%E5%90%9F/"/>
    
  </entry>
  
  <entry>
    <title>初步看书后的困扰</title>
    <link href="http://yoursite.com/2017/11/19/%E5%BD%93%E4%B8%8B%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/11/19/当下的问题/</id>
    <published>2017-11-19T07:27:33.000Z</published>
    <updated>2017-11-20T09:12:01.920Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer7" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer7"),narrow: false,autoplay: true,showlrc: 0,music: {title: "渔舟唱晚",author: "浦琦璋",url: "http://ozjh9fb7b.bkt.clouddn.com/%E6%B5%A6%E7%90%A6%E7%92%8B%20-%20%E6%B8%94%E8%88%9F%E5%94%B1%E6%99%9A%20%28cut%E7%89%88%29.mp3",pic: "",}});</script><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>&#160; &#160; &#160; &#160;根据单位那边同事的建议，工作这要涉及到的知识有java，javascript,spring框架，extjs框架，oricle数据库，Sql语句，工作的内容包括了从网站搭建到后台数据库的交互。<br>   <a id="more"></a></p><h1 id="计划和进度"><a href="#计划和进度" class="headerlink" title="计划和进度"></a>计划和进度</h1><p>&#160; &#160; &#160; &#160;毕竟是半路出家，自己要做好打算，而且根据那边的意思可能要涉及到人工智能、无监督学习方面的知识等等，这不正是自己希望的嘛</p><h2 id="先把网铺开"><a href="#先把网铺开" class="headerlink" title="先把网铺开"></a>先把网铺开</h2><p>&#160; &#160; &#160; &#160;七年间与计算机方面相关的也就是编程这一小块了，现在要做的就是把这个领域的知识网铺开，先有语言基础开始，慢慢往外拓宽，目前的状态时，看完了java语言编程，能编写简单的小程序，对着书能够写程序实现对数据库的简单访问和数去读取；前端方面，学习了html、css和javascript，按照知乎上大牛们的建议，学习这些知识后，基本上就可以弄一些项目练练手了，目前手上的书籍中的项目感觉都比较冗大，都是真实的企业级项目，感觉好吃力。<br>  <!--more--></p><h1 id="困惑和不解"><a href="#困惑和不解" class="headerlink" title="困惑和不解"></a>困惑和不解</h1><p>&#160; &#160; &#160; &#160;先把现有的问题抛在这面，以后来逐一解释：<br>&#160; &#160; &#160; &#160;1.就拿之前的酒店企业进销存管理系统来说，必然要涉及到用户、商品信息的读取吧，实现这些方法的class可以用java写，难以理解的是，在class对象化的过程中必然要去读取数据库既有的商品、用户信息，在成功连接数据库后，数据库中各种信息是以何种方式，分门别类的传向相关的类实现数据的调用的(感觉问题都没列清楚啊)<br>&#160; &#160; &#160; &#160;2.java面向对象编程的一个核心技术是API的应用，说白了，java自身帮我们已经写了大量的函数，在开发过程中，程序猿要尽量去调用现有的API（即方法，C中称为函数），如何快速的找到自己所需的API。（这跟开发工具的使用有关吧，单位用的intellij idea，捣鼓去吧）<br>&#160; &#160; &#160; &#160;3.前端方面，html和css较为容易，javascript也比较好掌握，但是如何把它们结合起来写一个像样的网站出来，这需要练习，初步想法是选几个网站，利用上述的知识把它们的网站复现出来<br>&#160; &#160; &#160; &#160;4.框架，就目前的看到的相关知识，还未涉及到，感觉一头雾水啊</p>]]></content>
    
    <summary type="html">
    
      11月1号敲定的工作（感觉工作定的好随意，一拍脑袋的功夫），嗯，不知不觉，时间过的挺快，如自己所愿，算是换行了，好吧，这是一步险棋
    
    </summary>
    
      <category term="职场进阶" scheme="http://yoursite.com/categories/%E8%81%8C%E5%9C%BA%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="前端开发" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="框架" scheme="http://yoursite.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>本科学习报告（本科阶段写的，摘上来充数）</title>
    <link href="http://yoursite.com/2017/11/17/my-second-blog/"/>
    <id>http://yoursite.com/2017/11/17/my-second-blog/</id>
    <published>2017-11-17T03:27:33.000Z</published>
    <updated>2017-11-19T11:45:06.238Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer4" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer4"),narrow: false,autoplay: true,showlrc: 0,music: {title: "白夜",author: "尹姝贻",url: "http://ozjh9fb7b.bkt.clouddn.com/%E5%B0%B9%E5%A7%9D%E8%B4%BB%20-%20%E7%99%BD%E5%A4%9C.mp3",pic: "",}});</script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  假如没有考研，要我评价一下自己的大学生活，四个字足矣：庸庸碌碌。没有拿过什么出色的奖项，没有干过班干部，没有组织过像样的活动，没有谈过像样的恋爱……就连四、六级都是低分飘过,好像大家眼中所期待的大学里最美好的事物通通都与我无关。毫不夸张的讲，在大学这个小社会里我可能就属于所谓的“草根”。大学，可以成就一个人，也可以毁掉一个人，有追求的人通过自己的努力离梦想越来越近，而相当一部分人过于沉迷象牙塔的“美好”，无所事事，浑浑噩噩早已偏离了最初的航线。而我决不能够容忍我的大学、我的青春如此草草收场，在这人生最值得怀念的日子同时也是最值得奋斗的日子里，我希望留下点什么，不为别的，只为将来的自己在回忆这段刻骨铭心的岁月时能够多一份感动、少一分懊悔。就像自己的高四，整整一年的时间，一个人在学校的附近租个房子，三点一线，独自面对压力，慢慢的让自己的内心变得强大，现在想来，还是有那么一丝感动的（其实，真的很感谢爸爸妈妈，让我真正的任性了一回）。考研，也是一个锻炼心智的好机会，我不想错过，一方面证明自己的实力，通过踏踏实实的努力圆了自己的名校梦，另一方面，越往上走，所处的平台不一样了，周围的人不一样了，机会可能会更多。</p>   <a id="more"></a><p>  关于报考学校的选择，我建议大家先考虑几个，刚开始的时候可以将目标适当的定高点，这样前期复习起来劲头更足，等到暑假那段时间结合前面阶段的复习状态，可以再好好考虑到底要报考哪个学校。我刚开始准备的时候，定了3个目标，分别是：西安交大、浙大、东大。后来再三考虑还是选择了东大，首先，西交大地理位置太远，读本科的时候本来就有机会去外省的好点儿学校，当时父母嫌远没有答应，读研自己也感觉没必要再折腾那么远；其次，浙大和东大这两个学校我纠结了好久，按照浙大的专业课准备了好久，觉得自己按照往年的数据来看还是有把握的，可是后来还是放弃了，一方面，今年政策变了，保研的人越来越多，况且浙大的统考招生人数迟迟没有公布，不敢托大，毕竟自己认真准备了一年，还是想有所收获，不想败在选择上；另一方面，东大同学比较多，而且还有几个中学时期的好友也准备报考东大，希望能够再续“前缘”吧；此外，父母也希望我能够“稳”一点儿，记得当时当我告诉老爸我要考浙大时，老爸是犹豫的“儿子，我和你妈可没有非要你出人头地”。万一考不上其实于我个人来说没什么，重在过程嘛！可是我知道爸妈希望我能够考上，所以还是决定慎重选择（大家都过了任性的年龄了，不能光为了自己，要知道我们现在所作的每一个决定都将影响一个家庭）。</p><p>  下面我简单总结一下自己的备考过程：</p>  <!--more--><h1 id="初试准备阶段"><a href="#初试准备阶段" class="headerlink" title="初试准备阶段"></a>初试准备阶段</h1><p>  我简单把备考分为4个阶段:<br>  第一阶段：大三下学期（我是从3月中旬开始的）。<br>  第二阶段：暑假（大致是6月底到8月底）。<br>  第三阶段：大四上学期开学到考前20天左右。<br>  第四阶段：考前20天到考试。  </p><p>  在备考的第一阶段，复习主要以数学和英语为主，政治和专业课没必要看。</p><p>  数学方面，可以先把课本先看2到3遍，至于课本上的习题到底要不要做，因人而异。如果你的数学基础比较扎实，可以不做，或者每一大章挑一些题目做一下，基础稍微薄弱一点的或者说对数学缺乏信心的同学在做题时，也不要太追究对错，对于所谓的难题没必要深究，做到心中有数以免影响信心和进度。记得当时复习时总有人拿一些难和怪的积分题目问我，绝大多数的题，我也做不出来，其实，积分只是作为一个工具，我们只需掌握其一般的类型和解法即可，考试若真考到技巧性强的题，做不出来也没关系，大家都不会。举这个例子，就是想告诉大家，复习时一定要有大局观，不要片面的去追究一个点，否则会很容易出现所谓的“卡壳”现象，前期很多人放弃就是因为这个原因。建议看完一门课本后接着就去看数学全书上相应的部分，不要非等着把高数、线代、概率论4本书都看完了再去看全书，那样可能等到你看全书的时候，之前看的很多东西也忘的差不多了。（李王版的数学全书上可能有错误，大家遇到有疑问的地方可以互相讨论）至于全书怎么看，四个字：一字不落。上面的每道例题都应该理解透彻，总之，复习全书时应该是毫无保留的。</p><p>  对于英语，第一阶段，主要是以背单词为主，不管是红宝书还是新东方的，选择一本，每天抽一个小时（早、中、晚各20分钟）左右的时间背一下，同样，背单词也需要大局观，第一遍背的时候也不要太纠结于某个单词，按照自己的计划先将单词书背一遍，背的时候注意回顾以前背的，反复记忆。</p>   <!--more--><h1 id="第二阶段：暑假（强化阶段）。"><a href="#第二阶段：暑假（强化阶段）。" class="headerlink" title="第二阶段：暑假（强化阶段）。"></a>第二阶段：暑假（强化阶段）。</h1><p>  整个考研过程中最值得怀念的应该就是暑假了。一方面，酷暑难当，每天晚上一个人在宿舍大汗淋漓，热的睡不着觉，遇到雷雨天气，冒雨涉水的去教室复习（当时就在想，付出这么多，一定会有回报的，即使真的考不上也没关系，就凭着这股拼劲，我今后什么事都可以做的很好）；另一方面，暑假里没有课不用考试，时间都是属于自己的，是进行系统复习的最佳时机。强调一点，除非你自己自觉性超级强，否则别自欺欺人在家里复习，还是乖乖回到学校，按照平时上课的作息时间要求自己，别待在宿舍，宿舍只是睡觉的地方，仅此而已。</p><p>  第二阶段的复习还是以数学和英语为主，数学继续全书的复习，英语每天可以做两篇阅读理解，这里推荐张建的黄皮书系列的《阅读150篇》，不要在意对错，我当时平均每篇错3到4个，有的时候全军覆没，其实这个说明不了任何问题，做这个的目的在于更好的记单词，可能你会发现，第一阶段背过的很多单词放到具体的阅读中就不知道意思了。每做完一篇阅读，一定要结合解析将文中的每个单词意思弄懂，同时在书上做好笔记，每个星期可以挑选做过的阅读中一到两篇书面翻译（别人介绍的，据说效果很好，我个人没尝试过）。</p><p>  到第二阶段结束（开学初），数学全书第一遍应该看完了，大家一定要注意这个时间节点，另外需要强调的还是复习的反复性，数学的复习之所以难，一个重要原因就是内容多，杂，容易遗忘，所以一定要抽出时间回顾前面的知识，比如，当你复习线代时，隔三天回顾一下高数，回顾时，可以结合全书在纸上列一下知识点以及解题易错点，如此的反复回顾应该是贯彻着整个复习过程和各个科目。</p>   <!--more--><h1 id="第三阶段（提高期）。"><a href="#第三阶段（提高期）。" class="headerlink" title="第三阶段（提高期）。"></a>第三阶段（提高期）。</h1><p>  这学期是大四的上学期了，很多专业基本上没什么课了，我们专业例外，满满的全是课，这个时候大家就要擦亮眼睛注意选择性的翘课，切记:鱼和熊掌不可兼得，具体的讲就是：有机会，果断翘。还有群众关系一定要搞好（说到这儿，还是要好好感谢好兄弟门，遇到老师点名果断发短信、打电话），便于遇到管的严的老师时及时赶到。至于期末考试，一般老师都会理解考研同学的，考前都给了重点，所以大家不要傻傻的担心期末考试而影响了自己的复习，得不偿失，再次强调，如果你立志考研，对于期末考试，一定要相信：办法总比困难多、车到山前必有路。</p><p>  第三阶段复习，专业课应该抓起来了（专业课学的渣的同学暑假期间就可以开始准备了），我考的是传热学，说实话，当时学的也不好。首先花一个月左右的时间将课本认认真真的看一遍，课本中的例题和习题一定要挑着做一点，另外，对全书知识体系要有一个整体的把握，能将前后章节串起来，便于理解，这里推荐西交大王秋旺编的《传热学知识精要》作为参考书(选考工程热力学的应该也有类似的书,原书已绝版，复印本在淘宝可买)。课本看完一遍后，开始研究报考学校的专业课真题，第一遍可以大致看看，肯定有很多不会的，不用心慌，重点是把握一下人家的题型，常考知识点。然后再看课本，这遍看课本的时候心中应该有所侧重，同时，做好笔记，将自己认为重要的知识点整理出来，加深理解和记忆。</p><p>  另外，报考院校的历年真题的获取方法：</p><p>  第一、通过本校在那读研的学长学姐；</p><p>  第二、百度搜索，考研论坛(一般都能找到的)；</p><p>  第三、报考院校的考研群，可能是有偿的；  </p><p>  第四、淘宝上买（不推荐，太不靠谱，几百块，有时候发给你的可能就是百度里面现成的东西）；  </p><p>  至于政治的复习，完全可以等到考研大纲出来再复习，政治大纲解析（所谓的“红宝书”不建议买，如果考纲有变化，各大考研机构的资料里都会有所体现），政治复习资料推荐肖秀荣系列（对于政治资料的购买千万不要“吃着眼里看着锅里的”，盲目贪多，最后只能是一个下场：看不完，该掌握的没掌握），当然，报辅导班的同学只要跟着辅导班的进度走即可（我没有报班，现在想来，还是建议大家政治可以报个班，从今年考试情况来看，客观题趋向更加灵活，侧重理解，单凭记忆效果不好），如果实在不想报班的，最好花个一、两块钱到淘宝上买一些考研机构的讲课视频看一看（追着一个人看即可，不可贪多）。本阶段政治复习的主要任务就是过一遍考研政治的知识点，过的时候可以结合肖秀荣的《1000题》检测自己看书的效果，有所侧重，加深对知识点的理解。</p><p>  英语方面复习的重点还是在阅读上，建议这阶段每天做4篇阅读理解，时间控制在60到70分钟，做完后一定要花更长的时间去整理，另外，历年的真题也必须带着做了，建议一个星期做两年的真题，做真题的顺序当时是年代越久的先做，最近两三年的最好留到后期做，避免后期闹“题荒”。  </p><p>  数学这阶段应该完成数学全书的第二遍复习，《660题》，以及《历年真题》，当然，全书第一遍复习如果到位，全书第二遍可以刷的快点儿。</p><p>  第三阶段的复习时间跨度很长，4门课要全部抓起来，时间上的分配一定要把握好（自己哪一科弱就多花点时间，哪一科强就少花点时间）。另外，提醒一下，如果你的执行力不强，在制定复习计划时，没必要过于详细，甚至精确到分秒，个人感觉那样太华而不实，计划是用来执行的，不是用来看的，况且，俗话说“计划不如变化快”，后期的复习已经够紧张的了，何苦再制定那么苛刻的计划来折腾自己，对于计划，只需做到心中有数即可。</p>   <!--more--><h1 id="第四阶段"><a href="#第四阶段" class="headerlink" title="第四阶段"></a>第四阶段</h1><p>  离走进考场已经不到一个月，如果你已经走到了这里，你应该在心里偷着乐了，因为当初好好荡荡的考研大军因为这样或那样的原因已经所剩不多了</p><p>  这个阶段，我觉得最关键的就是心态，因为大家都复习的差不多了，现在阶段主要就分两种心态。第一种：慌。感觉自己有很多东西没看完，如果你在以往的大考中有过类似的经历，我希望你在前面几个阶段的复习中能够提高效率，整个复习进度可以适当提前，这样到了这个阶段，你可能会从容、淡定一点。第二种：急。感觉自己都复习好了，巴不得明天就能考试，持有这种心态的人往往在这个时候显得很“跳”，坐不住。当然还有第三种，那就是真正的学霸、大神，自身有着超强的实力，波澜不惊（身边的大神不少，此类人有个特征，在大考中，要么一鸣惊人，要么让人大跌眼镜，个人感觉决定他们成败的只有一个因素：心态）。某种程度上我属于第二种心态，身边的研友们觉得我有点盲目自信，甚至自负（也许初试体现的不够明显，但复试着实让我摔了个跟头）。总而言之，在这个阶段，大家一定要把心态调整好，要学会积极的心理暗示，引导自己往积极的方面去想，书看不进去的时候，可以适当放松一下，上网搜点儿励志故事以及语句，时常读一读，给自己幼小的心灵灌点儿鸡汤。我当时最喜欢的一句话：宠辱不惊，笑看庭前花开花落；去留无意，漫随天外云卷云舒（可惜自己做的不够好）。有人可能会抱怨身边的学习环境、氛围不好，奉劝一句：如果你改变不了环境，就去改变自己吧，不时问问自己到底想要什么，就跟玩游戏、打刀塔似的，要将整盘比赛的节奏牢牢攥在自己手中，这样才不会为所谓的外在因素牵着走，从而乱了阵脚。</p><p> 在最后这个阶段，数学方面，保持手感，重视真题，可以做个两到三遍（我说的“做”，是要认认真真将解答过程写出来，不要感觉自己以前做过了，就可以不做，考研数学相当一部分就是考察计算能力），至于模拟题，时间紧迫的话可以不做；英语方面，开始适当的背些范文，另外一定要动手写几篇作文，之前留的近几年真题可以完完整整的做一下，作为考前模拟；政治方面，每天带着记一些知识点（风中劲草或者肖的知识点精要均可，没必要非一字不落的背，我们背这些只是为了针对选择题，看到了能选出来即可）。考前最后一周，背肖秀荣的4套卷，这个必须全部背下来，全国的考研大军都指望他押题呢，押不中大家一起吃亏而已。背的时候，可以将答案分条，方便记忆；专业课方面，课本、真题反复的刷，真题上面有计算题的一定要认认真真的算个1到2遍，切记不可眼高手低，我今年专业课计算题，很多的式子都列出来了，就是算不对，有些看到那么长的式子干脆不算了，瞎写了个数字放上面，现在想来，自己当时真是够大方的。</p>  <!--more--><h1 id="复试准备阶段"><a href="#复试准备阶段" class="headerlink" title="复试准备阶段"></a>复试准备阶段</h1><p>  东大两门指定的复试科目：《锅炉原理》和《制冷原理》。这两门课都没学过，然后咨询了往届的前辈们，结合报考的专业，选择了《锅炉原理》，虽说自我感觉自学能力还是很强的，但是真正拿到了那本书心里不免有些担忧，将近500页的一本大书，从3月2号开学开始准备，3月20号复试，前前后后3个礼拜的时间。我用7天的时间把整本书过了一遍，5天的时间结合往年的几分卷子，把书又看了一遍，这一遍有所侧重，将自认为可能的考点圈划、整理出来，剩下的时间就是看、背以及准备面试的相关材料。说实话，在做完这些的时候，个人感觉自己准备的已经可以，能考个大概，至少不会比那些自认为学过的人考的差了（这是不是就是所谓的“中庸”，父母经常调侃我，中等、平庸）。</p><p>复试笔试部分考的不好，直接导致学硕被调成了专硕（主要还是因为没有足够重视，绝不是因为没学过）。所以，我希望大家还是要好好准备复试的，别的高校我不知道，反正东大的复试真的很重要，基本上初试的一分换复试笔试的一分，要知道，初试总分是500分，笔试总分是150分，你换的起吗？另外， 如果能够找到历年复试的笔试试卷，大家一定要好好利用，把上面的每一道题都搞懂，今年有两题我不会的题目就是往年试卷上的，当时复习到了，总觉得肯定不会再考了（也不知道当时哪来的自信，真应了那句“不作就会死”了）。面试部分简单说一下流程，3分钟的英语自我介绍，然后老师会用英语问几个非专业的问题，无非是为什么报考这个专业以及读研后的打算等等，然后专业的老师会问一些专业相关的知识，包括热工基础3门课：工热，流体力学，传热学，外加一门专业课（一般是大四学的课程）。</p><p>以上就是我个人的考研经历，于你们而言，这是经验也是教训，至于我所提到的复习方法，可以借鉴，但请不要照搬，毕竟，只有适合自己的方法才是最好的。考研本身是一个过程，如果你用心的走，你会发现过程真的比结果重要的多。最后，引用乔布斯曾经说过的一段话来结束：你不能充满遇见地将生命的点滴串联起来；只有在你回头看的时候，你才会发现这些点点滴滴之间的联系，所以，你要坚信，你现在所经历的将在你未来的生命中串联起来，你不得不相信某些东西，你的直觉、命运、生活、缘分……正是这种信仰让我不会失去希望，它让我的人生变得与众不同。</p><p>2015年3月28日</p>]]></content>
    
    <summary type="html">
    
      离复试回来有好几天了，回望备考的这一年，真的是百感交集，不经想起当初刚刚决定考研时，在论坛上看到的一句形容考研的话：五味杂陈，酸甜苦辣，冷暖自知。
    
    </summary>
    
      <category term="生活杂感" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E6%84%9F/"/>
    
    
      <category term="考研" scheme="http://yoursite.com/tags/%E8%80%83%E7%A0%94/"/>
    
      <category term="选择" scheme="http://yoursite.com/tags/%E9%80%89%E6%8B%A9/"/>
    
      <category term="专业" scheme="http://yoursite.com/tags/%E4%B8%93%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>第一篇个人博客测试版</title>
    <link href="http://yoursite.com/2017/11/17/my-first-blog/"/>
    <id>http://yoursite.com/2017/11/17/my-first-blog/</id>
    <published>2017-11-17T00:58:53.000Z</published>
    <updated>2017-11-19T03:38:19.935Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>一个人最好的生活状态，<br>是该看书时看书，该玩时尽情玩，<br>看见优秀的人欣赏，<br>看到落魄的人也不轻视，<br>有自己的小生活和小情趣，<br>不用去想改变世界，</p><a id="more"></a><p>努力活出自己，没人爱时专注自己<br>有人爱时，有能力拥抱彼此！</p>]]></content>
    
    <summary type="html">
    
      说点什么好呢，域名mkitture瞎起的，可以理解为make it true，就抄一段昨天刚看到的话吧
    
    </summary>
    
      <category term="生活杂感" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E6%84%9F/"/>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="牢骚" scheme="http://yoursite.com/tags/%E7%89%A2%E9%AA%9A/"/>
    
      <category term="吐槽" scheme="http://yoursite.com/tags/%E5%90%90%E6%A7%BD/"/>
    
  </entry>
  
</feed>
